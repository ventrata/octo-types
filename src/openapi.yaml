openapi: 3.0.0
info:
  title: Ventrata OCTO API
  version: 0.0.0
tags:
  - name: Supplier
  - name: Products
  - name: Availability
  - name: Bookings
  - name: Capabilities
  - name: Orders
  - name: Mappings
  - name: Webhooks
  - name: WHOIAM
  - name: GetYourGuide
  - name: Partners
paths:
  /availability/:
    post:
      operationId: Availabilities_AvailabilityCheck
      summary: Availability Check
      description: |-
        This endpoint is slightly slower as it will return an object for each individual departure time (or day). You have to perform this step to retrieve an `availabilityId` in order to confirm a sale, so if you just want to use this endpoint and skip the calendar endpoint then that's perfectly ok.

        You must pass in one of the following combinations of parameters for this endpoint:
        - `localDate`
        - `localeDateStart` and `localDateEnd`
        - `availabilityIds`
      parameters:
        - $ref: "#/components/parameters/Octo.RequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                anyOf:
                  - type: array
                    items:
                      $ref: "#/components/schemas/Availability"
                  - $ref: "#/components/schemas/AvailabilityCheckErrorResponse"
      tags:
        - Availability
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AvailabilityCheckBody"
  /availability/calendar:
    post:
      operationId: Availabilities_AvailabilityCalendar
      summary: Availability Calendar
      description: |-
        This endpoint is highly optimised and will return a single object per day. It's designed to be queried for large date ranges and the result is used to populate an availability calendar.

        When the end user selects an open date you can call on `/availability` endpoint to get the `availabilityId` to create the booking
      parameters:
        - $ref: "#/components/parameters/Octo.RequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                anyOf:
                  - type: array
                    items:
                      $ref: "#/components/schemas/AvailabilityCalendar"
                  - $ref: "#/components/schemas/AvailabilityCalendarErrorResponse"
      tags:
        - Availability
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AvailabilityCalendarBody"
  /bookings/:
    post:
      operationId: Bookings_BookingReservation
      summary: Booking Reservation
      description: |
        Reserving availability when making a booking. The steps to make a reservation are:

        1. **Check Availability**: Check the availability on the [/availability](docs/octo/branches/main/5b08f5f75e75d-availability-check) endpoint to retrieve an `availabilityId`
        2. **Booking Reservation** (this step): Create a booking that reserves the availability while you collect payment and contact information from the customer. The booking will remain with status `ON_HOLD` until the booking is confirmed or the reservation hold expires.

        The availability for the booking is held for the amount of time equal to the`expirationMinutes` parameter (if provided), up to an internal limit set by either the supplier or the OCTo provider. The `utc_expires_at` parameter in the response object will indicate when a reservtion will expire. A reservation can be extended by calling the [/bookings/{uuid}/extend](docs/octo/branches/main/2c7924ab9128f-extend-reservation) endpoint.

        A reserved booking can be confirmed after the customer finalizes their choice on the [/bookings/{uuid}/confirm](docs/octo/branches/main/614d1613b2d70-booking-confirmation) endpoint provided the reservation had not expired.
      parameters:
        - $ref: "#/components/parameters/Octo.RequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/Booking"
                  - $ref: "#/components/schemas/BookingReservationErrorResponse"
      tags:
        - Bookings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookingReservationBody"
    get:
      operationId: Bookings_GetBookings
      summary: Get Bookings
      description: |-
        This endpoint will fetch the bookings you have made for the given filters.

        When using this endpoint you must include one of the following query parameters:

        - `resellerReference`
        - `supplierReference`
        - `localDate`
        - `localDateStart` and `localDateEnd`
      parameters:
        - $ref: "#/components/parameters/Octo.RequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
        - $ref: "#/components/parameters/Octo.GetBookingsRequest.resellerReference"
        - $ref: "#/components/parameters/Octo.GetBookingsRequest.supplierReference"
        - $ref: "#/components/parameters/Octo.GetBookingsRequest.localDate"
        - $ref: "#/components/parameters/Octo.GetBookingsRequest.localDateStart"
        - $ref: "#/components/parameters/Octo.GetBookingsRequest.localDateEnd"
        - $ref: "#/components/parameters/Octo.GetBookingsRequest.productId"
        - $ref: "#/components/parameters/Octo.GetBookingsRequest.optionId"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Booking"
              examples:
                Bad Request Response:
                  summary: Bad Request Response
                  description: Bad Request Response
                  value:
                    - id: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
                      uuid: 559aed3d-6d5b-4fe0-bfca-99f5e7218a56
                      testMode: false
                      resellerReference: null
                      supplierReference: XOPSUT
                      status: ON_HOLD
                      utcCreatedAt: "2022-05-25T10:34:22Z"
                      utcUpdatedAt: "2022-05-25T10:34:22Z"
                      utcExpiresAt: "2022-05-25T11:04:22Z"
                      utcRedeemedAt: null
                      utcConfirmedAt: null
                      productId: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
                      product:
                        id: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
                        internalName: London Eye General Admission
                        reference: LEYE-GA
                        locale: en-GB
                        timeZone: Europe/London
                        allowFreesale: true
                        instantConfirmation: true
                        instantDelivery: true
                        availabilityRequired: true
                        availabilityType: START_TIME
                        deliveryFormats:
                          - QRCODE
                        deliveryMethods:
                          - TICKET
                        redemptionMethod: DIGITAL
                        options:
                          - id: DEFAULT
                            default: true
                            internalName: DEFAULT
                            reference: null
                            availabilityLocalStartTimes:
                              - "00:00"
                            cancellationCutoff: 1 hour
                            cancellationCutoffAmount: 1
                            cancellationCutoffUnit: hour
                            requiredContactFields:
                              - firstName
                            restrictions:
                              minUnits: 0
                              maxUnits: 9
                              minPaxCount: 0
                              maxPaxCount: null
                            units:
                              - id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                                internalName: Adult(s)
                                reference: LR1-01-new
                                type: ADULT
                                restrictions:
                                  minAge: 3
                                  maxAge: 17
                                  idRequired: true
                                  minQuantity: 2
                                  maxQuantity: 7
                                  paxCount: 1
                                  accompaniedBy:
                                    - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                                  required: false
                                  accompaniedByRatio: null
                                requiredContactFields:
                                  - firstName
                                tags: []
                                visibleContactFields: []
                            availabilityLocalDateStart: "2025-09-01"
                            availabilityLocalDateEnd: null
                            tags: []
                            availabilityCutoff: 1 hour
                            availabilityCutoffAmount: 1
                            availabilityCutoffUnit: hour
                            visibleContactFields: []
                        tags: []
                        settlementMethods:
                          - direct
                        freesaleDurationAmount: 2
                        freesaleDurationUnit: hour
                      optionId: DEFAULT
                      option:
                        id: DEFAULT
                        default: true
                        internalName: DEFAULT
                        reference: null
                        availabilityLocalStartTimes:
                          - "00:00"
                        cancellationCutoff: 1 hour
                        cancellationCutoffAmount: 1
                        cancellationCutoffUnit: hour
                        requiredContactFields:
                          - firstName
                        restrictions:
                          minUnits: 0
                          maxUnits: 9
                          minPaxCount: 0
                          maxPaxCount: null
                        units:
                          - id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                            internalName: Adult(s)
                            reference: LR1-01-new
                            type: ADULT
                            restrictions:
                              minAge: 3
                              maxAge: 17
                              idRequired: true
                              minQuantity: 2
                              maxQuantity: 7
                              paxCount: 1
                              accompaniedBy:
                                - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                              required: false
                              accompaniedByRatio: null
                            requiredContactFields:
                              - firstName
                            tags: []
                            visibleContactFields: []
                        availabilityLocalDateStart: "2025-09-01"
                        availabilityLocalDateEnd: null
                        tags: []
                        availabilityCutoff: 1 hour
                        availabilityCutoffAmount: 1
                        availabilityCutoffUnit: hour
                        visibleContactFields: []
                      cancellable: true
                      cancellation:
                        refund: FULL
                        reason: this product sucks
                        utcCancelledAt: "2022-05-25T11:00:22Z"
                      freesale: false
                      availabilityId: ""
                      availability:
                        id: "2022-05-23T00:00:00+01:00"
                        localDateTimeStart: "2022-05-23T00:00:00+01:00"
                        localDateTimeEnd: "2022-05-24T00:00:00+01:00"
                        utcCutoffAt: "2022-05-22T23:00:00Z"
                        allDay: false
                        available: true
                        status: AVAILABLE
                        vacancies: 10
                        capacity: 10
                        maxUnits: null
                        openingHours:
                          - from: "08:00"
                            to: "16:00"
                        paxCount: 0
                        maxPaxCount: null
                        totalCapacity: 0
                        noShows: 0
                        totalNoShows: 0
                        totalPaxCount: 0
                        limitPaxCount: 10
                        limitCapacity: 10
                      contact:
                        fullName: John Doe
                        firstName: John
                        lastName: Doe
                        emailAddress: johndoe@email.com
                        phoneNumber: ""
                        locales:
                          - en
                        postalCode: ""
                        country: ""
                        notes: ""
                        taxId: ""
                        title: ""
                        streetAddress: ""
                        city: ""
                        state: ""
                        allowMarketing: true
                      notes: Optional notes for the booking
                      deliveryMethods:
                        - TICKET
                        - VOUCHER
                      voucher: null
                      unitItems:
                        - uuid: 3b1bc2ee-3155-4738-9471-f49842a07327
                          resellerReference: A reference the reseller uses to identify the unit within all bookings.
                          supplierReference: A reference the supplier uses to identify the unit within all bookings.
                          unitId: This MUST be a unique identifier within the scope of the option.
                          unit:
                            id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                            internalName: Adult(s)
                            reference: LR1-01-new
                            type: ADULT
                            restrictions:
                              minAge: 3
                              maxAge: 17
                              idRequired: true
                              minQuantity: 2
                              maxQuantity: 7
                              paxCount: 1
                              accompaniedBy:
                                - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                              required: false
                              accompaniedByRatio: null
                            requiredContactFields:
                              - firstName
                            tags: []
                            visibleContactFields: []
                          status: CONFIRMED
                          utcRedeemedAt: "2021-10-27 23:28:43Z"
                          contact:
                            fullName: John Doe
                            firstName: John
                            lastName: Doe
                            emailAddress: johndoe@email.com
                            phoneNumber: ""
                            locales:
                              - en
                            postalCode: ""
                            country: ""
                            notes: ""
                            taxId: ""
                            title: ""
                            streetAddress: ""
                            city: ""
                            state: ""
                            allowMarketing: true
                          ticket: null
                          id: ""
                          alias: ""
                          rebookingUuid: ""
                          rebookingUnitItemUuid: ""
                          originalRebookingUuid: ""
                          originalRebookingUnitItemUuid: ""
                          utcRebookedAt: "2021-10-27 23:28:43Z"
                          utcNoshowedAt: "2021-10-27 23:28:43Z"
                          unitType: ADULT
                      rebookingUuid: ""
                      originalRebookingUuid: ""
                      alias: ""
                      settlementMethod: direct
                      quote: false
                      confirmable: true
                      agent: null
                      reseller: null
                      requiredContactFields: []
                      visibleContactFields: []
                      rejection:
                        reason: null
                        utcRejectedAt: "2022-06-29T22:00:00Z"
                      utcNoshowedAt: null
                      utcRebookedAt: null
                      seller: null
                      user: null
                      localDateTimeStart: "2022-05-23T00:00:00+01:00"
                      localDateTimeEnd: "2022-05-23T00:00:00+01:00"
                      emailReceipt: false
                      label: null
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/Octo.ErrorUnauthorized"
                  - $ref: "#/components/schemas/Octo.ErrorInternalServerError"
                  - $ref: "#/components/schemas/Octo.ErrorForbidden"
              examples:
                Forbidden Response:
                  summary: Forbidden Response
                  description: Forbidden Response
                  value:
                    error: FORBIDDEN
                    errorMessage: You sent an API Key that was invalid or has been revoked by the backend system. Or you're trying to access an endpoint/resource that you do not have access to
                Internal Server Error Response:
                  summary: Internal Server Error Response
                  description: Internal Server Error Response
                  value:
                    error: INTERNAL_SERVER_ERROR
                    errorMessage: There was an un-recoverable error, please try again
                Unauthorized Response:
                  summary: Unauthorized Response
                  description: Unauthorized Response
                  value:
                    error: UNAUTHORIZED
                    errorMessage: You didn't send the API Key in the Authorization header to an endpoint that requires authentication
                Bad Request Response:
                  summary: Bad Request Response
                  description: Bad Request Response
                  value:
                    error: BAD_REQUEST
                    errorMessage: either resellerReference, supplierReference, localDate or localDateStart/localDateEnd is required
      tags:
        - Bookings
  /bookings/{uuid}:
    get:
      operationId: Bookings_GetBooking
      summary: Get Booking
      description: Fetch the status of an existing booking.
      parameters:
        - $ref: "#/components/parameters/Octo.RequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
        - $ref: "#/components/parameters/Octo.GetBookingRequest.uuid"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Booking"
              examples:
                Booking example:
                  summary: Booking example
                  description: Booking example
                  value:
                    id: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
                    uuid: 559aed3d-6d5b-4fe0-bfca-99f5e7218a56
                    testMode: false
                    resellerReference: null
                    supplierReference: XOPSUT
                    status: ON_HOLD
                    utcCreatedAt: "2022-05-25T10:34:22Z"
                    utcUpdatedAt: "2022-05-25T10:34:22Z"
                    utcExpiresAt: "2022-05-25T11:04:22Z"
                    utcRedeemedAt: null
                    utcConfirmedAt: null
                    productId: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
                    product:
                      id: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
                      internalName: London Eye General Admission
                      reference: LEYE-GA
                      locale: en-GB
                      timeZone: Europe/London
                      allowFreesale: true
                      instantConfirmation: true
                      instantDelivery: true
                      availabilityRequired: true
                      availabilityType: START_TIME
                      deliveryFormats:
                        - QRCODE
                      deliveryMethods:
                        - TICKET
                      redemptionMethod: DIGITAL
                      options:
                        - id: DEFAULT
                          default: true
                          internalName: DEFAULT
                          reference: null
                          availabilityLocalStartTimes:
                            - "00:00"
                          cancellationCutoff: 1 hour
                          cancellationCutoffAmount: 1
                          cancellationCutoffUnit: hour
                          requiredContactFields:
                            - firstName
                          restrictions:
                            minUnits: 0
                            maxUnits: 9
                            minPaxCount: 0
                            maxPaxCount: null
                          units:
                            - id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                              internalName: Adult(s)
                              reference: LR1-01-new
                              type: ADULT
                              restrictions:
                                minAge: 3
                                maxAge: 17
                                idRequired: true
                                minQuantity: 2
                                maxQuantity: 7
                                paxCount: 1
                                accompaniedBy:
                                  - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                                required: false
                                accompaniedByRatio: null
                              requiredContactFields:
                                - firstName
                              tags: []
                              visibleContactFields: []
                          availabilityLocalDateStart: "2025-09-01"
                          availabilityLocalDateEnd: null
                          tags: []
                          availabilityCutoff: 1 hour
                          availabilityCutoffAmount: 1
                          availabilityCutoffUnit: hour
                          visibleContactFields: []
                      tags: []
                      settlementMethods:
                        - direct
                      freesaleDurationAmount: 2
                      freesaleDurationUnit: hour
                    optionId: DEFAULT
                    option:
                      id: DEFAULT
                      default: true
                      internalName: DEFAULT
                      reference: null
                      availabilityLocalStartTimes:
                        - "00:00"
                      cancellationCutoff: 1 hour
                      cancellationCutoffAmount: 1
                      cancellationCutoffUnit: hour
                      requiredContactFields:
                        - firstName
                      restrictions:
                        minUnits: 0
                        maxUnits: 9
                        minPaxCount: 0
                        maxPaxCount: null
                      units:
                        - id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                          internalName: Adult(s)
                          reference: LR1-01-new
                          type: ADULT
                          restrictions:
                            minAge: 3
                            maxAge: 17
                            idRequired: true
                            minQuantity: 2
                            maxQuantity: 7
                            paxCount: 1
                            accompaniedBy:
                              - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                            required: false
                            accompaniedByRatio: null
                          requiredContactFields:
                            - firstName
                          tags: []
                          visibleContactFields: []
                      availabilityLocalDateStart: "2025-09-01"
                      availabilityLocalDateEnd: null
                      tags: []
                      availabilityCutoff: 1 hour
                      availabilityCutoffAmount: 1
                      availabilityCutoffUnit: hour
                      visibleContactFields: []
                    cancellable: true
                    cancellation:
                      refund: FULL
                      reason: this product sucks
                      utcCancelledAt: "2022-05-25T11:00:22Z"
                    freesale: false
                    availabilityId: ""
                    availability:
                      id: "2022-05-23T00:00:00+01:00"
                      localDateTimeStart: "2022-05-23T00:00:00+01:00"
                      localDateTimeEnd: "2022-05-24T00:00:00+01:00"
                      utcCutoffAt: "2022-05-22T23:00:00Z"
                      allDay: false
                      available: true
                      status: AVAILABLE
                      vacancies: 10
                      capacity: 10
                      maxUnits: null
                      openingHours:
                        - from: "08:00"
                          to: "16:00"
                      paxCount: 0
                      maxPaxCount: null
                      totalCapacity: 0
                      noShows: 0
                      totalNoShows: 0
                      totalPaxCount: 0
                      limitPaxCount: 10
                      limitCapacity: 10
                    contact:
                      fullName: John Doe
                      firstName: John
                      lastName: Doe
                      emailAddress: johndoe@email.com
                      phoneNumber: ""
                      locales:
                        - en
                      postalCode: ""
                      country: ""
                      notes: ""
                      taxId: ""
                      title: ""
                      streetAddress: ""
                      city: ""
                      state: ""
                      allowMarketing: true
                    notes: Optional notes for the booking
                    deliveryMethods:
                      - TICKET
                      - VOUCHER
                    voucher: null
                    unitItems:
                      - uuid: 3b1bc2ee-3155-4738-9471-f49842a07327
                        resellerReference: A reference the reseller uses to identify the unit within all bookings.
                        supplierReference: A reference the supplier uses to identify the unit within all bookings.
                        unitId: This MUST be a unique identifier within the scope of the option.
                        unit:
                          id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                          internalName: Adult(s)
                          reference: LR1-01-new
                          type: ADULT
                          restrictions:
                            minAge: 3
                            maxAge: 17
                            idRequired: true
                            minQuantity: 2
                            maxQuantity: 7
                            paxCount: 1
                            accompaniedBy:
                              - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                            required: false
                            accompaniedByRatio: null
                          requiredContactFields:
                            - firstName
                          tags: []
                          visibleContactFields: []
                        status: CONFIRMED
                        utcRedeemedAt: "2021-10-27 23:28:43Z"
                        contact:
                          fullName: John Doe
                          firstName: John
                          lastName: Doe
                          emailAddress: johndoe@email.com
                          phoneNumber: ""
                          locales:
                            - en
                          postalCode: ""
                          country: ""
                          notes: ""
                          taxId: ""
                          title: ""
                          streetAddress: ""
                          city: ""
                          state: ""
                          allowMarketing: true
                        ticket: null
                        id: ""
                        alias: ""
                        rebookingUuid: ""
                        rebookingUnitItemUuid: ""
                        originalRebookingUuid: ""
                        originalRebookingUnitItemUuid: ""
                        utcRebookedAt: "2021-10-27 23:28:43Z"
                        utcNoshowedAt: "2021-10-27 23:28:43Z"
                        unitType: ADULT
                    rebookingUuid: ""
                    originalRebookingUuid: ""
                    alias: ""
                    settlementMethod: direct
                    quote: false
                    confirmable: true
                    agent: null
                    reseller: null
                    requiredContactFields: []
                    visibleContactFields: []
                    rejection:
                      reason: null
                      utcRejectedAt: "2022-06-29T22:00:00Z"
                    utcNoshowedAt: null
                    utcRebookedAt: null
                    seller: null
                    user: null
                    localDateTimeStart: "2022-05-23T00:00:00+01:00"
                    localDateTimeEnd: "2022-05-23T00:00:00+01:00"
                    emailReceipt: false
                    label: null
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/Octo.ErrorInvalidBookingUUID"
                  - $ref: "#/components/schemas/Octo.ErrorUnauthorized"
                  - $ref: "#/components/schemas/Octo.ErrorInternalServerError"
                  - $ref: "#/components/schemas/Octo.ErrorForbidden"
              examples:
                Forbidden Response:
                  summary: Forbidden Response
                  description: Forbidden Response
                  value:
                    error: FORBIDDEN
                    errorMessage: You sent an API Key that was invalid or has been revoked by the backend system. Or you're trying to access an endpoint/resource that you do not have access to
                Internal Server Error Response:
                  summary: Internal Server Error Response
                  description: Internal Server Error Response
                  value:
                    error: INTERNAL_SERVER_ERROR
                    errorMessage: There was an un-recoverable error, please try again
                Unauthorized Response:
                  summary: Unauthorized Response
                  description: Unauthorized Response
                  value:
                    error: UNAUTHORIZED
                    errorMessage: You didn't send the API Key in the Authorization header to an endpoint that requires authentication
                Invalid Booking UUID Response:
                  summary: Invalid Booking UUID Response
                  description: Invalid Booking UUID Response
                  value:
                    error: INVALID_BOOKING_UUID
                    errorMessage: The uuid was already used, missing or invalid
                    uuid: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
      tags:
        - Bookings
    patch:
      operationId: Bookings_BookingUpdate
      summary: Booking Update
      description: Updates a booking before and after it has been confirmed as long as it hasn''t been redeemed or within the cancellation cutoff window. To know if the booking can be updated check the booking''s `cancellable` field. If the booking can be cancelled, it can also be updated. It''s generally preferred to update a booking rather than cancelling it and rebooking
      parameters:
        - $ref: "#/components/parameters/BookingUpdateRequest.uuid"
        - $ref: "#/components/parameters/Octo.RequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Booking"
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/Octo.ErrorInvalidProductID"
                  - $ref: "#/components/schemas/Octo.ErrorInvalidOptionID"
                  - $ref: "#/components/schemas/Octo.ErrorInvalidUnitID"
                  - $ref: "#/components/schemas/Octo.ErrorInvalidAvailabilityID"
                  - $ref: "#/components/schemas/Octo.ErrorInvalidBookingUUID"
                  - $ref: "#/components/schemas/Octo.ErrorUnprocessableEntity"
                  - $ref: "#/components/schemas/Octo.ErrorUnauthorized"
                  - $ref: "#/components/schemas/Octo.ErrorInternalServerError"
                  - $ref: "#/components/schemas/Octo.ErrorForbidden"
      tags:
        - Bookings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookingUpdateBody"
  /bookings/{uuid}/cancel:
    post:
      operationId: Bookings_BookingCancellation
      summary: Booking Cancellation
      description: For cancelling bookings. You can only cancel a booking if `booking.cancellable` is `TRUE`, and is within the booking cancellation cut-off window.
      parameters:
        - $ref: "#/components/parameters/BookingCancellationRequest.uuid"
        - $ref: "#/components/parameters/Octo.RequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/Booking"
                  - $ref: "#/components/schemas/BookingCancellationErrorResponse"
      tags:
        - Bookings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookingCancellationBody"
  /bookings/{uuid}/confirm:
    post:
      operationId: Bookings_BookingConfirmation
      summary: Booking Confirmation
      description: This endpoint confirms the booking so it's ready to be used.
      parameters:
        - $ref: "#/components/parameters/BookingConfirmationRequest.uuid"
        - $ref: "#/components/parameters/Octo.RequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/Booking"
                  - $ref: "#/components/schemas/BookingConfirmationErrorResponse"
      tags:
        - Bookings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookingConfirmationBody"
  /bookings/{uuid}/extend:
    post:
      operationId: Bookings_ExtendReservation
      summary: Extend Reservation
      description: Use this endpoint to hold the availability for a booking longer if the status is `ON_HOLD`.
      parameters:
        - $ref: "#/components/parameters/ExtendReservationRequest.uuid"
        - $ref: "#/components/parameters/Octo.RequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/Booking"
                  - $ref: "#/components/schemas/ExtendReservationErrorResponse"
      tags:
        - Bookings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExtendReservationBody"
  /capabilities/:
    get:
      operationId: Capabilities_get
      summary: List capabilities
      description: List capabiliteis
      parameters:
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Capability"
              examples:
                Capabilities:
                  summary: Capabilities
                  description: Capabilities
                  value:
                    - id: octo/pricing
                      revision: 3
                      required: true
                      dependencies: []
                      docs: This capability enables booking creation.
      tags:
        - Capabilities
  /mappings/mappings:
    post:
      operationId: Mappings_put
      summary: Update Mappings
      description: Update Mappings
      parameters:
        - $ref: "#/components/parameters/Octo.RequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Mapping"
              examples:
                Update Mappings response:
                  summary: Update Mappings response
                  description: Update Mappings response
                  value:
                    - id: map-001
                      resellerReference: res-789
                      resellerStatus: ACTIVE
                      title: GetYourGuide - London Tour
                      url: https://reseller.example.com/product/123
                      webhookUrl: https://webhooks.example.com/gyg
                      optionRequired: true
                      unitRequired: false
                      productId: prod-001
                      optionId: opt-001
                      unitId: unit-001
                      connected: true
      tags:
        - Mappings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/MappingToUpdate"
    get:
      operationId: Mappings_get
      summary: List all mappings
      description: List all mappings
      parameters:
        - $ref: "#/components/parameters/GetMappingsQueryParams.productId"
        - $ref: "#/components/parameters/GetMappingsQueryParams.optionId"
        - $ref: "#/components/parameters/GetMappingsQueryParams.resellerReference"
        - $ref: "#/components/parameters/GetMappingsQueryParams.resellerStatus"
        - $ref: "#/components/parameters/Octo.RequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Mapping"
              examples:
                Get Mappings response:
                  summary: Get Mappings response
                  description: Get Mappings response
                  value:
                    - id: map-001
                      resellerReference: res-789
                      resellerStatus: ACTIVE
                      title: GetYourGuide - London Tour
                      url: https://reseller.example.com/product/123
                      webhookUrl: https://webhooks.example.com/gyg
                      optionRequired: true
                      unitRequired: false
                      productId: prod-001
                      optionId: opt-001
                      unitId: unit-001
                      connected: true
      tags:
        - Mappings
  /order/{id}:
    post:
      operationId: Orders_CreateOrder
      summary: Create Order
      description: Using this endpoint is optional if you prefer to create the order first before creating your first booking.
      parameters:
        - $ref: "#/components/parameters/CreateOrderRequest.id"
        - $ref: "#/components/parameters/Octo.RequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrderBody"
    get:
      operationId: Orders_GetOrder
      summary: Get Order
      description: A convenient method to retrieve an existing order
      parameters:
        - $ref: "#/components/parameters/GetOrderRequest.id"
        - $ref: "#/components/parameters/Octo.RequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
      tags:
        - Orders
  /order/{id}/cancel:
    post:
      operationId: Orders_OrderCancellation
      summary: Order Cancellation
      description: This cancels the order and any bookings inside it.
      parameters:
        - $ref: "#/components/parameters/CancelOrderRequest.id"
        - $ref: "#/components/parameters/Octo.RequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelOrderBody"
  /order/{id}/confirm:
    post:
      operationId: Orders_ConfirmOrder
      summary: Order Confirmation
      description: Confirms the order and all the bookings it contains.
      parameters:
        - $ref: "#/components/parameters/ConfirmOrderRequest.id"
        - $ref: "#/components/parameters/Octo.RequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfirmOrderBody"
  /order/{id}/extend:
    post:
      operationId: Orders_ExtendOrder
      summary: Extend Order
      description: If the order has a status of ON_HOLD and you need more time before confirming the order.
      parameters:
        - $ref: "#/components/parameters/ExtendOrderRequest.id"
        - $ref: "#/components/parameters/Octo.RequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExtendOrderBody"
  /order/{id}/update:
    patch:
      operationId: Orders_OrderUpdate
      summary: Order Update
      description: Updates the order and all the bookings it contains.
      parameters:
        - $ref: "#/components/parameters/UpdateOrderRequest.id"
        - $ref: "#/components/parameters/Octo.RequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateOrderBody"
  /products/:
    get:
      operationId: Products_GetProducts
      summary: Get Products
      description: Fetch the list of products.
      parameters:
        - $ref: "#/components/parameters/Octo.RequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
              examples:
                Products example:
                  summary: Products example
                  description: Products example
                  value:
                    - id: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
                      internalName: London Eye General Admission
                      reference: LEYE-GA
                      locale: en-GB
                      timeZone: Europe/London
                      allowFreesale: true
                      instantConfirmation: true
                      instantDelivery: true
                      availabilityRequired: true
                      availabilityType: START_TIME
                      deliveryFormats:
                        - QRCODE
                      deliveryMethods:
                        - TICKET
                      redemptionMethod: DIGITAL
                      options:
                        - id: DEFAULT
                          default: true
                          internalName: DEFAULT
                          reference: null
                          availabilityLocalStartTimes:
                            - "00:00"
                          cancellationCutoff: 1 hour
                          cancellationCutoffAmount: 1
                          cancellationCutoffUnit: hour
                          requiredContactFields:
                            - firstName
                          restrictions:
                            minUnits: 0
                            maxUnits: 9
                            minPaxCount: 0
                            maxPaxCount: null
                          units:
                            - id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                              internalName: Adult(s)
                              reference: LR1-01-new
                              type: ADULT
                              restrictions:
                                minAge: 3
                                maxAge: 17
                                idRequired: true
                                minQuantity: 2
                                maxQuantity: 7
                                paxCount: 1
                                accompaniedBy:
                                  - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                                required: false
                                accompaniedByRatio: null
                              requiredContactFields:
                                - firstName
                              tags: []
                              visibleContactFields: []
                          availabilityLocalDateStart: "2025-09-01"
                          availabilityLocalDateEnd: null
                          tags: []
                          availabilityCutoff: 1 hour
                          availabilityCutoffAmount: 1
                          availabilityCutoffUnit: hour
                          visibleContactFields: []
                      tags: []
                      settlementMethods:
                        - direct
                      freesaleDurationAmount: 2
                      freesaleDurationUnit: hour
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/Octo.ErrorUnauthorized"
                  - $ref: "#/components/schemas/Octo.ErrorInternalServerError"
                  - $ref: "#/components/schemas/Octo.ErrorForbidden"
              examples:
                Forbidden Response:
                  summary: Forbidden Response
                  description: Forbidden Response
                  value:
                    error: FORBIDDEN
                    errorMessage: You sent an API Key that was invalid or has been revoked by the backend system. Or you're trying to access an endpoint/resource that you do not have access to
                Internal Server Error Response:
                  summary: Internal Server Error Response
                  description: Internal Server Error Response
                  value:
                    error: INTERNAL_SERVER_ERROR
                    errorMessage: There was an un-recoverable error, please try again
                Unauthorized Response:
                  summary: Unauthorized Response
                  description: Unauthorized Response
                  value:
                    error: UNAUTHORIZED
                    errorMessage: You didn't send the API Key in the Authorization header to an endpoint that requires authentication
      tags:
        - Products
  /products/{id}:
    get:
      operationId: Products_GetProduct
      summary: Get Product
      description: Fetch the product for the given id.
      parameters:
        - $ref: "#/components/parameters/Octo.RequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
        - $ref: "#/components/parameters/Octo.GetProductRequest.id"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
              examples:
                Product example:
                  summary: Product example
                  description: Product example
                  value:
                    id: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
                    internalName: London Eye General Admission
                    reference: LEYE-GA
                    locale: en-GB
                    timeZone: Europe/London
                    allowFreesale: true
                    instantConfirmation: true
                    instantDelivery: true
                    availabilityRequired: true
                    availabilityType: START_TIME
                    deliveryFormats:
                      - QRCODE
                    deliveryMethods:
                      - TICKET
                    redemptionMethod: DIGITAL
                    options:
                      - id: DEFAULT
                        default: true
                        internalName: DEFAULT
                        reference: null
                        availabilityLocalStartTimes:
                          - "00:00"
                        cancellationCutoff: 1 hour
                        cancellationCutoffAmount: 1
                        cancellationCutoffUnit: hour
                        requiredContactFields:
                          - firstName
                        restrictions:
                          minUnits: 0
                          maxUnits: 9
                          minPaxCount: 0
                          maxPaxCount: null
                        units:
                          - id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                            internalName: Adult(s)
                            reference: LR1-01-new
                            type: ADULT
                            restrictions:
                              minAge: 3
                              maxAge: 17
                              idRequired: true
                              minQuantity: 2
                              maxQuantity: 7
                              paxCount: 1
                              accompaniedBy:
                                - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                              required: false
                              accompaniedByRatio: null
                            requiredContactFields:
                              - firstName
                            tags: []
                            visibleContactFields: []
                        availabilityLocalDateStart: "2025-09-01"
                        availabilityLocalDateEnd: null
                        tags: []
                        availabilityCutoff: 1 hour
                        availabilityCutoffAmount: 1
                        availabilityCutoffUnit: hour
                        visibleContactFields: []
                    tags: []
                    settlementMethods:
                      - direct
                    freesaleDurationAmount: 2
                    freesaleDurationUnit: hour
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/Octo.ErrorInvalidProductID"
                  - $ref: "#/components/schemas/Octo.ErrorUnauthorized"
                  - $ref: "#/components/schemas/Octo.ErrorInternalServerError"
                  - $ref: "#/components/schemas/Octo.ErrorForbidden"
              examples:
                Forbidden Response:
                  summary: Forbidden Response
                  description: Forbidden Response
                  value:
                    error: FORBIDDEN
                    errorMessage: You sent an API Key that was invalid or has been revoked by the backend system. Or you're trying to access an endpoint/resource that you do not have access to
                Internal Server Error Response:
                  summary: Internal Server Error Response
                  description: Internal Server Error Response
                  value:
                    error: INTERNAL_SERVER_ERROR
                    errorMessage: There was an un-recoverable error, please try again
                Unauthorized Response:
                  summary: Unauthorized Response
                  description: Unauthorized Response
                  value:
                    error: UNAUTHORIZED
                    errorMessage: You didn't send the API Key in the Authorization header to an endpoint that requires authentication
                Invalid Product Id Response:
                  summary: Invalid Product Id Response
                  description: Invalid Product Id Response
                  value:
                    error: INVALID_PRODUCT_ID
                    errorMessage: The productId was missing or invalid
                    productId: cc2a6d56-6efe-426f-99c9-6eb10e341565
      tags:
        - Products
  /supplier/:
    get:
      operationId: Suppliers_get
      summary: Get Supplier
      description: Returns the supplier and associated contact details.
      parameters:
        - $ref: "#/components/parameters/Octo.RequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Supplier"
              examples:
                Supplier example:
                  summary: Supplier example
                  description: Supplier example
                  value:
                    id: 697e3ce8-1860-4cbf-80ad-95857df1f640
                    name: Merlin Entertainments
                    endpoint: https://api.my-booking-platform.com/v1
                    contact:
                      website: null
                      email: support@ventrata.com
                      telephone: null
                      address: Marble Arch, London, W1H 7EJ, United Kingdom
                    destinations: []
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/Octo.ErrorUnauthorized"
                  - $ref: "#/components/schemas/Octo.ErrorInternalServerError"
                  - $ref: "#/components/schemas/Octo.ErrorForbidden"
              examples:
                Forbidden Response:
                  summary: Forbidden Response
                  description: Forbidden Response
                  value:
                    error: FORBIDDEN
                    errorMessage: You sent an API Key that was invalid or has been revoked by the backend system. Or you're trying to access an endpoint/resource that you do not have access to
                Internal Server Error Response:
                  summary: Internal Server Error Response
                  description: Internal Server Error Response
                  value:
                    error: INTERNAL_SERVER_ERROR
                    errorMessage: There was an un-recoverable error, please try again
                Unauthorized Response:
                  summary: Unauthorized Response
                  description: Unauthorized Response
                  value:
                    error: UNAUTHORIZED
                    errorMessage: You didn't send the API Key in the Authorization header to an endpoint that requires authentication
      tags:
        - Supplier
  /ventrata/getyourguide/activate:
    post:
      operationId: GetYourGuide_post
      summary: Activate Connection
      description: Returns the supplier and associated contact details.
      parameters:
        - $ref: "#/components/parameters/GetYourGuideActivateRequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetYourGuideConnection"
              examples:
                GYG Connection:
                  summary: GYG Connection
                  description: GYG Connection example
                  value:
                    id: f9d1bc87-ded3-4708-81d6-a82336f0db2e
                    name: My PARTNERS Connection
                    type: PARTNERS
                    gygConnectId: "123456"
                    gygLoginEmail: user@example.com
                    gygLoginPassword: securepassword123
                    gygLoginOTPSecret: OTPSECRET123
                    gygSupplierId: "7890"
                    gygSupplierName: Tour Supplier Inc.
                    gygActivated: true
      tags:
        - GetYourGuide
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetYourGuideActivateBody"
  /ventrata/partners/suppliers_connections:
    get:
      operationId: Partners_get
      summary: List Connections
      description: Returns the list of connections
      parameters:
        - $ref: "#/components/parameters/PartnersListConnectionsRequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/PartnersListConnectionsRequestHeaders.ventrataPartnerKey"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PartnersListConnection"
              examples:
                Partner's connections:
                  summary: Partner's connections
                  description: Partner's connections
                  value:
                    - supplier:
                        id: 697e3ce8-1860-4cbf-80ad-95857df1f640
                        name: Merlin Entertainments
                        endpoint: https://api.my-booking-platform.com/v1
                        contact:
                          website: null
                          email: support@ventrata.com
                          telephone: null
                          address: Marble Arch, London, W1H 7EJ, United Kingdom
                        destinations: []
                      connection:
                        id: f9d1bc87-ded3-4708-81d6-a82336f0db2e
                        name: My PARTNERS Connection
                        type: PARTNERS
                      apiKey: 5d25b9be-9c1e-4a44-b6c6-117aa419cf6c
      tags:
        - Partners
  /webhooks/:
    post:
      operationId: Webhooks_post
      summary: Create a new webhook
      description: Create a new webhook
      parameters:
        - $ref: "#/components/parameters/CreateWebhookRequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
              examples:
                Create webhook response:
                  summary: Create webhook response
                  description: Create webhook response
                  value:
                    id: webhook-001
                    event: booking_update
                    url: https://api.example.com/webhooks
                    retryOnError: true
                    useContactLanguage: false
                    headers: {}
                    capabilities:
                      - octo/pricing
                      - octo/offers
      tags:
        - Webhooks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWebhookBody"
    get:
      operationId: Webhooks_get
      summary: List all webhooks
      description: List all webhooks
      parameters:
        - $ref: "#/components/parameters/ListWebhooksRequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Webhook"
              examples:
                List webhooks response:
                  summary: List webhooks response
                  description: List webhooks response
                  value:
                    - id: webhook-001
                      event: booking_update
                      url: https://api.example.com/webhooks
                      retryOnError: true
                      useContactLanguage: false
                      headers: {}
                      capabilities:
                        - octo/pricing
                        - octo/offers
      tags:
        - Webhooks
  /webhooks/{id}:
    get:
      operationId: Webhooks_delete
      summary: Delete an existing webhook
      description: Delete an existing webhook
      parameters:
        - $ref: "#/components/parameters/DeleteWebhookRequest.id"
        - $ref: "#/components/parameters/DeleteWebhookRequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
      tags:
        - Webhooks
  /whoami/:
    get:
      operationId: WhoIAmSection_get
      summary: Check token
      description: Returns data about the token
      parameters:
        - $ref: "#/components/parameters/Octo.RequestHeaders.octoCapabilities"
        - $ref: "#/components/parameters/Octo.RequestHeadersContent"
      responses:
        "200":
          description: The request has succeeded.
          headers:
            Octo-Capabilities:
              required: true
              description: A list of the Capabilities (their IDs) initialized with your request.
              schema:
                type: string
            Content-Language:
              required: false
              description: "This response header indicates the language of the content being returned in the response. The OCTO specification allows only one language to be returned per response. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  To obtain content in multiple languages, separate requests must be made for each desired language. This header is defined in the HTTP/1.1 specification (RFC 7231). For more information, see MDN Web Docs: Content-Language - HTTP | MDN. This response header is required when using Content capability."
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
            Available-Languages:
              required: false
              description: This response header is used to inform of the languages in which content is available, helping understand the language options without needing additional requests. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain).  Although not a standard HTTP header, it is commonly used in APIs to list available languages, such as en-US, fr-CA, es-ES, indicating that content can be requested in U.S. English, Canadian French, or Spanish. This response header is required when using Content capability.
              schema:
                type: string
                x-capability-data:
                  capability: octo/content
                  required: true
              x-capability-data:
                capability: octo/content
                required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WhoIAm"
              examples:
                Partner's connections:
                  summary: Partner's connections
                  description: Partner's connections
                  value:
                    supplier:
                      id: 697e3ce8-1860-4cbf-80ad-95857df1f640
                      name: Merlin Entertainments
                      endpoint: https://api.my-booking-platform.com/v1
                      contact:
                        website: null
                        email: support@ventrata.com
                        telephone: null
                        address: Marble Arch, London, W1H 7EJ, United Kingdom
                      destinations: []
                    connection:
                      id: f9d1bc87-ded3-4708-81d6-a82336f0db2e
                      name: My PARTNERS Connection
                      type: PARTNERS
                    partner:
                      id: 1c1f8e6d-8685-4b17-9275-78ed40d71857
                      name: GetYourGuide
                    reseller:
                      id: "1223"
                      name: ""
                      reference: ""
                      tags: []
                    checkout: null
                    operator: null
                    terminal: null
      tags:
        - WHOIAM
security:
  - BearerAuth: []
components:
  parameters:
    BookingCancellationRequest.uuid:
      name: uuid
      in: path
      required: true
      description: The booking uuid
      schema:
        type: string
    BookingConfirmationRequest.uuid:
      name: uuid
      in: path
      required: true
      description: The booking uuid
      schema:
        type: string
    BookingUpdateRequest.uuid:
      name: uuid
      in: path
      required: true
      description: The booking uuid
      schema:
        type: string
    CancelOrderRequest.id:
      name: id
      in: path
      required: true
      description: 0effd05e-d61e-47f2-8fc9-512f3144c69d
      schema:
        type: string
    ConfirmOrderRequest.id:
      name: id
      in: path
      required: true
      description: 0effd05e-d61e-47f2-8fc9-512f3144c69d
      schema:
        type: string
    CreateOrderRequest.id:
      name: id
      in: path
      required: true
      description: 0effd05e-d61e-47f2-8fc9-512f3144c69d
      schema:
        type: string
    CreateWebhookRequestHeaders.octoCapabilities:
      name: Octo-Capabilities
      in: header
      required: true
      description: A list of the Capabilities (their IDs) initialized with your request. ventrata/getyourguide capability is required
      schema:
        type: string
    DeleteWebhookRequest.id:
      name: id
      in: path
      required: true
      description: The booking uuid
      schema:
        type: string
    DeleteWebhookRequestHeaders.octoCapabilities:
      name: Octo-Capabilities
      in: header
      required: true
      description: A list of the Capabilities (their IDs) initialized with your request. ventrata/getyourguide capability is required
      schema:
        type: string
    ExtendOrderRequest.id:
      name: id
      in: path
      required: true
      description: 0effd05e-d61e-47f2-8fc9-512f3144c69d
      schema:
        type: string
    ExtendReservationRequest.uuid:
      name: uuid
      in: path
      required: true
      description: The booking uuid
      schema:
        type: string
    GetMappingsQueryParams.optionId:
      name: optionId
      in: query
      required: false
      description: Optional option ID to filter mappings.
      schema:
        type: string
      explode: false
    GetMappingsQueryParams.productId:
      name: productId
      in: query
      required: false
      description: Optional product ID to filter mappings.
      schema:
        type: string
      explode: false
    GetMappingsQueryParams.resellerReference:
      name: resellerReference
      in: query
      required: false
      description: Optional external reference from the reseller.
      schema:
        type: string
      explode: false
    GetMappingsQueryParams.resellerStatus:
      name: resellerStatus
      in: query
      required: false
      description: Optional status of the mapping on the reseller side.
      schema:
        $ref: "#/components/schemas/ResellerStatus"
      explode: false
    GetOrderRequest.id:
      name: id
      in: path
      required: true
      description: 0effd05e-d61e-47f2-8fc9-512f3144c69d
      schema:
        type: string
    GetYourGuideActivateRequestHeaders.octoCapabilities:
      name: Octo-Capabilities
      in: header
      required: true
      description: A list of the Capabilities (their IDs) initialized with your request. ventrata/getyourguide capability is required
      schema:
        type: string
    ListWebhooksRequestHeaders.octoCapabilities:
      name: Octo-Capabilities
      in: header
      required: true
      description: A list of the Capabilities (their IDs) initialized with your request. ventrata/getyourguide capability is required
      schema:
        type: string
    Octo.GetBookingRequest.uuid:
      name: uuid
      in: path
      required: true
      description: The UUID of the booking
      schema:
        type: string
    Octo.GetBookingsRequest.localDate:
      name: localDate
      in: query
      required: false
      description: All bookings made for a specific date
      schema:
        type: string
      explode: false
    Octo.GetBookingsRequest.localDateEnd:
      name: localDateEnd
      in: query
      required: false
      description: Last date of a date range search
      schema:
        type: string
      explode: false
    Octo.GetBookingsRequest.localDateStart:
      name: localDateStart
      in: query
      required: false
      description: First date of a date range search
      schema:
        type: string
      explode: false
    Octo.GetBookingsRequest.optionId:
      name: optionId
      in: query
      required: false
      description: The option id to filter by
      schema:
        type: string
      explode: false
    Octo.GetBookingsRequest.productId:
      name: productId
      in: query
      required: false
      description: The product id to filter by
      schema:
        type: string
      explode: false
    Octo.GetBookingsRequest.resellerReference:
      name: resellerReference
      in: query
      required: false
      description: The reseller reference on the booking
      schema:
        type: string
      explode: false
    Octo.GetBookingsRequest.supplierReference:
      name: supplierReference
      in: query
      required: false
      description: The reference provided by the supplier
      schema:
        type: string
      explode: false
    Octo.GetProductRequest.id:
      name: id
      in: path
      required: true
      description: The product id
      schema:
        type: string
    Octo.RequestHeaders.octoCapabilities:
      name: Octo-Capabilities
      in: header
      required: true
      description: A list of the Capabilities (their IDs) initialized with your request.
      schema:
        type: string
    Octo.RequestHeadersContent:
      name: Accept-Language
      in: header
      required: false
      description: "This optional request header allows to specify preferred languages for content in the response. A language code that specifies the language of the product content. This code must conform to the BCP 47 standard, following RFC 5646 and RFC 4647 specifications for language tags. Examples include en-US for American English, fr-FR for French (France), and es-ES for Spanish (Spain). This header supports a comma-separated list of language tags with optional quality values (q) to indicate priority, such as en-US, fr-CA;q=0.8, fr;q=0.7, which prioritizes U.S. English, followed by Canadian French, and general French. This header is defined in the HTTP/1.1 specification (RFC 7231) and is commonly used for internationalized websites and services to enhance user experience. For more details, visit MDN Web Docs: Accept-Language - HTTP | MDN. Note this only determines preference and does not guarantee location has content available in the desired language."
      schema:
        type: string
        x-capability-data:
          capability: octo/content
          required: true
      x-capability-data:
        capability: octo/content
        required: true
    PartnersListConnectionsRequestHeaders.octoCapabilities:
      name: Octo-Capabilities
      in: header
      required: true
      description: ventrata/partners capability is required
      schema:
        type: string
    PartnersListConnectionsRequestHeaders.ventrataPartnerKey:
      name: Ventrata-Partner-Key
      in: header
      required: true
      schema:
        type: string
    UpdateOrderRequest.id:
      name: id
      in: path
      required: true
      description: 0effd05e-d61e-47f2-8fc9-512f3144c69d
      schema:
        type: string
  schemas:
    AdjustmentDiscount:
      type: string
      enum:
        - NONE
        - FULL
        - SPLIT
        - PRORATED
        - MANUAL
      description: The type of discount. Possible values are `NONE`, `FULL`, `SPLIT`, `PRORATED` or `MANUAL`
      example: FULL
    AdjustmentPer:
      type: string
      enum:
        - BOOKING
        - UNIT
        - PERCENTAGE
      description: The type of adjustment. Possible values are `BOOKING`, `UNIT` or `PERCENTAGE`
      example: UNIT
    Agent:
      type: object
      required:
        - id
        - name
        - reference
        - tags
      properties:
        id:
          type: string
          format: uuid
          description: A unique ID / UUID generated to identify the agent.
          example: ""
        name:
          type: string
          description: Agent name.
          example: ""
        reference:
          type: string
          nullable: true
          description: Agent reference.
          example: null
        tags:
          type: array
          items:
            type: string
          description: An array of tags that can be used to filter.
          example: []
      example:
        id: ""
        name: ""
        reference: null
        tags: []
    Availability:
      type: object
      required:
        - id
        - localDateTimeStart
        - localDateTimeEnd
        - utcCutoffAt
        - allDay
        - available
        - status
        - vacancies
        - capacity
        - maxUnits
        - openingHours
        - totalCapacity
        - limitCapacity
        - limitPaxCount
        - noShows
        - totalNoShows
        - totalPaxCount
        - paxCount
        - maxPaxCount
      properties:
        id:
          type: string
          description: A unique identifier for this availability. This ID is used during booking and must be unique within the scope of an option.
          example: "2022-05-23T00:00:00+01:00"
          x-order: 2
        localDateTimeStart:
          type: string
          description: The start time for this availability in the product’s local time zone. This value must conform to ISO 8601 standards (e.g., "2024-11-17T09:00:00+00:00").
          example: "2022-05-23T00:00:00+01:00"
          x-order: 3
        localDateTimeEnd:
          type: string
          description: The end time for this availability in the product’s local time zone. It must also adhere to ISO 8601 standards.
          example: "2022-05-24T00:00:00+01:00"
          x-order: 4
        utcCutoffAt:
          type: string
          format: date-time
          description: The time by which the booking must be confirmed at
          example: "2022-05-22T23:00:00Z"
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
        allDay:
          type: boolean
          description: Indicates if this availability spans the entire day. If set to true, there will be no specific start or end times for this availability.
          example: false
        available:
          type: boolean
          description: Indicates if there are remaining slots available for this date or time slot.
          example: true
        status:
          allOf:
            - $ref: "#/components/schemas/AvailabilityStatus"
          description: |-
            Defines the current status of the availability:
            AVAILABLE: Open for booking.
            FREESALE: Unlimited availability, no capacity limits.
            SOLD_OUT: No spots available.
            LIMITED: Less than 50% capacity remaining.
            CLOSED: The availability is closed.
          example: AVAILABLE
        vacancies:
          type: integer
          nullable: true
          description: Specifies the number of available slots remaining. Should be nulled or omitted when status is FREESALE. If availability is tracked per unit, this represents the maximum remaining quantity across all units.
          example: 10
          x-go-type: float64
        capacity:
          type: integer
          nullable: true
          description: The total capacity for this availability.
          example: 10
          x-go-type: float64
        maxUnits:
          type: integer
          nullable: true
          description: The maximum number of units that can be sold in a single booking during this availability slot.
          example: null
          x-go-type: float64
        openingHours:
          type: array
          items:
            $ref: "#/components/schemas/OpeningHours"
          description: Defines the opening hours for this availability, even for start time-based availability. Supports multiple periods for breaks in the day.
          example:
            - from: "08:00"
              to: "16:00"
        totalCapacity:
          type: integer
          nullable: true
          x-go-type: float64
        limitCapacity:
          type: integer
          nullable: true
          x-go-type: float64
        limitPaxCount:
          type: integer
          x-go-type: float64
        noShows:
          type: integer
          x-go-type: int64
        totalNoShows:
          type: integer
          x-go-type: int64
        totalPaxCount:
          type: integer
          x-go-type: float64
        paxCount:
          type: integer
          x-go-type: float64
        maxPaxCount:
          type: integer
          nullable: true
          x-go-type: float64
        pickupAvailable:
          type: boolean
          description: |-
            Whether this availability has pickup available.
            This field is only present when the capability `octo/pickups` is requested.
          example: true
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupRequired:
          type: boolean
          description: |-
            Whether pickup is required for this availability.
            This field is only present when the capability `octo/pickups` is requested.
          example: true
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupPoints:
          type: array
          items:
            $ref: "#/components/schemas/PickupPoint"
          description: |-
            Whether pickup is required for this availability.
            This field is only present when the capability `octo/pickups` is requested.
          example: []
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        unitPricing:
          type: array
          items:
            $ref: "#/components/schemas/PricingUnit"
          description: "Is on the object when Pricing capability is requested. "
          example:
            - unitId: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
              original: 1000
              retail: 1000
              net: 8000
              currency: EUR
              currencyPrecision: 2
              includedTaxes: []
              unitType: ADULT
            - unitId: child_797e3ce8-1860-4cbf-80ad-95857df1f640
              original: 500
              retail: 500
              net: 400
              currency: EUR
              currencyPrecision: 2
              includedTaxes: []
              unitType: CHILD
            - unitId: infant_897e3ce8-1860-4cbf-80ad-95857df1f640
              original: 0
              retail: 0
              net: 0
              currency: EUR
              currencyPrecision: 2
              includedTaxes: []
              unitType: INFANT
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
        pricing:
          allOf:
            - $ref: "#/components/schemas/Pricing"
          description: "Is on the object when Pricing capability is requested. "
          example:
            original: 2000
            retail: 2000
            net: 1600
            currency: EUR
            currencyPrecision: 2
            includedTaxes: []
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
        offerCode:
          type: string
          nullable: true
          description: Optional code used to apply a specific offer.
          example: SUMMER25
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        offerTitle:
          type: string
          nullable: true
          description: Optional display title of the offer.
          example: Summer Promo
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        offers:
          type: array
          items:
            $ref: "#/components/schemas/Offer"
          description: List of available offers for the availability.
          example:
            - title: Summer Promo
              code: SUMMER25
              description: Get 25% off selected tours!
              netDiscount: FULL
              restrictions:
                minUnits: 1
                maxUnits: 10
                minTotal: 50
                maxTotal: 500
                unitIds:
                  - unit-1
                  - unit-2
                  - unit-3
              usable: true
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        offer:
          type: object
          allOf:
            - $ref: "#/components/schemas/Offer"
          nullable: true
          description: Best or selected offer for this availability.
          example:
            title: Summer Promo
            code: SUMMER25
            description: Get 25% off selected tours!
            netDiscount: FULL
            restrictions:
              minUnits: 1
              maxUnits: 10
              minTotal: 50
              maxTotal: 500
              unitIds:
                - unit-1
                - unit-2
                - unit-3
            usable: true
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        meetingPoint:
          type: string
          description: Optional text for the meeting point location.
          example: In front of the main gate
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        meetingPointCoordinates:
          type: array
          items:
            type: number
            format: float
          description: Optional meeting point coordinates as an array [longitude, latitude].
          example:
            - 13.7563
            - 100.5018
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        meetingPointLatitude:
          type: number
          format: float
          description: Latitude component of the meeting point.
          example: 13.7563
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        meetingPointLongitude:
          type: number
          format: float
          description: Longitude component of the meeting point.
          example: 100.5018
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        meetingLocalDateTime:
          type: string
          format: date-time
          description: Local datetime string (ISO 8601) for when to meet.
          example: "2025-08-01T10:00:00+07:00"
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        tourGroup:
          allOf:
            - $ref: "#/components/schemas/TourGroup"
          description: Optional reference to the tour group this availability belongs to.
          example:
            id: c5a8d7a9-9279-4b2e-bd5d-21933cfd1234
            internalName: urban_adventures_bangkok
            title: Bangkok City Highlights
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        notices:
          type: array
          items:
            $ref: "#/components/schemas/Notice"
          description: List of important notices related to the availability.
          example: []
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
      example:
        id: "2022-05-23T00:00:00+01:00"
        localDateTimeStart: "2022-05-23T00:00:00+01:00"
        localDateTimeEnd: "2022-05-24T00:00:00+01:00"
        utcCutoffAt: "2022-05-22T23:00:00Z"
        allDay: false
        available: true
        status: AVAILABLE
        vacancies: 10
        capacity: 10
        maxUnits: null
        openingHours:
          - from: "08:00"
            to: "16:00"
        paxCount: 0
        maxPaxCount: null
        totalCapacity: 0
        noShows: 0
        totalNoShows: 0
        totalPaxCount: 0
        limitPaxCount: 10
        limitCapacity: 10
    AvailabilityCalendar:
      type: object
      required:
        - localDate
        - available
        - status
        - vacancies
        - capacity
        - openingHours
        - limitCapacity
        - totalCapacity
        - limitPaxCount
        - totalPaxCount
        - paxCount
        - utcCutoffAt
        - availabilityLocalStartTimes
      properties:
        localDate:
          type: string
          description: The specific date for querying availability on Availability Calendar endpoint. This field must follow the ISO 8601 date format (e.g., 2024-11-18). It ensures standardized representation of dates across different systems.
          example: "2022-05-12"
        available:
          type: boolean
          description: |-
            Indicates whether there is any remaining availability for the specified date.
            true: Availability exists.
            false: Fully booked or unavailable.
          example: true
        status:
          allOf:
            - $ref: "#/components/schemas/AvailabilityStatus"
          description: |-
            Defines the current status of the availability date:
            AVAILABLE: Open for booking.
            FREESALE: Unlimited availability, no capacity limits.
            SOLD_OUT: No spots available.
            LIMITED: Less than 50% capacity remaining.
            CLOSED: The availability is closed.
          example: AVAILABLE
        vacancies:
          type: integer
          nullable: true
          description: Specifies the number of available slots remaining quantity (highest remaining vacancies from all availabilities of this day). Should be nulled or omitted when status is FREESALE.
          example: 10
        capacity:
          type: integer
          nullable: true
          description: "The total capacity for this availability date. "
          example: 10
        openingHours:
          type: array
          items:
            $ref: "#/components/schemas/OpeningHours"
          description: Defines the opening hours for this availability, even for start time-based availability. Supports multiple periods for breaks in the day.
          example:
            - from: "08:00"
              to: "16:00"
        limitCapacity:
          type: integer
          nullable: true
          x-go-type: float64
        totalCapacity:
          type: integer
          nullable: true
          x-go-type: float64
        limitPaxCount:
          type: integer
          x-go-type: float64
        totalPaxCount:
          type: integer
          x-go-type: float64
        paxCount:
          type: integer
          x-go-type: float64
        utcCutoffAt:
          type: string
          format: date-time
          description: The time by which the booking must be confirmed at
          example: "2022-05-22T23:00:00Z"
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
        availabilityLocalStartTimes:
          type: array
          items:
            type: string
          minItems: 1
          description: List of local start times for the availability.
          example:
            - "10:00"
            - "12:00"
            - "14:00"
        unitPricingFrom:
          type: array
          items:
            $ref: "#/components/schemas/PricingUnit"
          description: "Is on the object when Pricing capability is requested. "
          example:
            - unitId: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
              original: 1000
              retail: 1000
              net: 8000
              currency: EUR
              currencyPrecision: 2
              includedTaxes: []
              unitType: ADULT
            - unitId: child_797e3ce8-1860-4cbf-80ad-95857df1f640
              original: 500
              retail: 500
              net: 400
              currency: EUR
              currencyPrecision: 2
              includedTaxes: []
              unitType: CHILD
            - unitId: infant_897e3ce8-1860-4cbf-80ad-95857df1f640
              original: 0
              retail: 0
              net: 0
              currency: EUR
              currencyPrecision: 2
              includedTaxes: []
              unitType: INFANT
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
        pricingFrom:
          allOf:
            - $ref: "#/components/schemas/Pricing"
          description: "Is on the object when Pricing capability is requested. "
          example:
            original: 2000
            retail: 2000
            net: 1600
            currency: EUR
            currencyPrecision: 2
            includedTaxes: []
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
        offerCode:
          type: string
          nullable: true
          description: Optional code used to apply a specific offer.
          example: SUMMER25
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        offerTitle:
          type: string
          nullable: true
          description: Optional display title of the offer.
          example: Summer Promo
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        offers:
          type: array
          items:
            $ref: "#/components/schemas/Offer"
          description: List of available offers for the availability.
          example:
            - title: Summer Promo
              code: SUMMER25
              description: Get 25% off selected tours!
              netDiscount: FULL
              restrictions:
                minUnits: 1
                maxUnits: 10
                minTotal: 50
                maxTotal: 500
                unitIds:
                  - unit-1
                  - unit-2
                  - unit-3
              usable: true
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        offer:
          type: object
          allOf:
            - $ref: "#/components/schemas/Offer"
          nullable: true
          description: Best or selected offer for this availability.
          example:
            title: Summer Promo
            code: SUMMER25
            description: Get 25% off selected tours!
            netDiscount: FULL
            restrictions:
              minUnits: 1
              maxUnits: 10
              minTotal: 50
              maxTotal: 500
              unitIds:
                - unit-1
                - unit-2
                - unit-3
            usable: true
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
      example:
        localDate: "2022-05-12"
        available: true
        status: AVAILABLE
        vacancies: 10
        capacity: 10
        openingHours:
          - from: "08:00"
            to: "16:00"
        limitCapacity: null
        totalCapacity: null
        limitPaxCount: 10
        totalPaxCount: 10
        paxCount: 100
        utcCutoffAt: "2023-10-01T12:00:00Z"
        availabilityLocalStartTimes:
          - "10:00"
          - "12:00"
          - "14:00"
    AvailabilityCalendarBody:
      type: object
      required:
        - productId
        - optionId
      properties:
        productId:
          type: string
          description: The product id.
          example: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
        optionId:
          type: string
          description: The option id.
          example: DEFAULT
        localDateStart:
          type: string
          description: Start date to query for (YYYY-MM-DD).
          example: "2022-05-23"
        localDateEnd:
          type: string
          description: End date to query for (YYYY-MM-DD).
          example: "2022-05-29"
        units:
          type: array
          items:
            $ref: "#/components/schemas/AvailabilityUnit"
        currency:
          type: string
          description: Can be used only when pricing capability is used.
          example: USD
      example:
        productId: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
        optionId: DEFAULT
        localDateStart: "2022-05-23"
        localDateEnd: "2022-05-29"
    AvailabilityCalendarErrorResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/Octo.AvailabilityCalendarErrorResponse"
    AvailabilityCalendarOffers:
      type: object
      properties:
        offerCode:
          type: string
          nullable: true
          description: Optional code used to apply a specific offer.
          example: SUMMER25
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        offerTitle:
          type: string
          nullable: true
          description: Optional display title of the offer.
          example: Summer Promo
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        offers:
          type: array
          items:
            $ref: "#/components/schemas/Offer"
          description: List of available offers for the availability.
          example:
            - title: Summer Promo
              code: SUMMER25
              description: Get 25% off selected tours!
              netDiscount: FULL
              restrictions:
                minUnits: 1
                maxUnits: 10
                minTotal: 50
                maxTotal: 500
                unitIds:
                  - unit-1
                  - unit-2
                  - unit-3
              usable: true
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        offer:
          type: object
          allOf:
            - $ref: "#/components/schemas/Offer"
          nullable: true
          description: Best or selected offer for this availability.
          example:
            title: Summer Promo
            code: SUMMER25
            description: Get 25% off selected tours!
            netDiscount: FULL
            restrictions:
              minUnits: 1
              maxUnits: 10
              minTotal: 50
              maxTotal: 500
              unitIds:
                - unit-1
                - unit-2
                - unit-3
            usable: true
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
      example:
        offerCode: SUMMER25
        offerTitle: Summer Promo
        offers:
          - title: Summer Promo
            code: SUMMER25
            description: Get 25% off selected tours!
            netDiscount: FULL
            restrictions:
              minUnits: 1
              maxUnits: 10
              minTotal: 50
              maxTotal: 500
              unitIds:
                - unit-1
                - unit-2
                - unit-3
            usable: true
        offer:
          title: Summer Promo
          code: SUMMER25
          description: Get 25% off selected tours!
          netDiscount: FULL
          restrictions:
            minUnits: 1
            maxUnits: 10
            minTotal: 50
            maxTotal: 500
            unitIds:
              - unit-1
              - unit-2
              - unit-3
          usable: true
    AvailabilityCalendarPricing:
      type: object
      properties:
        unitPricingFrom:
          type: array
          items:
            $ref: "#/components/schemas/PricingUnit"
          description: "Is on the object when Pricing capability is requested. "
          example:
            - unitId: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
              original: 1000
              retail: 1000
              net: 8000
              currency: EUR
              currencyPrecision: 2
              includedTaxes: []
              unitType: ADULT
            - unitId: child_797e3ce8-1860-4cbf-80ad-95857df1f640
              original: 500
              retail: 500
              net: 400
              currency: EUR
              currencyPrecision: 2
              includedTaxes: []
              unitType: CHILD
            - unitId: infant_897e3ce8-1860-4cbf-80ad-95857df1f640
              original: 0
              retail: 0
              net: 0
              currency: EUR
              currencyPrecision: 2
              includedTaxes: []
              unitType: INFANT
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
        pricingFrom:
          allOf:
            - $ref: "#/components/schemas/Pricing"
          description: "Is on the object when Pricing capability is requested. "
          example:
            original: 2000
            retail: 2000
            net: 1600
            currency: EUR
            currencyPrecision: 2
            includedTaxes: []
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
    AvailabilityCalendarRequest:
      type: object
      required:
        - body
      properties:
        body:
          allOf:
            - $ref: "#/components/schemas/AvailabilityCalendarBody"
          example:
            productId: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
            optionId: DEFAULT
            localDateStart: "2022-05-23"
            localDateEnd: "2022-05-29"
            units:
              - id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                quantity: 2
              - id: child_797e3ce8-1860-4cbf-80ad-95857df1f640
                quantity: 1
    AvailabilityCheckBody:
      type: object
      required:
        - productId
        - optionId
      properties:
        productId:
          type: string
          description: The product id.
          example: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
        optionId:
          type: string
          description: The option id.
          example: DEFAULT
        localDateStart:
          type: string
          description: Start date to query for (YYYY-MM-DD). Required if `localDateEnd` is set.
          example: "2022-05-23"
        localDateEnd:
          type: string
          description: End date to query for (YYYY-MM-DD). Required if `localDateStart` is set.
          example: "2022-05-29"
        availabilityIds:
          type: array
          items:
            type: string
          description: Filter the results by the given ids.
          example:
            - "2022-05-23T00:00:00+01:00"
        units:
          type: array
          items:
            $ref: "#/components/schemas/AvailabilityUnit"
        currency:
          type: string
          description: Can be used only when pricing capability is used.
          example: USD
      example:
        productId: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
        optionId: DEFAULT
        localDateStart: "2022-05-23"
        localDateEnd: "2022-05-29"
    AvailabilityCheckErrorResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/Octo.AvailabilityCheckErrorResponse"
    AvailabilityCheckRequest:
      type: object
      required:
        - body
      properties:
        body:
          allOf:
            - $ref: "#/components/schemas/AvailabilityCheckBody"
          example:
            productId: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
            optionId: DEFAULT
            localDateStart: "2022-05-23"
            localDateEnd: "2022-05-29"
            units:
              - id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                quantity: 2
              - id: child_797e3ce8-1860-4cbf-80ad-95857df1f640
                quantity: 1
    AvailabilityContent:
      type: object
      properties:
        meetingPoint:
          type: string
          description: Optional text for the meeting point location.
          example: In front of the main gate
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        meetingPointCoordinates:
          type: array
          items:
            type: number
            format: float
          description: Optional meeting point coordinates as an array [longitude, latitude].
          example:
            - 13.7563
            - 100.5018
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        meetingPointLatitude:
          type: number
          format: float
          description: Latitude component of the meeting point.
          example: 13.7563
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        meetingPointLongitude:
          type: number
          format: float
          description: Longitude component of the meeting point.
          example: 100.5018
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        meetingLocalDateTime:
          type: string
          format: date-time
          description: Local datetime string (ISO 8601) for when to meet.
          example: "2025-08-01T10:00:00+07:00"
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        tourGroup:
          allOf:
            - $ref: "#/components/schemas/TourGroup"
          description: Optional reference to the tour group this availability belongs to.
          example:
            id: c5a8d7a9-9279-4b2e-bd5d-21933cfd1234
            internalName: urban_adventures_bangkok
            title: Bangkok City Highlights
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        notices:
          type: array
          items:
            $ref: "#/components/schemas/Notice"
          description: List of important notices related to the availability.
          example: []
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
      example:
        meetingPoint: In front of the main gate
        meetingPointCoordinates:
          - 13.7563
          - 100.5018
        meetingPointLatitude: 13.7563
        meetingPointLongitude: 100.5018
        meetingLocalDateTime: "2025-08-01T10:00:00+07:00"
        tourGroup:
          id: c5a8d7a9-9279-4b2e-bd5d-21933cfd1234
          internalName: urban_adventures_bangkok
          title: Bangkok City Highlights
        notices: []
    AvailabilityOffers:
      type: object
      properties:
        offerCode:
          type: string
          nullable: true
          description: Optional code used to apply a specific offer.
          example: SUMMER25
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        offerTitle:
          type: string
          nullable: true
          description: Optional display title of the offer.
          example: Summer Promo
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        offers:
          type: array
          items:
            $ref: "#/components/schemas/Offer"
          description: List of available offers for the availability.
          example:
            - title: Summer Promo
              code: SUMMER25
              description: Get 25% off selected tours!
              netDiscount: FULL
              restrictions:
                minUnits: 1
                maxUnits: 10
                minTotal: 50
                maxTotal: 500
                unitIds:
                  - unit-1
                  - unit-2
                  - unit-3
              usable: true
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        offer:
          type: object
          allOf:
            - $ref: "#/components/schemas/Offer"
          nullable: true
          description: Best or selected offer for this availability.
          example:
            title: Summer Promo
            code: SUMMER25
            description: Get 25% off selected tours!
            netDiscount: FULL
            restrictions:
              minUnits: 1
              maxUnits: 10
              minTotal: 50
              maxTotal: 500
              unitIds:
                - unit-1
                - unit-2
                - unit-3
            usable: true
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
      example:
        offerCode: SUMMER25
        offerTitle: Summer Promo
        offers:
          - title: Summer Promo
            code: SUMMER25
            description: Get 25% off selected tours!
            netDiscount: FULL
            restrictions:
              minUnits: 1
              maxUnits: 10
              minTotal: 50
              maxTotal: 500
              unitIds:
                - unit-1
                - unit-2
                - unit-3
            usable: true
        offer:
          title: Summer Promo
          code: SUMMER25
          description: Get 25% off selected tours!
          netDiscount: FULL
          restrictions:
            minUnits: 1
            maxUnits: 10
            minTotal: 50
            maxTotal: 500
            unitIds:
              - unit-1
              - unit-2
              - unit-3
          usable: true
    AvailabilityPickups:
      type: object
      properties:
        pickupAvailable:
          type: boolean
          description: |-
            Whether this availability has pickup available.
            This field is only present when the capability `octo/pickups` is requested.
          example: true
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupRequired:
          type: boolean
          description: |-
            Whether pickup is required for this availability.
            This field is only present when the capability `octo/pickups` is requested.
          example: true
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupPoints:
          type: array
          items:
            $ref: "#/components/schemas/PickupPoint"
          description: |-
            Whether pickup is required for this availability.
            This field is only present when the capability `octo/pickups` is requested.
          example: []
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
      example:
        pickupAvailable: true
        pickupRequired: true
        pickupPoints: []
    AvailabilityPricing:
      type: object
      properties:
        unitPricing:
          type: array
          items:
            $ref: "#/components/schemas/PricingUnit"
          description: "Is on the object when Pricing capability is requested. "
          example:
            - unitId: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
              original: 1000
              retail: 1000
              net: 8000
              currency: EUR
              currencyPrecision: 2
              includedTaxes: []
              unitType: ADULT
            - unitId: child_797e3ce8-1860-4cbf-80ad-95857df1f640
              original: 500
              retail: 500
              net: 400
              currency: EUR
              currencyPrecision: 2
              includedTaxes: []
              unitType: CHILD
            - unitId: infant_897e3ce8-1860-4cbf-80ad-95857df1f640
              original: 0
              retail: 0
              net: 0
              currency: EUR
              currencyPrecision: 2
              includedTaxes: []
              unitType: INFANT
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
        pricing:
          allOf:
            - $ref: "#/components/schemas/Pricing"
          description: "Is on the object when Pricing capability is requested. "
          example:
            original: 2000
            retail: 2000
            net: 1600
            currency: EUR
            currencyPrecision: 2
            includedTaxes: []
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
    AvailabilityStatus:
      type: string
      enum:
        - AVAILABLE
        - FREESALE
        - SOLD_OUT
        - LIMITED
        - CLOSED
      example: AVAILABLE
    AvailabilityType:
      type: string
      enum:
        - START_TIME
        - OPENING_HOURS
      example: START_TIME
    AvailabilityUnit:
      type: object
      required:
        - quantity
      properties:
        id:
          type: string
          description: The unit id.
          example: adult
          x-order: 1
        type:
          $ref: "#/components/schemas/UnitType"
        quantity:
          type: integer
          description: The quantity of the unit.
          example: 2
      example:
        id: adult
        quantity: 2
    AvailabilityUpdate:
      type: object
      required:
        - webhook
        - availability
        - productId
        - optionId
        - supplier
      properties:
        webhook:
          allOf:
            - $ref: "#/components/schemas/Webhook"
          description: Webhook metadata for this availability update.
        availability:
          allOf:
            - $ref: "#/components/schemas/Availability"
          description: The updated availability block.
        productId:
          type: string
          description: ID of the product the availability belongs to.
          example: prod-001
        optionId:
          type: string
          description: ID of the option the availability belongs to.
          example: opt-001
        supplier:
          allOf:
            - $ref: "#/components/schemas/Supplier"
          description: The supplier associated with the availability.
      example:
        webhook:
          id: webhook-001
          event: booking_update
          url: https://api.example.com/webhooks
          retryOnError: true
          useContactLanguage: false
          headers: {}
          capabilities:
            - octo/pricing
            - octo/offers
        availability:
          id: "2022-05-23T00:00:00+01:00"
          localDateTimeStart: "2022-05-23T00:00:00+01:00"
          localDateTimeEnd: "2022-05-24T00:00:00+01:00"
          utcCutoffAt: "2022-05-22T23:00:00Z"
          allDay: false
          available: true
          status: AVAILABLE
          vacancies: 10
          capacity: 10
          maxUnits: null
          openingHours:
            - from: "08:00"
              to: "16:00"
          paxCount: 0
          maxPaxCount: null
          totalCapacity: 0
          noShows: 0
          totalNoShows: 0
          totalPaxCount: 0
          limitPaxCount: 10
          limitCapacity: 10
        productId: prod-001
        optionId: opt-001
        supplier:
          id: 697e3ce8-1860-4cbf-80ad-95857df1f640
          name: Merlin Entertainments
          endpoint: https://api.my-booking-platform.com/v1
          contact:
            website: null
            email: support@ventrata.com
            telephone: null
            address: Marble Arch, London, W1H 7EJ, United Kingdom
          destinations: []
    Booking:
      type: object
      required:
        - id
        - uuid
        - testMode
        - resellerReference
        - supplierReference
        - status
        - utcCreatedAt
        - utcUpdatedAt
        - utcExpiresAt
        - utcRedeemedAt
        - utcConfirmedAt
        - productId
        - optionId
        - cancellable
        - cancellation
        - freesale
        - availabilityId
        - notes
        - deliveryMethods
        - voucher
        - unitItems
        - rebookingUuid
        - originalRebookingUuid
        - alias
        - settlementMethod
        - quote
        - confirmable
        - agent
        - reseller
        - requiredContactFields
        - visibleContactFields
        - rejection
        - utcNoshowedAt
        - utcRebookedAt
        - user
        - seller
        - localDateTimeStart
        - localDateTimeEnd
        - emailReceipt
        - label
      properties:
        id:
          type: string
          format: uuid
          description: A unique identifier generated by the supplier system for the booking. This ID ensures traceability and must be unique within the system.
          example: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
          x-order: 2
        uuid:
          type: string
          format: uuid
          description: An optional idempotency key set when creating a booking to prevent duplicate bookings in case of retries. Used for API calls.
          example: 559aed3d-6d5b-4fe0-bfca-99f5e7218a56
        testMode:
          type: boolean
          description: Indicates whether the booking was created in test mode. If true, it is a test booking.
          example: false
        resellerReference:
          type: string
          nullable: true
          description: A reference provided by the reseller to identify the booking.
          example: null
        supplierReference:
          type: string
          nullable: true
          description: A reference provided by the reseller to identify the booking.
          example: XOPSUT
        status:
          allOf:
            - $ref: "#/components/schemas/BookingStatus"
          description: |-
            Represents the current state of the booking:
            ON_HOLD: Awaiting confirmation.
            EXPIRED: Not confirmed within the hold expiration time.
            CONFIRMED: Successfully confirmed.
            CANCELLED: The booking was canceled.
            PENDING: Awaiting external confirmation.
            REDEEMED: The booking has been used.
          example: ON_HOLD
        utcCreatedAt:
          type: string
          format: date-time
          description: An ISO8601 date time in UTC when the booking was created.
          example: "2022-05-25T10:34:22Z"
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
        utcUpdatedAt:
          type: string
          format: date-time
          description: An ISO8601 date time in UTC when the booking was last updated, if applicable.
          example: "2022-05-25T10:34:22Z"
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
        utcExpiresAt:
          type: string
          format: date-time
          nullable: true
          description: An ISO8601 date times in UTC for when this booking is due to expire if the status is ON_HOLD.
          example: "2022-05-25T11:04:22Z"
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
        utcRedeemedAt:
          type: string
          format: date-time
          nullable: true
          description: An ISO8601 date time in UTC at when the booking was redeemed, if applicable.
          example: "2022-06-25T10:34:22Z"
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
        utcConfirmedAt:
          type: string
          format: date-time
          nullable: true
          description: An ISO8601 date time in UTC when the booking was confirmed, if applicable.
          example: "2022-05-25T11:00:22Z"
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
        productId:
          type: string
          format: uuid
          description: The ID of product booked.
          example: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
        product:
          allOf:
            - $ref: "#/components/schemas/Product"
          description: "The object of booked product. "
          example:
            id: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
            internalName: London Eye General Admission
            reference: LEYE-GA
            locale: en-GB
            timeZone: Europe/London
            allowFreesale: true
            instantConfirmation: true
            instantDelivery: true
            availabilityRequired: true
            availabilityType: START_TIME
            deliveryFormats:
              - QRCODE
            deliveryMethods:
              - TICKET
            redemptionMethod: DIGITAL
            options:
              - id: DEFAULT
                default: true
                internalName: DEFAULT
                reference: null
                availabilityLocalStartTimes:
                  - "00:00"
                cancellationCutoff: 1 hour
                cancellationCutoffAmount: 1
                cancellationCutoffUnit: hour
                requiredContactFields:
                  - firstName
                restrictions:
                  minUnits: 0
                  maxUnits: 9
                  minPaxCount: 0
                  maxPaxCount: null
                units:
                  - id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                    internalName: Adult(s)
                    reference: LR1-01-new
                    type: ADULT
                    restrictions:
                      minAge: 3
                      maxAge: 17
                      idRequired: true
                      minQuantity: 2
                      maxQuantity: 7
                      paxCount: 1
                      accompaniedBy:
                        - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                      required: false
                      accompaniedByRatio: null
                    requiredContactFields:
                      - firstName
                    tags: []
                    visibleContactFields: []
                availabilityLocalDateStart: "2025-09-01"
                availabilityLocalDateEnd: null
                tags: []
                availabilityCutoff: 1 hour
                availabilityCutoffAmount: 1
                availabilityCutoffUnit: hour
                visibleContactFields: []
            tags: []
            settlementMethods:
              - direct
            freesaleDurationAmount: 2
            freesaleDurationUnit: hour
        optionId:
          type: string
          description: The ID of option booked.
          example: DEFAULT
        option:
          allOf:
            - $ref: "#/components/schemas/Option"
          description: The ID of option booked.
          example:
            id: DEFAULT
            default: true
            internalName: DEFAULT
            reference: null
            availabilityLocalStartTimes:
              - "00:00"
            cancellationCutoff: 1 hour
            cancellationCutoffAmount: 1
            cancellationCutoffUnit: hour
            requiredContactFields:
              - firstName
            restrictions:
              minUnits: 0
              maxUnits: 9
              minPaxCount: 0
              maxPaxCount: null
            units:
              - id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                internalName: Adult(s)
                reference: LR1-01-new
                type: ADULT
                restrictions:
                  minAge: 3
                  maxAge: 17
                  idRequired: true
                  minQuantity: 2
                  maxQuantity: 7
                  paxCount: 1
                  accompaniedBy:
                    - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                  required: false
                  accompaniedByRatio: null
                requiredContactFields:
                  - firstName
                tags: []
                visibleContactFields: []
            availabilityLocalDateStart: "2025-09-01"
            availabilityLocalDateEnd: null
            tags: []
            availabilityCutoff: 1 hour
            availabilityCutoffAmount: 1
            availabilityCutoffUnit: hour
            visibleContactFields: []
        cancellable:
          type: boolean
          description: The object of booked option.
          example: true
        cancellation:
          type: object
          allOf:
            - $ref: "#/components/schemas/BookingCancellation"
          nullable: true
          description: A boolean field indicating whether this booking can be cancelled.
          example:
            refund: FULL
            reason: this product sucks
            utcCancelledAt: "2022-05-25T11:00:22Z"
        freesale:
          type: boolean
          description: Indicates if the booking was made without checking availability.
          example: false
        availabilityId:
          type: string
          nullable: true
          description: The ID of availability booked.
          example: ""
        availability:
          type: object
          allOf:
            - $ref: "#/components/schemas/Availability"
          nullable: true
          description: The availability object that was booked.
          example:
            id: "2022-05-23T00:00:00+01:00"
            localDateTimeStart: "2022-05-23T00:00:00+01:00"
            localDateTimeEnd: "2022-05-24T00:00:00+01:00"
            utcCutoffAt: "2022-05-22T23:00:00Z"
            allDay: false
            available: true
            status: AVAILABLE
            vacancies: 10
            capacity: 10
            maxUnits: null
            openingHours:
              - from: "08:00"
                to: "16:00"
            paxCount: 0
            maxPaxCount: null
            totalCapacity: 0
            noShows: 0
            totalNoShows: 0
            totalPaxCount: 0
            limitPaxCount: 10
            limitCapacity: 10
        contact:
          allOf:
            - $ref: "#/components/schemas/CustomerContact"
          description: Customer contact details for the booking (see unit object for per ticket / unit details).
          example:
            fullName: John Doe
            firstName: John
            lastName: Doe
            emailAddress: johndoe@email.com
            phoneNumber: ""
            locales:
              - en
            postalCode: ""
            country: ""
            notes: ""
            taxId: ""
            title: ""
            streetAddress: ""
            city: ""
            state: ""
            allowMarketing: true
        notes:
          type: string
          nullable: true
          description: Customer-facing public notes for the booking.
          example: Optional notes for the booking
        deliveryMethods:
          type: array
          items:
            $ref: "#/components/schemas/DeliveryMethod"
          description: |-
            Specifies all supported methods of how tickets or vouchers for this booking are delivered.
            TICKET: Delivered individually per unit in the booking, where each person or unit receives a separate ticket. These will be provided in the ticket object.
            VOUCHER: Delivered as a single voucher for the entire booking, consolidating all units under one document. These will be provided in the voucher object.
            This field ensures clarity on the format of ticket or voucher delivery to resellers and customers.
          example:
            - TICKET
            - VOUCHER
        voucher:
          type: object
          allOf:
            - $ref: "#/components/schemas/Ticket"
          nullable: true
          description: Details for voucher-based delivery, provided when VOUCHER is one of deliveryMethods.
          example:
            redemptionMethod: DIGITAL
            utcRedeemedAt: "2021-10-27T23:28:43Z"
            deliveryOptions:
              - deliveryFormat: QRCODE
                deliveryValue: ""
            utcNoshowedAt: "2021-10-27T23:28:43Z"
        unitItems:
          type: array
          items:
            $ref: "#/components/schemas/UnitItem"
          description: An array of unit items included in the booking.
          example:
            - uuid: 3b1bc2ee-3155-4738-9471-f49842a07327
              resellerReference: A reference the reseller uses to identify the unit within all bookings.
              supplierReference: A reference the supplier uses to identify the unit within all bookings.
              unitId: This MUST be a unique identifier within the scope of the option.
              unit:
                id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                internalName: Adult(s)
                reference: LR1-01-new
                type: ADULT
                restrictions:
                  minAge: 3
                  maxAge: 17
                  idRequired: true
                  minQuantity: 2
                  maxQuantity: 7
                  paxCount: 1
                  accompaniedBy:
                    - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                  required: false
                  accompaniedByRatio: null
                requiredContactFields:
                  - firstName
                tags: []
                visibleContactFields: []
              status: CONFIRMED
              utcRedeemedAt: "2021-10-27 23:28:43Z"
              contact:
                fullName: John Doe
                firstName: John
                lastName: Doe
                emailAddress: johndoe@email.com
                phoneNumber: ""
                locales:
                  - en
                postalCode: ""
                country: ""
                notes: ""
                taxId: ""
                title: ""
                streetAddress: ""
                city: ""
                state: ""
                allowMarketing: true
              ticket: null
              id: ""
              alias: ""
              rebookingUuid: ""
              rebookingUnitItemUuid: ""
              originalRebookingUuid: ""
              originalRebookingUnitItemUuid: ""
              utcRebookedAt: "2021-10-27 23:28:43Z"
              utcNoshowedAt: "2021-10-27 23:28:43Z"
              unitType: ADULT
          x-go-type-skip-optional-pointer: true
        pricing:
          allOf:
            - $ref: "#/components/schemas/Pricing"
          description: "Is on the object when Pricing capability is requested. "
          example:
            original: 2000
            retail: 2000
            net: 1600
            currency: EUR
            currencyPrecision: 2
            includedTaxes: []
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
        rebookingUuid:
          type: string
          nullable: true
          format: uuid
          description: A UUID you can set when generating the booking to use as an idempotency key.
          example: ""
        originalRebookingUuid:
          type: string
          nullable: true
          format: uuid
          description: UUID of the original booking if this booking is a rebooking.
          example: ""
        alias:
          type: string
          nullable: true
          description: An alias for the booking.
          example: ""
        settlementMethod:
          allOf:
            - $ref: "#/components/schemas/SettlementMethod"
          example: direct
        quote:
          type: boolean
          description: If `TRUE`, booking was created as a quote.
          example: false
        confirmable:
          type: boolean
          description: Whether the booking can be confirmed.
          example: true
        agent:
          type: object
          allOf:
            - $ref: "#/components/schemas/Agent"
          nullable: true
          example: null
        reseller:
          type: object
          allOf:
            - $ref: "#/components/schemas/Reseller"
          nullable: true
          example: null
        requiredContactFields:
          type: array
          items:
            $ref: "#/components/schemas/ContactField"
          description: An array of required contact fields.
          example: []
        visibleContactFields:
          type: array
          items:
            $ref: "#/components/schemas/ContactField"
          description: An array of visible contact fields.
          example: []
        rejection:
          type: object
          allOf:
            - $ref: "#/components/schemas/BookingRejection"
          nullable: true
          example:
            reason: null
            utcRejectedAt: "2022-06-29T22:00:00Z"
        utcNoshowedAt:
          type: string
          format: date-time
          nullable: true
          example: null
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
            type: string
            format: date-time
            nullable: true
            example: "2022-05-25 11:04:22Z"
            description: An RFC 3339 date times in UTC for when this booking was marked as no-show.
          x-go-type: types.TimeRFC3339
        utcRebookedAt:
          type: string
          format: date-time
          nullable: true
          description: An RFC 3339 date time in UTC when the booking was rebooked.
          example: null
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
        tags:
          type: array
          items:
            type: string
        user:
          type: object
          allOf:
            - $ref: "#/components/schemas/User"
          nullable: true
        seller:
          type: object
          allOf:
            - $ref: "#/components/schemas/Seller"
          nullable: true
        localDateTimeStart:
          type: string
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
            type: string
            format: date-time
            nullable: true
            example: "2022-05-25 11:04:22Z"
            description: The start time for this booking. This will be in the local time zone of the product. Must be an `ISO 8601` compliant date and time.
        localDateTimeEnd:
          type: string
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
            type: string
            format: date-time
            nullable: true
            example: "2022-05-25 11:04:22Z"
            description: The end time for this booking. This will be in the local time zone of the product. Must be an `ISO 8601` compliant date and time.
        emailReceipt:
          type: boolean
        label:
          type: object
          allOf:
            - $ref: "#/components/schemas/Label"
          nullable: true
        pickupRequested:
          type: boolean
          description: Whether the booking requires a pickup. This field is only present when octo/pickups capability is requested.
          example: true
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupId:
          type: string
          nullable: true
          format: uuid
          description: The pickup ID that identifies the pickup in the booking system to make this reservation. This field is only present when octo/pickups capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupHotel:
          type: string
          nullable: true
          description: |-
            A hotel name and address that will be included in the booking.
            This field is only present when octo/pickups capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupRoom:
          type: string
          nullable: true
          description: |-
            A room number in the pickup hotel.
            This field is only present when octo/pickups capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupNotes:
          type: string
          nullable: true
          description: Optional notes for the pickup. This field is only present when octo/pickups capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupPoint:
          type: object
          allOf:
            - $ref: "#/components/schemas/PickupPoint"
          nullable: true
          description: A pickup point that will be included in the booking. This field is only present when octo/pickups capability is requested.
          example: null
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        duration:
          type: string
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        durationAmount:
          type: number
          x-go-type: float64
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        durationUnit:
          allOf:
            - $ref: "#/components/schemas/DurationUnit"
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        meetingLocalDateTime:
          type: string
          nullable: true
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
        meetingPoint:
          type: string
          nullable: true
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        meetingPointCoordinates:
          type: string
          nullable: true
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        notices:
          type: array
          items:
            $ref: "#/components/schemas/Notice"
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        termsAccepted:
          type: boolean
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        primary:
          type: boolean
          x-oapi-codegen-extra-tags:
            capability: octo/cart
            required: true
          x-capability-data:
            capability: octo/cart
            required: true
        orderId:
          type: string
          format: uuid
          x-oapi-codegen-extra-tags:
            capability: octo/cart
            required: true
          x-capability-data:
            capability: octo/cart
            required: true
        orderReference:
          type: string
          x-oapi-codegen-extra-tags:
            capability: octo/cart
            required: true
          x-capability-data:
            capability: octo/cart
            required: true
        offerCode:
          type: string
          nullable: true
          description: Optional code used to apply a specific offer.
          example: SUMMER25
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        offerTitle:
          type: string
          nullable: true
          description: Optional display title of the offer.
          example: Summer Promo
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        offerComparisons:
          type: array
          items:
            $ref: "#/components/schemas/OfferComparison"
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        offerIsCombination:
          type: boolean
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        offers:
          type: array
          items:
            $ref: "#/components/schemas/Offer"
          description: List of available offers for the availability.
          example:
            - title: Summer Promo
              code: SUMMER25
              description: Get 25% off selected tours!
              netDiscount: FULL
              restrictions:
                minUnits: 1
                maxUnits: 10
                minTotal: 50
                maxTotal: 500
                unitIds:
                  - unit-1
                  - unit-2
                  - unit-3
              usable: true
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        offer:
          type: object
          allOf:
            - $ref: "#/components/schemas/Offer"
          nullable: true
          description: Best or selected offer for this availability.
          example:
            title: Summer Promo
            code: SUMMER25
            description: Get 25% off selected tours!
            netDiscount: FULL
            restrictions:
              minUnits: 1
              maxUnits: 10
              minTotal: 50
              maxTotal: 500
              unitIds:
                - unit-1
                - unit-2
                - unit-3
            usable: true
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        questionAnswers:
          type: array
          items:
            $ref: "#/components/schemas/QuestionAnswer"
          description: |-
            An array of questions and andswers that will be included in the booking.
            This field is only present when octo/questions capability is requested.
          example:
            - id: ""
              label: ""
              hint: ""
              maxLength: 128
              inputType: select
              required: false
              selectOptions:
                - label: ""
                  value: ""
              coverImageUrl: ""
              description: ""
              shortDescription: ""
              internalName: ""
              title: ""
              questionId: ""
              value: ""
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/questions
            required: true
          x-capability-data:
            capability: octo/questions
            required: true
        resourceAllocations:
          type: array
          items:
            $ref: "#/components/schemas/ResourceAllocation"
          description: List of resource allocations associated with the booking.
          example:
            - id: alloc-001
              resourceGroupId: group-001
              resourceGroup:
                id: group-001
                title: Tour Buses
                split: true
              resourceId: resource-001
              resource:
                id: resource-001
                title: Tour Bus
                seating: true
                seats:
                  - id: seat-001
                    title: A1
                    column: 1
                    row: 1
              paxCount: 3
              seatIds:
                - seat-001
              seats:
                - id: seat-001
                  title: A1
                  column: 1
                  row: 1
          x-oapi-codegen-extra-tags:
            capability: octo/resources
            required: true
          x-capability-data:
            capability: octo/resources
            required: true
        giftPayment:
          type: object
          allOf:
            - $ref: "#/components/schemas/GiftPayment"
          nullable: true
          x-oapi-codegen-extra-tags:
            capability: octo/gifts
            required: true
          x-capability-data:
            capability: octo/gifts
            required: true
        extraItems:
          type: array
          items:
            $ref: "#/components/schemas/ExtraItem"
          x-oapi-codegen-extra-tags:
            capability: octo/extras
            required: true
          x-capability-data:
            capability: octo/extras
            required: true
        isPackage:
          type: boolean
          description: |-
            Whether the booking is a package.
            This field is only present when octo/packages capability is requested.
          example: true
          x-oapi-codegen-extra-tags:
            capability: octo/packages
        packageIncludeId:
          type: string
          format: uuid
          description: |-
            The package ID that identifies the package in the booking system to make this reservation.
            This field is only present when octo/packages capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: octo/packages
        packageInclude:
          type: object
          allOf:
            - $ref: "#/components/schemas/Include"
          nullable: true
          description: |-
            A package that will be included in the booking.
            This field is only present when octo/packages capability is requested.
          example: null
          x-oapi-codegen-extra-tags:
            capability: octo/packages
        packageBookings:
          type: array
          items:
            $ref: "#/components/schemas/Booking"
          description: |-
            An array of bookings that will be included in the package.
            This field is only present when octo/packages capability is requested.
          example: []
          x-oapi-codegen-extra-tags:
            capability: octo/packages
        adjustments:
          type: array
          items:
            $ref: "#/components/schemas/BookingAdjustment"
          description: An array of adjustments that will be included in the booking. This field is only present when octo/adjustments capability is requested.
          example:
            - per: UNIT
              amount: 10
              notes: ""
              netDiscount: FULL
          x-oapi-codegen-extra-tags:
            capability: octo/adjustments
            required: true
          x-capability-data:
            capability: octo/adjustments
            required: true
        identity:
          allOf:
            - $ref: "#/components/schemas/Identity"
          example:
            id: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
            key: xyz
          x-oapi-codegen-extra-tags:
            capability: octo/identities
        identityId:
          type: string
          format: uuid
          example: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
          x-oapi-codegen-extra-tags:
            capability: octo/identities
      example:
        id: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
        uuid: 559aed3d-6d5b-4fe0-bfca-99f5e7218a56
        testMode: false
        resellerReference: null
        supplierReference: XOPSUT
        status: ON_HOLD
        utcCreatedAt: "2022-05-25T10:34:22Z"
        utcUpdatedAt: "2022-05-25T10:34:22Z"
        utcExpiresAt: "2022-05-25T11:04:22Z"
        utcRedeemedAt: null
        utcConfirmedAt: null
        productId: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
        product:
          id: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
          internalName: London Eye General Admission
          reference: LEYE-GA
          locale: en-GB
          timeZone: Europe/London
          allowFreesale: true
          instantConfirmation: true
          instantDelivery: true
          availabilityRequired: true
          availabilityType: START_TIME
          deliveryFormats:
            - QRCODE
          deliveryMethods:
            - TICKET
          redemptionMethod: DIGITAL
          options:
            - id: DEFAULT
              default: true
              internalName: DEFAULT
              reference: null
              availabilityLocalStartTimes:
                - "00:00"
              cancellationCutoff: 1 hour
              cancellationCutoffAmount: 1
              cancellationCutoffUnit: hour
              requiredContactFields:
                - firstName
              restrictions:
                minUnits: 0
                maxUnits: 9
                minPaxCount: 0
                maxPaxCount: null
              units:
                - id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                  internalName: Adult(s)
                  reference: LR1-01-new
                  type: ADULT
                  restrictions:
                    minAge: 3
                    maxAge: 17
                    idRequired: true
                    minQuantity: 2
                    maxQuantity: 7
                    paxCount: 1
                    accompaniedBy:
                      - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                    required: false
                    accompaniedByRatio: null
                  requiredContactFields:
                    - firstName
                  tags: []
                  visibleContactFields: []
              availabilityLocalDateStart: "2025-09-01"
              availabilityLocalDateEnd: null
              tags: []
              availabilityCutoff: 1 hour
              availabilityCutoffAmount: 1
              availabilityCutoffUnit: hour
              visibleContactFields: []
          tags: []
          settlementMethods:
            - direct
          freesaleDurationAmount: 2
          freesaleDurationUnit: hour
        optionId: DEFAULT
        option:
          id: DEFAULT
          default: true
          internalName: DEFAULT
          reference: null
          availabilityLocalStartTimes:
            - "00:00"
          cancellationCutoff: 1 hour
          cancellationCutoffAmount: 1
          cancellationCutoffUnit: hour
          requiredContactFields:
            - firstName
          restrictions:
            minUnits: 0
            maxUnits: 9
            minPaxCount: 0
            maxPaxCount: null
          units:
            - id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
              internalName: Adult(s)
              reference: LR1-01-new
              type: ADULT
              restrictions:
                minAge: 3
                maxAge: 17
                idRequired: true
                minQuantity: 2
                maxQuantity: 7
                paxCount: 1
                accompaniedBy:
                  - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                required: false
                accompaniedByRatio: null
              requiredContactFields:
                - firstName
              tags: []
              visibleContactFields: []
          availabilityLocalDateStart: "2025-09-01"
          availabilityLocalDateEnd: null
          tags: []
          availabilityCutoff: 1 hour
          availabilityCutoffAmount: 1
          availabilityCutoffUnit: hour
          visibleContactFields: []
        cancellable: true
        cancellation:
          refund: FULL
          reason: this product sucks
          utcCancelledAt: "2022-05-25T11:00:22Z"
        freesale: false
        availabilityId: ""
        availability:
          id: "2022-05-23T00:00:00+01:00"
          localDateTimeStart: "2022-05-23T00:00:00+01:00"
          localDateTimeEnd: "2022-05-24T00:00:00+01:00"
          utcCutoffAt: "2022-05-22T23:00:00Z"
          allDay: false
          available: true
          status: AVAILABLE
          vacancies: 10
          capacity: 10
          maxUnits: null
          openingHours:
            - from: "08:00"
              to: "16:00"
          paxCount: 0
          maxPaxCount: null
          totalCapacity: 0
          noShows: 0
          totalNoShows: 0
          totalPaxCount: 0
          limitPaxCount: 10
          limitCapacity: 10
        contact:
          fullName: John Doe
          firstName: John
          lastName: Doe
          emailAddress: johndoe@email.com
          phoneNumber: ""
          locales:
            - en
          postalCode: ""
          country: ""
          notes: ""
          taxId: ""
          title: ""
          streetAddress: ""
          city: ""
          state: ""
          allowMarketing: true
        notes: Optional notes for the booking
        deliveryMethods:
          - TICKET
          - VOUCHER
        voucher: null
        unitItems:
          - uuid: 3b1bc2ee-3155-4738-9471-f49842a07327
            resellerReference: A reference the reseller uses to identify the unit within all bookings.
            supplierReference: A reference the supplier uses to identify the unit within all bookings.
            unitId: This MUST be a unique identifier within the scope of the option.
            unit:
              id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
              internalName: Adult(s)
              reference: LR1-01-new
              type: ADULT
              restrictions:
                minAge: 3
                maxAge: 17
                idRequired: true
                minQuantity: 2
                maxQuantity: 7
                paxCount: 1
                accompaniedBy:
                  - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                required: false
                accompaniedByRatio: null
              requiredContactFields:
                - firstName
              tags: []
              visibleContactFields: []
            status: CONFIRMED
            utcRedeemedAt: "2021-10-27 23:28:43Z"
            contact:
              fullName: John Doe
              firstName: John
              lastName: Doe
              emailAddress: johndoe@email.com
              phoneNumber: ""
              locales:
                - en
              postalCode: ""
              country: ""
              notes: ""
              taxId: ""
              title: ""
              streetAddress: ""
              city: ""
              state: ""
              allowMarketing: true
            ticket: null
            id: ""
            alias: ""
            rebookingUuid: ""
            rebookingUnitItemUuid: ""
            originalRebookingUuid: ""
            originalRebookingUnitItemUuid: ""
            utcRebookedAt: "2021-10-27 23:28:43Z"
            utcNoshowedAt: "2021-10-27 23:28:43Z"
            unitType: ADULT
        rebookingUuid: ""
        originalRebookingUuid: ""
        alias: ""
        settlementMethod: direct
        quote: false
        confirmable: true
        agent: null
        reseller: null
        requiredContactFields: []
        visibleContactFields: []
        rejection:
          reason: null
          utcRejectedAt: "2022-06-29T22:00:00Z"
        utcNoshowedAt: null
        utcRebookedAt: null
        seller: null
        user: null
        localDateTimeStart: "2022-05-23T00:00:00+01:00"
        localDateTimeEnd: "2022-05-23T00:00:00+01:00"
        emailReceipt: false
        label: null
    BookingAdjustment:
      type: object
      required:
        - per
        - amount
        - notes
        - netDiscount
      properties:
        per:
          allOf:
            - $ref: "#/components/schemas/AdjustmentPer"
          description: The amount of the adjustment.
          example: UNIT
        amount:
          type: number
          description: The amount of the adjustment.
          example: 10
          x-go-type-import:
            path: github.com/shopspring/decimal
          x-go-type: decimal.Decimal
        notes:
          type: string
          nullable: true
          description: Optional notes for the adjustment.
          example: ""
        netDiscount:
          allOf:
            - $ref: "#/components/schemas/AdjustmentDiscount"
          description: ""
          example: FULL
    BookingAdjustments:
      type: object
      properties:
        adjustments:
          type: array
          items:
            $ref: "#/components/schemas/BookingAdjustment"
          description: An array of adjustments that will be included in the booking. This field is only present when octo/adjustments capability is requested.
          example:
            - per: UNIT
              amount: 10
              notes: ""
              netDiscount: FULL
          x-oapi-codegen-extra-tags:
            capability: octo/adjustments
            required: true
          x-capability-data:
            capability: octo/adjustments
            required: true
    BookingCancellation:
      type: object
      required:
        - refund
        - reason
        - utcCancelledAt
      properties:
        refund:
          allOf:
            - $ref: "#/components/schemas/Refund"
          description: Whether the booking was refunded as part of the cancellation. Possible values are FULL, PARTIAL or NONE
          example: FULL
        reason:
          type: string
          nullable: true
          description: A text value describing why the cancellation happened.
          example: this product sucks
        utcCancelledAt:
          type: string
          format: date-time
          description: An RFC 3339 date time in UTC indicating when the booking was cancelled.
          example: "2022-05-25T11:00:22Z"
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
      example:
        refund: FULL
        reason: this product sucks
        utcCancelledAt: "2022-05-25T11:00:22Z"
    BookingCancellationBody:
      type: object
      properties:
        emailReceipt:
          type: boolean
      allOf:
        - $ref: "#/components/schemas/Octo.BookingCancellationBody"
      example:
        reason: this product sucks
        emailReceipt: false
    BookingCancellationErrorResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/Octo.BookingCancellationErrorResponse"
    BookingCancellationPathParams:
      type: object
      required:
        - uuid
      properties:
        uuid:
          type: string
          description: The booking uuid
    BookingCart:
      type: object
      properties:
        primary:
          type: boolean
          x-oapi-codegen-extra-tags:
            capability: octo/cart
            required: true
          x-capability-data:
            capability: octo/cart
            required: true
        orderId:
          type: string
          format: uuid
          x-oapi-codegen-extra-tags:
            capability: octo/cart
            required: true
          x-capability-data:
            capability: octo/cart
            required: true
        orderReference:
          type: string
          x-oapi-codegen-extra-tags:
            capability: octo/cart
            required: true
          x-capability-data:
            capability: octo/cart
            required: true
    BookingConfirmationBody:
      type: object
      required:
        - contact
      properties:
        emailReceipt:
          type: boolean
          description: Whether you want OCTO Cloud to email the guest a copy of their receipt and tickets. (defaults to false)
          example: true
        resellerReference:
          type: string
          description: Your reference for this booking. Also known as a Voucher Number.
          example: VOUCHER-0123
        unitItems:
          type: array
          items:
            $ref: "#/components/schemas/UnitItemIdentifier"
          description: An array of unit items in the booking. To retain or modify existing unit items, you must include the unit item with the associated uuid, otherwise that unit item will be removed.
          example:
            - uuid: 3b1bc2ee-3155-4738-9471-f49842a07327
              unitId: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
              resellerReference: "123321"
              alias: alias
        contact:
          allOf:
            - $ref: "#/components/schemas/BookingContact"
          description: Contact details for the main guest who will attend the tour/attraction. Contact Body can be applied to both the booking object (the main reservation) or the unit object (individual ticket holders - if the supplier requires this information).
          example:
            fullName: John Doe
            firstName: John
            lastName: Doe
            emailAddress: johndoe@email.com
            phoneNumber: "+447840739436"
            locales:
              - en
              - en-GB
              - en-US
            country: GB
            taxId: ""
            streetAddress: ""
            city: ""
            state: ""
            allowMarketing: true
        notes:
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
        pickupRequested:
          type: boolean
          description: Whether the customer requested pickup.
          example: true
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupPointId:
          type: string
          description: The ID of the chosen pickup point.
          example: pickup-123
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupHotel:
          type: string
          description: The hotel address (optional).
          example: 123 City Hotel, Downtown
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupHotelRoom:
          type: string
          description: The hotel room number (optional).
          example: Room 405
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
      example:
        resellerReference: VOUCHER-0123
        contact:
          fullName: John Doe
          firstName: John
          lastName: Doe
          emailAddress: johndoe@email.com
          phoneNumber: "+447840739436"
          locales:
            - en
            - en-GB
            - en-US
          country: GB
          taxId: ""
          streetAddress: ""
          city: ""
          state: ""
          allowMarketing: true
        unitItems:
          - uuid: 3b1bc2ee-3155-4738-9471-f49842a07327
            unitId: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
            resellerReference: "123321"
            alias: alias
    BookingConfirmationErrorResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/Octo.BookingConfirmationErrorResponse"
    BookingConfirmationPathParams:
      type: object
      required:
        - uuid
      properties:
        uuid:
          type: string
          description: The booking uuid
    BookingContact:
      type: object
      properties:
        fullName:
          type: string
          description: The full name of the booking holder or the ticket holder. Can also be retrieved as an alias for the concatenation of `firstName` and `lastName`
          example: John Doe
        firstName:
          type: string
          description: The first name of the booking holder or the ticket holder.
          example: John
        lastName:
          type: string
          description: The last name of the booking holder or the ticket holder.
          example: Doe
        emailAddress:
          type: string
          format: email
          description: The email address of the booking holder or the ticket holder.
          example: johndoe@email.com
        phoneNumber:
          type: string
          description: The phone number of the booking holder or the ticket holder.
          example: "+447840739436"
        locales:
          type: array
          items:
            type: string
          description: An array of locale values, equivalent to navigator.languages in a browsers environment.
          example:
            - en
            - en-GB
            - en-US
        postalCode:
          type: string
          description: The PO Box of the booking holder or the ticket holder.
          example: ""
        country:
          type: string
          description: The country of the booking holder or the ticket holder.
          example: GB
        notes:
          type: string
          description: Optional notes for the booking.
          example: Optional notes
        taxId:
          type: string
          nullable: true
          description: The tax ID of the booking holder or the ticket holder.
          example: ""
        streetAddress:
          type: string
          nullable: true
          description: The street address of the booking holder or the ticket holder.
          example: ""
        city:
          type: string
          nullable: true
          description: The city of the booking holder or the ticket holder.
          example: ""
        state:
          type: string
          nullable: true
          description: The state of the booking holder or the ticket holder.
          example: ""
        allowMarketing:
          type: boolean
          description: Whether the booking holder or the ticket holder allows marketing.
          example: true
      example:
        fullName: John Doe
        firstName: John
        lastName: Doe
        emailAddress: johndoe@email.com
        phoneNumber: "+447840739436"
        locales:
          - en
          - en-GB
          - en-US
        country: GB
        taxId: ""
        streetAddress: ""
        city: ""
        state: ""
        allowMarketing: true
    BookingContent:
      type: object
      properties:
        duration:
          type: string
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        durationAmount:
          type: number
          x-go-type: float64
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        durationUnit:
          allOf:
            - $ref: "#/components/schemas/DurationUnit"
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        meetingLocalDateTime:
          type: string
          nullable: true
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
        meetingPoint:
          type: string
          nullable: true
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        meetingPointCoordinates:
          type: string
          nullable: true
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        notices:
          type: array
          items:
            $ref: "#/components/schemas/Notice"
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        termsAccepted:
          type: boolean
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
      example:
        duration: 1 hour
        durationAmount: 1
        durationUnit: hour
        meetingLocalDateTime: null
        meetingPoint: null
        meetingPointCoordinates: null
        notices: []
        termsAccepted: true
    BookingExtras:
      type: object
      properties:
        extraItems:
          type: array
          items:
            $ref: "#/components/schemas/ExtraItem"
          x-oapi-codegen-extra-tags:
            capability: octo/extras
            required: true
          x-capability-data:
            capability: octo/extras
            required: true
    BookingGifts:
      type: object
      properties:
        giftPayment:
          type: object
          allOf:
            - $ref: "#/components/schemas/GiftPayment"
          nullable: true
          x-oapi-codegen-extra-tags:
            capability: octo/gifts
            required: true
          x-capability-data:
            capability: octo/gifts
            required: true
    BookingIdentities:
      type: object
      properties:
        identity:
          allOf:
            - $ref: "#/components/schemas/Identity"
          example:
            id: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
            key: xyz
          x-oapi-codegen-extra-tags:
            capability: octo/identities
        identityId:
          type: string
          format: uuid
          example: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
          x-oapi-codegen-extra-tags:
            capability: octo/identities
      example:
        identity:
          id: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
          key: xyz
        identityId: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
    BookingOffers:
      type: object
      properties:
        offerCode:
          type: string
          nullable: true
          description: Optional code used to apply a specific offer.
          example: SUMMER25
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        offerTitle:
          type: string
          nullable: true
          description: Optional display title of the offer.
          example: Summer Promo
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        offerComparisons:
          type: array
          items:
            $ref: "#/components/schemas/OfferComparison"
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        offerIsCombination:
          type: boolean
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        offers:
          type: array
          items:
            $ref: "#/components/schemas/Offer"
          description: List of available offers for the availability.
          example:
            - title: Summer Promo
              code: SUMMER25
              description: Get 25% off selected tours!
              netDiscount: FULL
              restrictions:
                minUnits: 1
                maxUnits: 10
                minTotal: 50
                maxTotal: 500
                unitIds:
                  - unit-1
                  - unit-2
                  - unit-3
              usable: true
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        offer:
          type: object
          allOf:
            - $ref: "#/components/schemas/Offer"
          nullable: true
          description: Best or selected offer for this availability.
          example:
            title: Summer Promo
            code: SUMMER25
            description: Get 25% off selected tours!
            netDiscount: FULL
            restrictions:
              minUnits: 1
              maxUnits: 10
              minTotal: 50
              maxTotal: 500
              unitIds:
                - unit-1
                - unit-2
                - unit-3
            usable: true
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
      example:
        offerCode: SUMMER25
        offerTitle: Summer Promo
        offerComparisons:
          - productId: prod_123
            optionId: opt_456
            pricing:
              original: 1000
              retail: 1000
              net: 8000
              currency: EUR
              currencyPrecision: 2
              includedTaxes: []
            product:
              id: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
              internalName: London Eye General Admission
              reference: LEYE-GA
              locale: en-GB
              timeZone: Europe/London
              allowFreesale: true
              instantConfirmation: true
              instantDelivery: true
              availabilityRequired: true
              availabilityType: START_TIME
              deliveryFormats:
                - QRCODE
              deliveryMethods:
                - TICKET
              redemptionMethod: DIGITAL
              options:
                - id: DEFAULT
                  default: true
                  internalName: DEFAULT
                  reference: null
                  availabilityLocalStartTimes:
                    - "00:00"
                  cancellationCutoff: 1 hour
                  cancellationCutoffAmount: 1
                  cancellationCutoffUnit: hour
                  requiredContactFields:
                    - firstName
                  restrictions:
                    minUnits: 0
                    maxUnits: 9
                    minPaxCount: 0
                    maxPaxCount: null
                  units:
                    - id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                      internalName: Adult(s)
                      reference: LR1-01-new
                      type: ADULT
                      restrictions:
                        minAge: 3
                        maxAge: 17
                        idRequired: true
                        minQuantity: 2
                        maxQuantity: 7
                        paxCount: 1
                        accompaniedBy:
                          - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                        required: false
                        accompaniedByRatio: null
                      requiredContactFields:
                        - firstName
                      tags: []
                      visibleContactFields: []
                  availabilityLocalDateStart: "2025-09-01"
                  availabilityLocalDateEnd: null
                  tags: []
                  availabilityCutoff: 1 hour
                  availabilityCutoffAmount: 1
                  availabilityCutoffUnit: hour
                  visibleContactFields: []
              tags: []
              settlementMethods:
                - direct
              freesaleDurationAmount: 2
              freesaleDurationUnit: hour
            shortDescription: Special summer combo
            units:
              - id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                internalName: Adult(s)
                reference: LR1-01-new
                type: ADULT
                restrictions:
                  minAge: 3
                  maxAge: 17
                  idRequired: true
                  minQuantity: 2
                  maxQuantity: 7
                  paxCount: 1
                  accompaniedBy:
                    - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                  required: false
                  accompaniedByRatio: null
                requiredContactFields:
                  - firstName
                tags: []
                visibleContactFields: []
        offerIsCombination: false
        offers:
          - title: Summer Promo
            code: SUMMER25
            description: Get 25% off selected tours!
            netDiscount: FULL
            restrictions:
              minUnits: 1
              maxUnits: 10
              minTotal: 50
              maxTotal: 500
              unitIds:
                - unit-1
                - unit-2
                - unit-3
            usable: true
        offer:
          title: Summer Promo
          code: SUMMER25
          description: Get 25% off selected tours!
          netDiscount: FULL
          restrictions:
            minUnits: 1
            maxUnits: 10
            minTotal: 50
            maxTotal: 500
            unitIds:
              - unit-1
              - unit-2
              - unit-3
          usable: true
    BookingPackages:
      type: object
      properties:
        isPackage:
          type: boolean
          description: |-
            Whether the booking is a package.
            This field is only present when octo/packages capability is requested.
          example: true
          x-oapi-codegen-extra-tags:
            capability: octo/packages
        packageIncludeId:
          type: string
          format: uuid
          description: |-
            The package ID that identifies the package in the booking system to make this reservation.
            This field is only present when octo/packages capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: octo/packages
        packageInclude:
          type: object
          allOf:
            - $ref: "#/components/schemas/Include"
          nullable: true
          description: |-
            A package that will be included in the booking.
            This field is only present when octo/packages capability is requested.
          example: null
          x-oapi-codegen-extra-tags:
            capability: octo/packages
        packageBookings:
          type: array
          items:
            $ref: "#/components/schemas/Booking"
          description: |-
            An array of bookings that will be included in the package.
            This field is only present when octo/packages capability is requested.
          example: []
          x-oapi-codegen-extra-tags:
            capability: octo/packages
      example:
        isPackage: true
        packageIncludeId: ""
        packageInclude: null
        packageBookings: []
    BookingPickupBody:
      type: object
      properties:
        pickupRequested:
          type: boolean
          description: Whether the customer requested pickup.
          example: true
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupPointId:
          type: string
          description: The ID of the chosen pickup point.
          example: pickup-123
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupHotel:
          type: string
          description: The hotel address (optional).
          example: 123 City Hotel, Downtown
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupHotelRoom:
          type: string
          description: The hotel room number (optional).
          example: Room 405
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
      example:
        pickupRequested: true
        pickupPointId: pickup-123
        pickupHotel: 123 City Hotel, Downtown
        pickupHotelRoom: Room 405
    BookingPickups:
      type: object
      properties:
        pickupRequested:
          type: boolean
          description: Whether the booking requires a pickup. This field is only present when octo/pickups capability is requested.
          example: true
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupId:
          type: string
          nullable: true
          format: uuid
          description: The pickup ID that identifies the pickup in the booking system to make this reservation. This field is only present when octo/pickups capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupHotel:
          type: string
          nullable: true
          description: |-
            A hotel name and address that will be included in the booking.
            This field is only present when octo/pickups capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupRoom:
          type: string
          nullable: true
          description: |-
            A room number in the pickup hotel.
            This field is only present when octo/pickups capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupNotes:
          type: string
          nullable: true
          description: Optional notes for the pickup. This field is only present when octo/pickups capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupPoint:
          type: object
          allOf:
            - $ref: "#/components/schemas/PickupPoint"
          nullable: true
          description: A pickup point that will be included in the booking. This field is only present when octo/pickups capability is requested.
          example: null
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
      example:
        pickupRequested: true
        pickupId: ""
        pickupHotel: ""
        pickupRoom: ""
        pickupNotes: ""
        pickupPoint: null
    BookingPricing:
      type: object
      properties:
        pricing:
          allOf:
            - $ref: "#/components/schemas/Pricing"
          description: "Is on the object when Pricing capability is requested. "
          example:
            original: 2000
            retail: 2000
            net: 1600
            currency: EUR
            currencyPrecision: 2
            includedTaxes: []
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
      example:
        pricing:
          original: 2000
          retail: 2000
          net: 1600
          currency: EUR
          currencyPrecision: 2
          includedTaxes: []
    BookingQuestions:
      type: object
      properties:
        questionAnswers:
          type: array
          items:
            $ref: "#/components/schemas/QuestionAnswer"
          description: |-
            An array of questions and andswers that will be included in the booking.
            This field is only present when octo/questions capability is requested.
          example:
            - id: ""
              label: ""
              hint: ""
              maxLength: 128
              inputType: select
              required: false
              selectOptions:
                - label: ""
                  value: ""
              coverImageUrl: ""
              description: ""
              shortDescription: ""
              internalName: ""
              title: ""
              questionId: ""
              value: ""
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/questions
            required: true
          x-capability-data:
            capability: octo/questions
            required: true
      example:
        questionAnswers:
          - id: ""
            label: ""
            hint: ""
            maxLength: 128
            inputType: select
            required: false
            selectOptions:
              - label: ""
                value: ""
            coverImageUrl: ""
            description: ""
            shortDescription: ""
            internalName: ""
            title: ""
            questionId: ""
            value: ""
    BookingRejection:
      type: object
      required:
        - reason
        - utcRejectedAt
      properties:
        reason:
          type: string
          nullable: true
          description: A text value describing why the rejection happened.
          example: null
        utcRejectedAt:
          type: string
          format: date-time
          nullable: true
          description: An RFC 3339 date time in UTC indicating when the booking was rejected.
          example: "2022-06-29T22:00:00Z"
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
      example:
        reason: null
        utcRejectedAt: "2022-06-29T22:00:00Z"
    BookingReservationBody:
      type: object
      required:
        - productId
        - optionId
        - unitItems
      properties:
        resellerReference:
          type: string
          description: Your reference for this booking. Also known as a Voucher Number.
          example: VOUCHER-0123
        productId:
          type: string
          format: uuid
          description: The product ID.
          example: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
        optionId:
          type: string
          format: uuid
          description: The option id.
          example: DEFAULT
        availabilityId:
          type: string
          description: The availability ID for the selected timeslot.
          example: "2022-05-23T00:00:00+01:00"
        expirationMinutes:
          type: integer
          description: How many minutes to reserve the availability, otherwise defaults to the supplier default amount.
          example: 15
          x-go-type: uint
        notes:
          type: string
          description: Optional notes for the booking.
          example: Optional notes
        emailReceipt:
          type: boolean
          description: Whether you want OCTO Cloud to email the guest a copy of their receipt and tickets. (defaults to false).
          example: true
        unitItems:
          type: array
          items:
            $ref: "#/components/schemas/UnitItemIdentifier"
          description: An array of unit items in the booking. To retain or modify existing unit items, you must include the unit item with the associated uuid, otherwise that unit item will be removed.
          example:
            - uuid: 3b1bc2ee-3155-4738-9471-f49842a07327
              unitId: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
        contact:
          allOf:
            - $ref: "#/components/schemas/BookingContact"
          description: Contact details for the main guest who will attend the tour/attraction. Contact BODY can be applied to both the booking object (the main reservation) or the unit object (individual ticket holders - if the supplier requires this information).
          example:
            fullName: John Doe
            firstName: John
            lastName: Doe
            emailAddress: johndoe@email.com
            phoneNumber: "+447840739436"
            locales:
              - en
              - en-GB
              - en-US
            country: GB
        currency:
          type: string
          description: Can be used only when pricing capability is used.
          example: USD
        alias:
          type: string
          description: The alias of the unit item.
          example: alias
        settlementMethod:
          allOf:
            - $ref: "#/components/schemas/SettlementMethod"
          example: direct
        quote:
          type: boolean
          description: Whether to quote the booking instead of confirming it.
          example: false
        freesale:
          type: boolean
          description: Whether to set freesale mode.
          example: false
        redeemed:
          type: boolean
          description: Whether the booking was redeemed.
          example: false
        uuid:
          type: string
          format: uuid
          description: A unique UUID to identify the booking. Setting this value acts like an idempotency key preventing you from double booking.
        tags:
          type: array
          items:
            type: string
        orderId:
          type: string
          format: uuid
        metadata:
          type: object
          additionalProperties:
            type: string
        pickupRequested:
          type: boolean
          description: Whether the customer requested pickup.
          example: true
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupPointId:
          type: string
          description: The ID of the chosen pickup point.
          example: pickup-123
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupHotel:
          type: string
          description: The hotel address (optional).
          example: 123 City Hotel, Downtown
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupHotelRoom:
          type: string
          description: The hotel room number (optional).
          example: Room 405
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
      example:
        productId: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
        optionId: DEFAULT
        availabilityId: "2022-05-23T00:00:00+01:00"
        notes: Optional notes
        unitItems:
          - unitId: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
          - unitId: child_797e3ce8-1860-4cbf-80ad-95857df1f640
          - unitId: infant_897e3ce8-1860-4cbf-80ad-95857df1f640
    BookingReservationErrorResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/Octo.BookingReservationErrorResponse"
    BookingReservationRequest:
      type: object
      required:
        - body
      properties:
        body:
          allOf:
            - $ref: "#/components/schemas/BookingReservationBody"
          example:
            productId: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
            optionId: DEFAULT
            availabilityId: "2022-05-23T00:00:00+01:00"
            notes: Optional notes
            unitItems:
              - unitId: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
              - unitId: child_797e3ce8-1860-4cbf-80ad-95857df1f640
              - unitId: infant_897e3ce8-1860-4cbf-80ad-95857df1f640
    BookingResources:
      type: object
      properties:
        resourceAllocations:
          type: array
          items:
            $ref: "#/components/schemas/ResourceAllocation"
          description: List of resource allocations associated with the booking.
          example:
            - id: alloc-001
              resourceGroupId: group-001
              resourceGroup:
                id: group-001
                title: Tour Buses
                split: true
              resourceId: resource-001
              resource:
                id: resource-001
                title: Tour Bus
                seating: true
                seats:
                  - id: seat-001
                    title: A1
                    column: 1
                    row: 1
              paxCount: 3
              seatIds:
                - seat-001
              seats:
                - id: seat-001
                  title: A1
                  column: 1
                  row: 1
          x-oapi-codegen-extra-tags:
            capability: octo/resources
            required: true
          x-capability-data:
            capability: octo/resources
            required: true
      example:
        resourceAllocations:
          - id: alloc-001
            resourceGroupId: group-001
            resourceGroup:
              id: group-001
              title: Tour Buses
              split: true
            resourceId: resource-001
            resource:
              id: resource-001
              title: Tour Bus
              seating: true
              seats:
                - id: seat-001
                  title: A1
                  column: 1
                  row: 1
            paxCount: 3
            seatIds:
              - seat-001
            seats:
              - id: seat-001
                title: A1
                column: 1
                row: 1
    BookingStatus:
      type: string
      enum:
        - ON_HOLD
        - CONFIRMED
        - EXPIRED
        - CANCELLED
        - REDEEMED
        - PENDING
        - REJECTED
        - NOSHOW
        - UPGRADED
      example: CONFIRMED
    BookingUpdate:
      type: object
      required:
        - webhook
        - booking
        - diff
        - supplier
      properties:
        webhook:
          allOf:
            - $ref: "#/components/schemas/Webhook"
          description: Webhook metadata for this update.
        booking:
          allOf:
            - $ref: "#/components/schemas/Booking"
          description: Current state of the booking.
        diff:
          type: array
          items:
            $ref: "#/components/schemas/Diff"
          description: List of changes between previous and current state.
        supplier:
          allOf:
            - $ref: "#/components/schemas/Supplier"
          description: ""
      example:
        webhook:
          id: webhook-001
          event: booking_update
          url: https://api.example.com/webhooks
          retryOnError: true
          useContactLanguage: false
          headers: {}
          capabilities:
            - octo/pricing
            - octo/offers
        booking:
          id: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
          uuid: 559aed3d-6d5b-4fe0-bfca-99f5e7218a56
          testMode: false
          resellerReference: null
          supplierReference: XOPSUT
          status: ON_HOLD
          utcCreatedAt: "2022-05-25T10:34:22Z"
          utcUpdatedAt: "2022-05-25T10:34:22Z"
          utcExpiresAt: "2022-05-25T11:04:22Z"
          utcRedeemedAt: null
          utcConfirmedAt: null
          productId: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
          product:
            id: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
            internalName: London Eye General Admission
            reference: LEYE-GA
            locale: en-GB
            timeZone: Europe/London
            allowFreesale: true
            instantConfirmation: true
            instantDelivery: true
            availabilityRequired: true
            availabilityType: START_TIME
            deliveryFormats:
              - QRCODE
            deliveryMethods:
              - TICKET
            redemptionMethod: DIGITAL
            options:
              - id: DEFAULT
                default: true
                internalName: DEFAULT
                reference: null
                availabilityLocalStartTimes:
                  - "00:00"
                cancellationCutoff: 1 hour
                cancellationCutoffAmount: 1
                cancellationCutoffUnit: hour
                requiredContactFields:
                  - firstName
                restrictions:
                  minUnits: 0
                  maxUnits: 9
                  minPaxCount: 0
                  maxPaxCount: null
                units:
                  - id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                    internalName: Adult(s)
                    reference: LR1-01-new
                    type: ADULT
                    restrictions:
                      minAge: 3
                      maxAge: 17
                      idRequired: true
                      minQuantity: 2
                      maxQuantity: 7
                      paxCount: 1
                      accompaniedBy:
                        - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                      required: false
                      accompaniedByRatio: null
                    requiredContactFields:
                      - firstName
                    tags: []
                    visibleContactFields: []
                availabilityLocalDateStart: "2025-09-01"
                availabilityLocalDateEnd: null
                tags: []
                availabilityCutoff: 1 hour
                availabilityCutoffAmount: 1
                availabilityCutoffUnit: hour
                visibleContactFields: []
            tags: []
            settlementMethods:
              - direct
            freesaleDurationAmount: 2
            freesaleDurationUnit: hour
          optionId: DEFAULT
          option:
            id: DEFAULT
            default: true
            internalName: DEFAULT
            reference: null
            availabilityLocalStartTimes:
              - "00:00"
            cancellationCutoff: 1 hour
            cancellationCutoffAmount: 1
            cancellationCutoffUnit: hour
            requiredContactFields:
              - firstName
            restrictions:
              minUnits: 0
              maxUnits: 9
              minPaxCount: 0
              maxPaxCount: null
            units:
              - id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                internalName: Adult(s)
                reference: LR1-01-new
                type: ADULT
                restrictions:
                  minAge: 3
                  maxAge: 17
                  idRequired: true
                  minQuantity: 2
                  maxQuantity: 7
                  paxCount: 1
                  accompaniedBy:
                    - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                  required: false
                  accompaniedByRatio: null
                requiredContactFields:
                  - firstName
                tags: []
                visibleContactFields: []
            availabilityLocalDateStart: "2025-09-01"
            availabilityLocalDateEnd: null
            tags: []
            availabilityCutoff: 1 hour
            availabilityCutoffAmount: 1
            availabilityCutoffUnit: hour
            visibleContactFields: []
          cancellable: true
          cancellation:
            refund: FULL
            reason: this product sucks
            utcCancelledAt: "2022-05-25T11:00:22Z"
          freesale: false
          availabilityId: ""
          availability:
            id: "2022-05-23T00:00:00+01:00"
            localDateTimeStart: "2022-05-23T00:00:00+01:00"
            localDateTimeEnd: "2022-05-24T00:00:00+01:00"
            utcCutoffAt: "2022-05-22T23:00:00Z"
            allDay: false
            available: true
            status: AVAILABLE
            vacancies: 10
            capacity: 10
            maxUnits: null
            openingHours:
              - from: "08:00"
                to: "16:00"
            paxCount: 0
            maxPaxCount: null
            totalCapacity: 0
            noShows: 0
            totalNoShows: 0
            totalPaxCount: 0
            limitPaxCount: 10
            limitCapacity: 10
          contact:
            fullName: John Doe
            firstName: John
            lastName: Doe
            emailAddress: johndoe@email.com
            phoneNumber: ""
            locales:
              - en
            postalCode: ""
            country: ""
            notes: ""
            taxId: ""
            title: ""
            streetAddress: ""
            city: ""
            state: ""
            allowMarketing: true
          notes: Optional notes for the booking
          deliveryMethods:
            - TICKET
            - VOUCHER
          voucher: null
          unitItems:
            - uuid: 3b1bc2ee-3155-4738-9471-f49842a07327
              resellerReference: A reference the reseller uses to identify the unit within all bookings.
              supplierReference: A reference the supplier uses to identify the unit within all bookings.
              unitId: This MUST be a unique identifier within the scope of the option.
              unit:
                id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                internalName: Adult(s)
                reference: LR1-01-new
                type: ADULT
                restrictions:
                  minAge: 3
                  maxAge: 17
                  idRequired: true
                  minQuantity: 2
                  maxQuantity: 7
                  paxCount: 1
                  accompaniedBy:
                    - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                  required: false
                  accompaniedByRatio: null
                requiredContactFields:
                  - firstName
                tags: []
                visibleContactFields: []
              status: CONFIRMED
              utcRedeemedAt: "2021-10-27 23:28:43Z"
              contact:
                fullName: John Doe
                firstName: John
                lastName: Doe
                emailAddress: johndoe@email.com
                phoneNumber: ""
                locales:
                  - en
                postalCode: ""
                country: ""
                notes: ""
                taxId: ""
                title: ""
                streetAddress: ""
                city: ""
                state: ""
                allowMarketing: true
              ticket: null
              id: ""
              alias: ""
              rebookingUuid: ""
              rebookingUnitItemUuid: ""
              originalRebookingUuid: ""
              originalRebookingUnitItemUuid: ""
              utcRebookedAt: "2021-10-27 23:28:43Z"
              utcNoshowedAt: "2021-10-27 23:28:43Z"
              unitType: ADULT
          rebookingUuid: ""
          originalRebookingUuid: ""
          alias: ""
          settlementMethod: direct
          quote: false
          confirmable: true
          agent: null
          reseller: null
          requiredContactFields: []
          visibleContactFields: []
          rejection:
            reason: null
            utcRejectedAt: "2022-06-29T22:00:00Z"
          utcNoshowedAt: null
          utcRebookedAt: null
          seller: null
          user: null
          localDateTimeStart: "2022-05-23T00:00:00+01:00"
          localDateTimeEnd: "2022-05-23T00:00:00+01:00"
          emailReceipt: false
          label: null
        diff:
          - op: replace
            path: /title
            was: Old Tour Title
            value: New Tour Title
        supplier:
          id: 697e3ce8-1860-4cbf-80ad-95857df1f640
          name: Merlin Entertainments
          endpoint: https://api.my-booking-platform.com/v1
          contact:
            website: null
            email: support@ventrata.com
            telephone: null
            address: Marble Arch, London, W1H 7EJ, United Kingdom
          destinations: []
    BookingUpdateBody:
      type: object
      properties:
        resellerReference:
          type: string
          description: Your reference for this booking. Also known as a Voucher Number.
          example: VOUCHER-0123
        productId:
          type: string
          format: uuid
          description: The product ID.
          example: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
        optionId:
          type: string
          format: uuid
          description: The option id.
          example: DEFAULT
        availabilityId:
          type: string
          description: The availability ID for the selected timeslot.
          example: "2022-05-23T00:00:00+01:00"
        expirationMinutes:
          type: integer
          description: How many minutes to reserve the availability, otherwise defaults to the supplier default amount.
          example: 15
          x-go-type: uint
        notes:
          type: string
          description: Optional notes for the booking.
          example: Optional notes
        emailReceipt:
          type: boolean
          description: Whether you want OCTO Cloud to email the guest a copy of their receipt and tickets. (defaults to false).
          example: true
        unitItems:
          type: array
          items:
            $ref: "#/components/schemas/UnitItemIdentifier"
          description: An array of unit items in the booking. To retain or modify existing unit items, you must include the unit item with the associated uuid, otherwise that unit item will be removed.
          example:
            - uuid: 3b1bc2ee-3155-4738-9471-f49842a07327
              unitId: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
          x-go-type-skip-optional-pointer: true
        contact:
          allOf:
            - $ref: "#/components/schemas/BookingContact"
          description: Contact details for the main guest who will attend the tour/attraction. Contact BODY can be applied to both the booking object (the main reservation) or the unit object (individual ticket holders - if the supplier requires this information).
          example:
            fullName: John Doe
            firstName: John
            lastName: Doe
            emailAddress: johndoe@email.com
            phoneNumber: "+447840739436"
            locales:
              - en
              - en-GB
              - en-US
            country: GB
        alias:
          type: string
          description: The alias of the unit item.
          example: alias
        settlementMethod:
          allOf:
            - $ref: "#/components/schemas/SettlementMethod"
          example: direct
        quote:
          type: boolean
          description: Whether to quote the booking instead of confirming it.
          example: false
        freesale:
          type: boolean
          description: Whether to set freesale mode.
          example: false
        redeemed:
          type: boolean
          description: Whether the booking was redeemed.
          example: false
        uuid:
          type: string
          format: uuid
          description: A unique UUID to identify the booking. Setting this value acts like an idempotency key preventing you from double booking.
        tags:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: string
        pickupRequested:
          type: boolean
          description: Whether the customer requested pickup.
          example: true
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupPointId:
          type: string
          description: The ID of the chosen pickup point.
          example: pickup-123
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupHotel:
          type: string
          description: The hotel address (optional).
          example: 123 City Hotel, Downtown
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupHotelRoom:
          type: string
          description: The hotel room number (optional).
          example: Room 405
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
      example:
        resellerReference: VOUCHER-0123
        productId: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
        optionId: DEFAULT
        availabilityId: "2022-05-23T00:00:00+01:00"
        expirationMinutes: 15
        notes: Optional notes
        emailReceipt: true
        unitItems:
          - uuid: 3b1bc2ee-3155-4738-9471-f49842a07327
            unitId: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
        contact:
          fullName: John Doe
          firstName: John
          lastName: Doe
          emailAddress: johndoe@email.com
          phoneNumber: "+447840739436"
          locales:
            - en
            - en-GB
            - en-US
          country: GB
    BookingUpdatePathParams:
      type: object
      required:
        - uuid
      properties:
        uuid:
          type: string
          description: The booking uuid
    Brand:
      type: object
      required:
        - id
        - name
        - contact
        - color
        - secondaryColor
        - backgroundColor
        - accentFont
        - bodyFont
        - headerFont
        - checkoutLogoUrl
        - logoUrl
        - logoWhiteUrl
        - faviconUrl
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        contact:
          type: object
          allOf:
            - $ref: "#/components/schemas/BrandContact"
          nullable: true
        color:
          type: string
          nullable: true
        secondaryColor:
          type: string
          nullable: true
        backgroundColor:
          type: string
          nullable: true
        accentFont:
          type: object
          allOf:
            - $ref: "#/components/schemas/Font"
          nullable: true
        bodyFont:
          type: object
          allOf:
            - $ref: "#/components/schemas/Font"
          nullable: true
        headerFont:
          type: object
          allOf:
            - $ref: "#/components/schemas/Font"
          nullable: true
        checkoutLogoUrl:
          type: string
          nullable: true
        logoUrl:
          type: string
          nullable: true
        logoWhiteUrl:
          type: string
          nullable: true
        faviconUrl:
          type: string
          nullable: true
      example:
        id: ""
        name: ""
        contact:
          name: null
          email: null
          telephone: null
          address: null
          website: null
        color: ""
        secondaryColor: ""
        backgroundColor: ""
        accentFont:
          id: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
          name: ""
          normalTtfUrl: ""
          italicTtfUrl: ""
          boldItalicTtfUrl: ""
          boldTtfUrl: ""
        bodyFont: null
        headerFont: null
        checkoutLogoUrl: ""
        logoUrl: ""
        logoWhiteUrl: ""
        faviconUrl: ""
    BrandContact:
      type: object
      required:
        - name
        - email
        - telephone
        - address
        - website
      properties:
        name:
          type: string
          nullable: true
          description: ""
          example: null
        email:
          type: string
          nullable: true
          description: ""
          example: null
        telephone:
          type: string
          nullable: true
          description: ""
          example: null
        address:
          type: string
          nullable: true
          description: ""
          example: null
        website:
          type: string
          nullable: true
          description: ""
          example: null
      example:
        name: null
        email: null
        telephone: null
        address: null
        website: null
    CancelOrderBody:
      type: object
      properties:
        reason:
          type: string
          description: A text description reason for cancelling
          example: Customer Requested
      example:
        reason: A text description reason for cancelling
    Capability:
      type: object
      required:
        - id
        - revision
        - required
        - dependencies
        - docs
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/CapabilityId"
          description: Unique identifier of the capability.
          example: octo/pricing
        revision:
          type: integer
          format: int32
          description: Revision number for the capability.
          example: 3
        required:
          type: boolean
          description: Whether this capability is required.
          example: true
        dependencies:
          type: array
          items:
            $ref: "#/components/schemas/Octo.CapabilityId"
          description: List of dependent capability IDs.
          example: []
        docs:
          type: string
          nullable: true
          description: Optional documentation or description for this capability.
          example: This capability enables booking creation.
      example:
        id: octo/pricing
        revision: 3
        required: true
        dependencies: []
        docs: This capability enables booking creation.
    CapabilityId:
      type: string
      enum:
        - octo/content
        - octo/pricing
        - octo/pickups
        - octo/adjustments
        - octo/offers
        - octo/cart
        - octo/cardPayments
        - octo/checkin
        - octo/webhooks
        - octo/mappings
        - octo/redemption
        - octo/google
        - octo/questions
        - octo/resources
        - octo/gifts
        - octo/extras
        - octo/packages
        - octo/identities
        - ventrata/content
        - ventrata/getyourguide
        - ventrata/partners
      x-go-type-import:
        path: ventrata-octo-api/pkg/id
      x-go-type: id.CapabilityId
    Category:
      type: object
      required:
        - id
        - default
        - name
        - title
        - tags
        - shortDescription
        - coverImageUrl
        - bannerImageUrl
        - productIds
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier used in the platform to represent the category.
          example: 697e3ce8-1860-4cbf-80ad-95857df1f640
          x-order: 1
        default:
          type: boolean
          description: TRUE` identifies the category as default, and should therefore rendered and selected first
          example: true
        name:
          type: string
          nullable: true
          description: The name of the category.
          example: ""
        title:
          type: string
          nullable: true
          description: The title of the category.
          example: ""
        tags:
          type: array
          items:
            type: string
          description: An array of tags that the category falls under.
          example: []
        shortDescription:
          type: string
          nullable: true
          description: The description of the category
          example: ""
        coverImageUrl:
          type: string
          format: uri
          nullable: true
          description: The URL of the image that represents the category.
          example: The URL of the image that represents the category.
        bannerImageUrl:
          type: string
          format: uri
          nullable: true
          description: The URL of the image that represents the category.
          example: The URL of the image that represents the category.
        productIds:
          type: array
          items:
            type: string
          description: An array of product IDs that the category falls under. This field is not visible if this Category is a product category.
          example:
            - 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
          x-go-type-import:
            path: github.com/google/uuid
          x-go-type: "*[]uuid.UUID"
      example:
        id: 697e3ce8-1860-4cbf-80ad-95857df1f640
        default: true
        name: ""
        title: ""
        tags: []
        shortDescription: ""
        coverImageUrl: The URL of the image that represents the category.
        bannerImageUrl: The URL of the image that represents the category.
        productIds:
          - 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
    ConfirmOrderBody:
      type: object
      properties:
        expirationMinutes:
          type: integer
          format: int32
          description: Optional expiration duration for the order, in minutes.
          example: 30
        emailReceipt:
          type: boolean
          description: Whether to send a receipt to the customer's email.
          example: true
        contact:
          allOf:
            - $ref: "#/components/schemas/BookingContact"
          description: Contact information for the order.
          example:
            fullName: John Doe
            firstName: John
            lastName: Doe
            emailAddress: johndoe@email.com
            phoneNumber: "+447840739436"
            locales:
              - en
              - en-GB
              - en-US
            country: GB
            taxId: ""
            streetAddress: ""
            city: ""
            state: ""
            allowMarketing: true
        currency:
          type: string
          description: Optional ISO 4217 currency code for the order.
          example: USD
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
      example:
        expirationMinutes: 30
        emailReceipt: true
        contact:
          fullName: John Doe
          firstName: John
          lastName: Doe
          emailAddress: johndoe@email.com
          phoneNumber: "+447840739436"
          locales:
            - en
            - en-GB
            - en-US
          country: GB
          taxId: ""
          streetAddress: ""
          city: ""
          state: ""
          allowMarketing: true
        currency: USD
    ConfirmOrderPricingBody:
      type: object
      properties:
        currency:
          type: string
          description: Optional ISO 4217 currency code for the order.
          example: USD
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
      example:
        currency: USD
    ContactField:
      type: string
      enum:
        - firstName
        - lastName
        - emailAddress
        - phoneNumber
        - country
        - notes
        - locales
        - allowMarketing
        - postalCode
      example: emailAddress
    CreateOrderBody:
      type: object
      properties:
        expirationMinutes:
          type: integer
          format: int32
          description: Optional expiration duration for the order, in minutes.
          example: 30
        emailReceipt:
          type: boolean
          description: Whether to send a receipt to the customer's email.
          example: true
        contact:
          allOf:
            - $ref: "#/components/schemas/BookingContact"
          description: Contact information for the order.
          example:
            fullName: John Doe
            firstName: John
            lastName: Doe
            emailAddress: johndoe@email.com
            phoneNumber: "+447840739436"
            locales:
              - en
              - en-GB
              - en-US
            country: GB
            taxId: ""
            streetAddress: ""
            city: ""
            state: ""
            allowMarketing: true
        currency:
          type: string
          description: Optional ISO 4217 currency code for the order.
          example: USD
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
      example:
        expirationMinutes: 30
        emailReceipt: true
        contact:
          fullName: John Doe
          firstName: John
          lastName: Doe
          emailAddress: johndoe@email.com
          phoneNumber: "+447840739436"
          locales:
            - en
            - en-GB
            - en-US
          country: GB
          taxId: ""
          streetAddress: ""
          city: ""
          state: ""
          allowMarketing: true
        currency: USD
    CreateOrderPricingBody:
      type: object
      properties:
        currency:
          type: string
          description: Optional ISO 4217 currency code for the order.
          example: USD
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
      example:
        currency: USD
    CreateWaitlistRequest:
      type: object
      required:
        - productId
        - optionId
        - localDate
        - contact
        - units
      properties:
        productId:
          type: string
          format: uuid
        optionId:
          $ref: "#/components/schemas/DefaultableID"
        returnUrl:
          type: string
        localDate:
          type: string
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.Date
        contact:
          $ref: "#/components/schemas/BookingContact"
        units:
          type: array
          items:
            $ref: "#/components/schemas/WaitlistUnitItemIdentifier"
    CreateWebhookBody:
      type: object
      required:
        - url
        - event
      properties:
        url:
          type: string
          description: |-
            A fully formed URL. If you want to include basic authentication credentials that is supported also. For example:

            https://user:pass@example.com/webook
            https://example.com/webhook
          example: https://api.example.com/webhook
        event:
          allOf:
            - $ref: "#/components/schemas/WebhookEvent"
          description: |-
            The event that will trigger the webhook. Possible values are:

            booking_update triggered when an existing booking is confirmed, updated or cancelled.

            availability_update triggered when an availability changes.
          example: booking_update
        retryOnError:
          type: boolean
          description: Whether the webhook should be retried if the HTTP endpoint doesn't return a success status (200 to 299), default is true.
          example: true
        useContactLanguage:
          type: boolean
          description: Whether the webhook event should attempt to use the language configured by the guest when they booked. This makes sure the data in the webhook body is in the guest's language, default is true.
          example: false
        headers:
          type: object
          additionalProperties:
            type: string
          description: A object of headers to be used on each webhook request. This can be useful to keep your endpoint secure.
          example: {}
        capabilities:
          type: array
          items:
            $ref: "#/components/schemas/CapabilityId"
          description: A list of capabilities that will be activated before triggering the webhook which will affect the data included in the webhook body.
          example:
            - octo/pricing
      example:
        url: https://api.example.com/webhook
        event: booking_update
        retryOnError: true
        useContactLanguage: false
        headers: {}
        capabilities:
          - octo/pricing
    CreateWebhookRequest:
      type: object
      required:
        - body
      properties:
        body:
          $ref: "#/components/schemas/CreateWebhookBody"
    CustomerContact:
      type: object
      required:
        - fullName
        - firstName
        - lastName
        - emailAddress
        - phoneNumber
        - locales
        - postalCode
        - country
        - notes
        - taxId
        - title
        - streetAddress
        - city
        - state
        - allowMarketing
      properties:
        fullName:
          type: string
          nullable: true
          description: The full name of the booking holder. Can also be retrieved as an alias for the concatenation of firstName and lastName
          example: John Doe
        firstName:
          type: string
          nullable: true
          description: The first name of the booking holder.
          example: John
        lastName:
          type: string
          nullable: true
          description: The last name of the booking holder.
          example: Doe
        emailAddress:
          type: string
          nullable: true
          format: email
          description: The email address of the booking holder.
          example: johndoe@email.com
        phoneNumber:
          type: string
          nullable: true
          description: The phone number of the booking holder.
          example: ""
        locales:
          type: array
          items:
            type: string
          nullable: true
          description: An array of locale values, equivalent to navigator.languages in a browsers environment; representing customer language for booking communications.
          example:
            - en
        postalCode:
          type: string
          nullable: true
          description: The PO Box of the booking holder or the ticket holder.
          example: ""
        country:
          type: string
          nullable: true
          description: The country of the booking holder or the ticket holder.
          example: ""
        notes:
          type: string
          nullable: true
          description: Customer-facing public notes for the booking.
          example: ""
        taxId:
          type: string
          nullable: true
          description: The tax ID of the booking holder or the ticket holder.
          example: ""
        title:
          type: string
          nullable: true
          description: The tax ID of the booking holder or the ticket holder.
          example: ""
        streetAddress:
          type: string
          nullable: true
          description: The street address of the booking holder or the ticket holder.
          example: ""
        city:
          type: string
          nullable: true
          description: The city of the booking holder or the ticket holder.
          example: ""
        state:
          type: string
          nullable: true
          description: The state of the booking holder or the ticket holder.
          example: ""
        allowMarketing:
          type: boolean
          description: Whether the booking holder or the ticket holder allows marketing.
          example: true
      example:
        fullName: John Doe
        firstName: John
        lastName: Doe
        emailAddress: johndoe@email.com
        phoneNumber: ""
        locales:
          - en
        postalCode: ""
        country: ""
        notes: ""
        taxId: ""
        title: ""
        streetAddress: ""
        city: ""
        state: ""
        allowMarketing: true
    DefaultableID:
      type: string
      description: |-
        The defaultable ID is a string that can be used to identify a defaultable object.
        It is either a UUID in which case the object is uniquely identified (not defaulted) or
        it is the string `DEFAULT` in which case the object is defaulted.
    DeleteWebhookPathParams:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: The booking uuid
    DeliveryFormat:
      type: string
      enum:
        - PDF_URL
        - QRCODE
        - CODE128
        - PKPASS_URL
      example: QRCODE
    DeliveryMethod:
      type: string
      enum:
        - VOUCHER
        - TICKET
      example: TICKET
    DeliveryOption:
      type: object
      required:
        - deliveryFormat
        - deliveryValue
      properties:
        deliveryFormat:
          allOf:
            - $ref: "#/components/schemas/DeliveryFormat"
          description: |-
            The format in which vouchers for this product are delivered. Each format specifies how the vouchers will be represented:
            QRCODE: A code presented as a QR Code, commonly used for scanning at entry points.
            CODE128: A linear barcode format widely used for retail and ticketing purposes.
            AZTECCODE: A two-dimensional barcode format similar to QR codes but more compact. It is optimized for small spaces and often used in transportation and event ticketing.
            PDF_URL: A URL linking to a downloadable PDF containing the complete ticket details for this product.
            PKPASS_URL: A URL for adding the ticket to Apple Wallet (Passbook) for easy access on iOS devices.
            This field ensures resellers can understand and integrate the appropriate ticket delivery formats specifically associated with this product."
          example: QRCODE
        deliveryValue:
          type: string
          description: The string with the value of the delivery option, e.g. value behind the QRCODE, CODE128, AZTECCODE, or URL hosting the file for PDF_URL or PKPASS_URL)
          example: ""
      example:
        deliveryFormat: QRCODE
        deliveryValue: ""
    Destination:
      type: object
      required:
        - id
        - default
        - name
        - title
        - shortDescription
        - featured
        - country
        - contact
        - brand
        - latitude
        - longitude
        - googlePlaceId
        - bannerImageUrl
        - coverImageUrl
        - videoUrl
        - facebookUrl
        - googleUrl
        - tripadvisorUrl
        - twitterUrl
        - youtubeUrl
        - instagramUrl
        - categories
        - tags
        - address
        - notices
      properties:
        id:
          type: string
          description: Unique identifier used in the platform to represent the destination.
          example: 697e3ce8-1860-4cbf-80ad-95857df1f640
          x-order: 1
        default:
          type: boolean
          description: TRUE` identifies the destination as default, and should therefore rendered and selected first
          example: true
        name:
          type: string
          nullable: true
          description: The name of the destination.
          example: Edinburgh
        title:
          type: string
          nullable: true
          description: The title of the destination.
          example: Edinburgh
        shortDescription:
          type: string
          nullable: true
          description: The description of the destination.
          example: Edinburgh
        featured:
          type: boolean
          description: "`TRUE` identifies the destination as featured, and should therefore rendered and selected first"
          example: true
        country:
          type: string
          nullable: true
          description: The country the destination is in
          example: ""
        contact:
          allOf:
            - $ref: "#/components/schemas/DestinationContact"
          description: ""
          example:
            name: null
            email: support@ventrata.com
            telephone: null
            address: Marble Arch, London, W1H 7EJ, United Kingdom
            website: null
        brand:
          $ref: "#/components/schemas/Brand"
        latitude:
          type: number
          nullable: true
          description: The latitude of the destination.
          example: 55.9533
        longitude:
          type: number
          nullable: true
          description: The longitude of the destination.
          example: -3.1883
        googlePlaceId:
          type: string
          nullable: true
          description: The Google Place ID for the destination.
          example: ChIJZ2j5yZcEdkgRqVqkuXQkj7c
        bannerImageUrl:
          type: string
          format: uri
          nullable: true
          description: The URL of the image that represents the destination.
          example: The URL of the image that represents the destination.
        coverImageUrl:
          type: string
          format: uri
          nullable: true
          description: The URL of the image that represents the destination.
          example: The URL of the image that represents the destination.
        videoUrl:
          type: string
          format: uri
          nullable: true
          description: The URL of the video that represents the destination.
          example: ""
        facebookUrl:
          type: string
          format: uri
          nullable: true
          description: The Facebook URL for the destination.
          example: ""
        googleUrl:
          type: string
          format: uri
          nullable: true
          description: The Google URL for the destination.
          example: ""
        tripadvisorUrl:
          type: string
          format: uri
          nullable: true
          description: The Tripadvisor URL for the destination.
          example: ""
        twitterUrl:
          type: string
          format: uri
          nullable: true
          description: The Twitter URL for the destination.
          example: ""
        youtubeUrl:
          type: string
          format: uri
          nullable: true
          description: ""
          example: ""
        instagramUrl:
          type: string
          format: uri
          nullable: true
          description: The Instagram URL for the destination.
          example: ""
        categories:
          type: array
          items:
            $ref: "#/components/schemas/Category"
          description: An array of categories that the destination falls under.
          example:
            - id: 697e3ce8-1860-4cbf-80ad-95857df1f640
              default: true
              name: ""
              title: ""
              tags: []
              shortDescription: ""
              coverImageUrl: The URL of the image that represents the category.
              bannerImageUrl: The URL of the image that represents the category.
              productIds:
                - 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
        tags:
          type: array
          items:
            type: string
          description: ""
          example: []
        address:
          type: string
          nullable: true
          example: null
        notices:
          type: array
          items:
            $ref: "#/components/schemas/Notice"
          example: []
      example:
        id: 697e3ce8-1860-4cbf-80ad-95857df1f640
        default: true
        name: Edinburgh
        title: Edinburgh
        shortDescription: Edinburgh
        featured: true
        country: ""
        contact:
          name: null
          email: support@ventrata.com
          telephone: null
          address: Marble Arch, London, W1H 7EJ, United Kingdom
          website: null
        brand:
          id: ""
          name: ""
          contact:
            name: null
            email: null
            telephone: null
            address: null
            website: null
          color: ""
          secondaryColor: ""
          backgroundColor: ""
          accentFont:
            id: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
            name: ""
            normalTtfUrl: ""
            italicTtfUrl: ""
            boldItalicTtfUrl: ""
            boldTtfUrl: ""
          bodyFont: null
          headerFont: null
          checkoutLogoUrl: ""
          logoUrl: ""
          logoWhiteUrl: ""
          faviconUrl: ""
        latitude: 55.9533
        longitude: -3.1883
        googlePlaceId: ChIJZ2j5yZcEdkgRqVqkuXQkj7c
        bannerImageUrl: The URL of the image that represents the destination.
        coverImageUrl: The URL of the image that represents the destination.
        videoUrl: ""
        facebookUrl: ""
        googleUrl: ""
        tripadvisorUrl: ""
        twitterUrl: ""
        youtubeUrl: ""
        instagramUrl: ""
        categories:
          - id: 697e3ce8-1860-4cbf-80ad-95857df1f640
            default: true
            name: ""
            title: ""
            tags: []
            shortDescription: ""
            coverImageUrl: The URL of the image that represents the category.
            bannerImageUrl: The URL of the image that represents the category.
            productIds:
              - 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
        tags: []
        address: null
        notices: []
    DestinationContact:
      type: object
      required:
        - name
        - email
        - telephone
        - address
        - website
      properties:
        name:
          type: string
          nullable: true
          description: Contact name
          example: null
        email:
          type: string
          nullable: true
          description: The email support contact for the Supplier.
          example: support@ventrata.com
        telephone:
          type: string
          nullable: true
          description: The phone support contact for the Supplier.
          example: null
        address:
          type: string
          nullable: true
          description: The (snail) mail address support contact for the Supplier.
          example: Marble Arch, London, W1H 7EJ, United Kingdom
        website:
          type: string
          nullable: true
          description: This SHOULD be the website of the Supplier that is separate from the Booking Platform but MAY be a unique destination within the Booking Platform about the Supplier.
          example: null
      description: Contact information.
      example:
        name: null
        email: support@ventrata.com
        telephone: null
        address: Marble Arch, London, W1H 7EJ, United Kingdom
        website: null
    Diff:
      type: object
      required:
        - op
        - path
        - was
        - value
      properties:
        op:
          type: string
          description: The operation type (e.g., replace, add, remove).
          example: replace
        path:
          type: string
          description: The JSON path to the modified value.
          example: /title
        was:
          type: string
          description: The original value before the change.
          example: Old Tour Title
        value:
          type: string
          description: The new value after the change.
          example: New Tour Title
      example:
        op: replace
        path: /title
        was: Old Tour Title
        value: New Tour Title
    DurationUnit:
      type: string
      enum:
        - minute
        - hour
        - day
      example: hour
    ExtendOrderBody:
      type: object
      properties:
        expirationMinutes:
          type: integer
      example:
        expirationMinutes: 15
    ExtendReservationBody:
      type: object
      allOf:
        - $ref: "#/components/schemas/Octo.ExtendReservationBody"
      example:
        expirationMinutes: 15
    ExtendReservationErrorResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/Octo.ExtendReservationErrorResponse"
    ExtendReservationPathParams:
      type: object
      required:
        - uuid
      properties:
        uuid:
          type: string
          description: The booking uuid
    Extra:
      type: object
      required:
        - id
        - internalName
        - title
        - description
        - reference
        - restrictions
        - shortDescription
      properties:
        id:
          type: string
          description: Unique identifier for the extra.
          example: extra-001
        internalName:
          type: string
          nullable: true
          description: Optional internal name for backend usage.
          example: fast_track_entry
        title:
          type: string
          nullable: true
          description: Optional public-facing title of the extra.
          example: Fast Track Entry
        description:
          type: string
          nullable: true
          description: Optional detailed description of the extra.
          example: Skip the regular lines with fast track access.
        reference:
          type: string
          nullable: true
          description: Optional reference code for the extra.
          example: FT-2025
        restrictions:
          allOf:
            - $ref: "#/components/schemas/ExtraRestrictions"
          description: Restrictions applicable to the extra.
          example:
            default: true
            required: false
            minQuantity: 1
            maxQuantity: 5
        pricingFrom:
          type: array
          items:
            $ref: "#/components/schemas/Pricing"
          description: Optional array of starting prices.
          example:
            - original: 1000
              retail: 1000
              net: 8000
              currency: EUR
              currencyPrecision: 2
              includedTaxes: []
        pricing:
          type: array
          items:
            $ref: "#/components/schemas/Pricing"
          description: Optional array of pricing details.
          example:
            - original: 1000
              retail: 1000
              net: 8000
              currency: EUR
              currencyPrecision: 2
              includedTaxes: []
        shortDescription:
          type: string
          nullable: true
          description: Optional short summary of the extra.
          example: Skip the line!
      example:
        id: extra-001
        internalName: fast_track_entry
        title: Fast Track Entry
        description: Skip the regular lines with fast track access.
        reference: FT-2025
        restrictions:
          default: true
          required: false
          minQuantity: 1
          maxQuantity: 5
        pricingFrom:
          - original: 1000
            retail: 1000
            net: 8000
            currency: EUR
            currencyPrecision: 2
            includedTaxes: []
        pricing:
          - original: 1000
            retail: 1000
            net: 8000
            currency: EUR
            currencyPrecision: 2
            includedTaxes: []
        shortDescription: Skip the line!
    ExtraItem:
      type: object
      required:
        - id
        - extraId
        - extra
        - pricing
      properties:
        id:
          type: string
          description: Unique identifier for the extra item.
          example: extra-item-001
        extraId:
          type: string
          description: Reference ID of the extra.
          example: extra-001
        extra:
          allOf:
            - $ref: "#/components/schemas/Extra"
          description: Full extra metadata.
          example:
            id: extra-001
            internalName: fast_track_entry
            title: Fast Track Entry
            description: Skip the regular lines with fast track access.
            reference: FT-2025
            restrictions:
              default: true
              required: false
              minQuantity: 1
              maxQuantity: 5
            pricingFrom:
              - original: 1000
                retail: 1000
                net: 8000
                currency: EUR
                currencyPrecision: 2
                includedTaxes: []
            pricing:
              - original: 1000
                retail: 1000
                net: 8000
                currency: EUR
                currencyPrecision: 2
                includedTaxes: []
            shortDescription: Skip the line!
        pricing:
          allOf:
            - $ref: "#/components/schemas/Pricing"
          description: Pricing details for this specific extra item.
          example:
            original: 1000
            retail: 1000
            net: 8000
            currency: EUR
            currencyPrecision: 2
            includedTaxes: []
      example:
        id: extra-item-001
        extraId: extra-001
        extra:
          id: extra-001
          internalName: fast_track_entry
          title: Fast Track Entry
          description: Skip the regular lines with fast track access.
          reference: FT-2025
          restrictions:
            default: true
            required: false
            minQuantity: 1
            maxQuantity: 5
          pricingFrom:
            - original: 1000
              retail: 1000
              net: 8000
              currency: EUR
              currencyPrecision: 2
              includedTaxes: []
          pricing:
            - original: 1000
              retail: 1000
              net: 8000
              currency: EUR
              currencyPrecision: 2
              includedTaxes: []
          shortDescription: Skip the line!
        pricing:
          original: 1000
          retail: 1000
          net: 8000
          currency: EUR
          currencyPrecision: 2
          includedTaxes: []
    ExtraRestrictions:
      type: object
      required:
        - default
        - required
        - minQuantity
        - maxQuantity
      properties:
        default:
          type: boolean
          description: Indicates whether this restriction is the default one.
          example: true
        required:
          type: boolean
          description: Specifies if this restriction is required.
          example: false
        minQuantity:
          type: integer
          format: int32
          description: Minimum quantity required.
          example: 1
        maxQuantity:
          type: integer
          format: int32
          nullable: true
          description: Maximum quantity allowed (optional).
          example: 5
      example:
        default: true
        required: false
        minQuantity: 1
        maxQuantity: 5
    FAQ:
      type: object
      required:
        - question
        - answer
      properties:
        question:
          type: string
          description: 'The text of the frequently asked question. This should be a well-phrased question that reflects typical customer concerns or queries about the product (e.g., "Is hotel pickup included?", "What is the cancellation policy?"). Note: FAQs are intentionally repeated at both product and option levels, enabling suppliers to address questions specific to each context. Resellers must combine FAQs from both levels for customer presentation.'
          example: ""
        answer:
          type: string
          description: The detailed response to the corresponding question. Answers should be accurate, informative, and written in a way that resolves customer uncertainty (e.g., "Yes, hotel pickup is included within a 10-mile radius of the city center.", "Cancellations are free up to 24 hours before the activity.").
          example: ""
      example:
        question: ""
        answer: ""
    Font:
      type: object
      required:
        - id
        - name
        - normalTtfUrl
        - italicTtfUrl
        - boldTtfUrl
        - boldItalicTtfUrl
      properties:
        id:
          type: string
          format: uuid
          description: The font id
          example: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
        name:
          type: string
          nullable: true
          description: The font id
          example: ""
        normalTtfUrl:
          type: string
          nullable: true
          description: ""
          example: ""
        italicTtfUrl:
          type: string
          nullable: true
          description: ""
          example: ""
        boldTtfUrl:
          type: string
          nullable: true
          description: ""
          example: ""
        boldItalicTtfUrl:
          type: string
          nullable: true
          description: ""
          example: ""
      example:
        id: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
        name: ""
        normalTtfUrl: ""
        italicTtfUrl: ""
        boldItalicTtfUrl: ""
        boldTtfUrl: ""
    GetBookingRequest:
      type: object
      allOf:
        - $ref: "#/components/schemas/Octo.GetBookingRequest"
    GetBookingsRequest:
      type: object
      allOf:
        - $ref: "#/components/schemas/Octo.GetBookingsRequest"
    GetMappingsRequest:
      type: object
      properties:
        productId:
          type: string
          description: Optional product ID to filter mappings.
          example: prod_123
        optionId:
          type: string
          description: Optional option ID to filter mappings.
          example: opt_456
        resellerReference:
          type: string
          description: Optional external reference from the reseller.
          example: ABC-987
        resellerStatus:
          allOf:
            - $ref: "#/components/schemas/ResellerStatus"
          description: Optional status of the mapping on the reseller side.
          example: ACTIVE
    GetProductRequest:
      type: object
      allOf:
        - $ref: "#/components/schemas/Octo.GetProductRequest"
    GetProductsRequest:
      type: object
      allOf:
        - $ref: "#/components/schemas/Octo.GetProductsRequest"
    GetSupplierRequest:
      type: object
      allOf:
        - $ref: "#/components/schemas/Octo.GetSupplierRequest"
    GetYourGuideActivateBody:
      type: object
      required:
        - gygLoginOTPSecret
        - gygSupplierId
        - gygSupplierName
      properties:
        gygLoginOTPSecret:
          type: string
          description: Secret used to generate OTP codes for GetYourGuide login.
          example: OTPSECRET123
        gygSupplierId:
          type: string
          description: Supplier ID provided by GetYourGuide.
          example: "7890"
        gygSupplierName:
          type: string
          description: Supplier name provided by GetYourGuide.
          example: Tour Supplier Inc.
      example:
        gygLoginOTPSecret: OTPSECRET123
        gygSupplierId: "7890"
        gygSupplierName: Tour Supplier Inc.
    GetYourGuideActivateRequest:
      type: object
      required:
        - body
      properties:
        body:
          $ref: "#/components/schemas/GetYourGuideActivateBody"
    GetYourGuideConnection:
      type: object
      required:
        - gygConnectId
        - gygLoginEmail
        - gygLoginPassword
        - gygActivated
      properties:
        gygConnectId:
          type: string
          description: The GetYourGuide Connect ID.
          example: "123456"
        gygLoginEmail:
          type: string
          description: Email address used to log into GetYourGuide.
          example: user@example.com
        gygLoginPassword:
          type: string
          description: Password used to log into GetYourGuide.
          example: securepassword123
        gygLoginOTPSecret:
          type: string
          description: Secret used to generate OTP codes for login.
          example: OTPSECRET123
        gygSupplierId:
          type: string
          description: Optional supplier ID from GetYourGuide.
          example: "7890"
        gygSupplierName:
          type: string
          description: Optional supplier name from GetYourGuide.
          example: Tour Supplier Inc.
        gygActivated:
          type: boolean
          description: Indicates whether the connection is activated.
          example: true
      allOf:
        - $ref: "#/components/schemas/PartnersConnection"
      example:
        id: f9d1bc87-ded3-4708-81d6-a82336f0db2e
        name: My PARTNERS Connection
        type: PARTNERS
        gygConnectId: "123456"
        gygLoginEmail: user@example.com
        gygLoginPassword: securepassword123
        gygLoginOTPSecret: OTPSECRET123
        gygSupplierId: "7890"
        gygSupplierName: Tour Supplier Inc.
        gygActivated: true
    Gift:
      type: object
      required:
        - agent
        - alias
        - amount
        - cancellable
        - cancellation
        - confirmable
        - contact
        - currency
        - deliveryMethods
        - giftPayment
        - id
        - message
        - notes
        - recipient
        - requiredContactFields
        - reseller
        - resellerReference
        - seller
        - settlementMethod
        - status
        - supplierReference
        - testMode
        - user
        - utcCreatedAt
        - utcUpdatedAt
        - utcExpiresAt
        - utcRedeemedAt
        - utcConfirmedAt
        - uuid
        - VisibleContactFields
        - voucher
      properties:
        agent:
          type: object
          allOf:
            - $ref: "#/components/schemas/Agent"
          nullable: true
        alias:
          type: string
          nullable: true
        amount:
          type: integer
          format: int64
        cancellable:
          type: boolean
        cancellation:
          type: object
          allOf:
            - $ref: "#/components/schemas/BookingCancellation"
          nullable: true
        confirmable:
          type: boolean
        contact:
          type: object
          allOf:
            - $ref: "#/components/schemas/CustomerContact"
          nullable: true
        currency:
          type: string
        deliveryMethods:
          type: array
          items:
            $ref: "#/components/schemas/DeliveryMethod"
        giftPayment:
          type: object
          allOf:
            - $ref: "#/components/schemas/GiftPayment"
          nullable: true
        id:
          type: string
          format: uuid
        message:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
        pricing:
          $ref: "#/components/schemas/Pricing"
        recipient:
          type: object
          allOf:
            - $ref: "#/components/schemas/CustomerContact"
          nullable: true
        requiredContactFields:
          type: array
          items:
            $ref: "#/components/schemas/ContactField"
        reseller:
          type: object
          allOf:
            - $ref: "#/components/schemas/Reseller"
          nullable: true
        resellerReference:
          type: string
          nullable: true
        seller:
          type: object
          allOf:
            - $ref: "#/components/schemas/Seller"
          nullable: true
        settlementMethod:
          $ref: "#/components/schemas/SettlementMethod"
        status:
          $ref: "#/components/schemas/BookingStatus"
        supplierReference:
          type: string
        testMode:
          type: boolean
          nullable: true
        user:
          type: object
          allOf:
            - $ref: "#/components/schemas/User"
          nullable: true
        utcCreatedAt:
          type: string
          format: date-time
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
        utcUpdatedAt:
          type: string
          format: date-time
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
        utcExpiresAt:
          type: string
          format: date-time
          nullable: true
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
        utcRedeemedAt:
          type: string
          format: date-time
          nullable: true
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
        utcConfirmedAt:
          type: string
          format: date-time
          nullable: true
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
        uuid:
          type: string
          format: uuid
        VisibleContactFields:
          type: array
          items:
            $ref: "#/components/schemas/ContactField"
        voucher:
          $ref: "#/components/schemas/Ticket"
        identity:
          allOf:
            - $ref: "#/components/schemas/Identity"
          description: ""
          example:
            id: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
            key: xyz
          x-oapi-codegen-extra-tags:
            capability: octo/identities
        identityId:
          type: string
          format: uuid
          description: ""
          example: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
          x-oapi-codegen-extra-tags:
            capability: octo/identities
    GiftIdentities:
      type: object
      properties:
        identity:
          allOf:
            - $ref: "#/components/schemas/Identity"
          description: ""
          example:
            id: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
            key: xyz
          x-oapi-codegen-extra-tags:
            capability: octo/identities
        identityId:
          type: string
          format: uuid
          description: ""
          example: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
          x-oapi-codegen-extra-tags:
            capability: octo/identities
      example:
        identity:
          id: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
          key: xyz
        identityId: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
    GiftPayment:
      type: object
      required:
        - amount
        - currency
        - giftCode
      properties:
        amount:
          type: integer
          format: int64
        currency:
          type: string
        giftCode:
          type: string
    GoogleLocalizedText:
      type: object
      required:
        - text
        - language_code
      properties:
        text:
          type: string
          description: Localized text content.
          example: Welcome to the tour!
        language_code:
          type: string
          description: Language code in BCP-47 format (e.g., en, fr, de).
          example: en
      example:
        text: Welcome to the tour!
        language_code: en
    GoogleLocation:
      type: object
      required:
        - location
      properties:
        location:
          type: object
          properties:
            place_id:
              type: string
              description: Google Place ID for the location.
              example: ChIJN1t_tDeuEmsRUsoyG83frY4
          required:
            - place_id
          description: Wrapper object containing the place ID.
      example:
        location:
          place_id: ChIJN1t_tDeuEmsRUsoyG83frY4
    GoogleOperator:
      type: object
      required:
        - name
        - google_business_profile_name
        - phone_number
        - locations
      properties:
        name:
          type: string
          description: Display name of the operator.
          example: Urban Adventures
        google_business_profile_name:
          type: object
          properties:
            localized_texts:
              type: array
              items:
                $ref: "#/components/schemas/GoogleLocalizedText"
          required:
            - localized_texts
          description: Localized business profile name as shown on Google.
          example:
            localized_texts:
              - text: Urban Adventures London
                language_code: en
        phone_number:
          type: string
          description: Operator’s phone number.
          example: +44 123 456 789
        locations:
          type: array
          items:
            $ref: "#/components/schemas/GoogleLocation"
          description: List of associated locations.
          example:
            - location:
                place_id: ChIJN1t_tDeuEmsRUsoyG83frY4
      example:
        name: Urban Adventures
        google_business_profile_name:
          localized_texts:
            - text: Urban Adventures London
              language_code: en
        phone_number: +44 123 456 789
        locations:
          - location:
              place_id: ChIJN1t_tDeuEmsRUsoyG83frY4
    GoogleOptionCategory:
      type: object
      required:
        - label
      properties:
        label:
          type: string
          description: Label representing the Google option category.
          example: Transportation
      example:
        label: Transportation
    GoogleOptions:
      type: object
      required:
        - operator
        - rating
        - landing_page
        - inventory_type
        - landing_page_list_view
        - option_categories
        - related_locations
      properties:
        operator:
          type: object
          allOf:
            - $ref: "#/components/schemas/GoogleOperator"
          nullable: true
          description: Optional Google operator details.
        rating:
          type: object
          allOf:
            - $ref: "#/components/schemas/GoogleRating"
          nullable: true
          description: Optional rating data (e.g., average score, count).
        landing_page:
          allOf:
            - $ref: "#/components/schemas/GoogleUrl"
          description: Google landing page URL.
        inventory_type:
          type: string
          description: Type of inventory (e.g., TICKETED, SCHEDULED).
          example: ""
        landing_page_list_view:
          allOf:
            - $ref: "#/components/schemas/GoogleUrl"
          description: Google list view landing page URL.
        option_categories:
          type: array
          items:
            $ref: "#/components/schemas/GoogleOptionCategory"
          description: Categories associated with the option.
        related_locations:
          type: array
          items:
            $ref: "#/components/schemas/GoogleRelatedLocation"
          description: Related Google locations (e.g., nearby or alternatives).
      example:
        operator:
          name: Urban Adventures
          google_business_profile_name:
            localized_texts:
              - text: Urban Adventures London
                language_code: en
          phone_number: +44 123 456 789
          locations:
            - location:
                place_id: ChIJN1t_tDeuEmsRUsoyG83frY4
        rating:
          average_value: 4.7
          rating_count: 1245
        landing_page:
          url: https://maps.google.com/?cid=123456789
        inventory_type: ""
        landing_page_list_view:
          url: https://maps.google.com/?cid=123456789
        option_categories:
          - label: Transportation
        related_locations:
          - location:
              location:
                place_id: ChIJN1t_tDeuEmsRUsoyG83frY4
            relation_type: NEARBY
    GoogleRating:
      type: object
      required:
        - average_value
        - rating_count
      properties:
        average_value:
          type: number
          format: float
          nullable: true
          description: Average rating value (e.g., 4.7).
          example: 4.7
        rating_count:
          type: integer
          format: int32
          nullable: true
          description: Total number of ratings.
          example: 1245
      example:
        average_value: 4.7
        rating_count: 1245
    GoogleRelatedLocation:
      type: object
      required:
        - location
        - relation_type
      properties:
        location:
          type: object
          properties:
            location:
              type: object
              properties:
                place_id:
                  type: string
                  description: Google Place ID of the related location.
                  example: ChIJN1t_tDeuEmsRUsoyG83frY4
              required:
                - place_id
          required:
            - location
          description: Nested location structure with place ID.
        relation_type:
          type: string
          description: Type of relationship to the main location (e.g., 'NEARBY', 'ALTERNATIVE').
          example: NEARBY
      example:
        location:
          location:
            place_id: ChIJN1t_tDeuEmsRUsoyG83frY4
        relation_type: NEARBY
    GoogleUrl:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          nullable: true
          description: Optional URL linking to the Google listing or resource.
          example: https://maps.google.com/?cid=123456789
      example:
        url: https://maps.google.com/?cid=123456789
    Identity:
      type: object
      required:
        - id
        - key
      properties:
        id:
          type: string
          format: uuid
          description: A unique ID / UUID generated to identify the identity
          example: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
        key:
          type: string
          description: ""
          example: xyz
      example:
        id: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
        key: xyz
    Image:
      type: object
      required:
        - url
        - title
        - caption
      properties:
        url:
          type: string
          format: uri
          description: ""
          example: ""
        title:
          type: string
          nullable: true
          description: ""
          example: ""
        caption:
          type: string
          nullable: true
          description: ""
          example: ""
      example:
        url: ""
        title: ""
        caption: ""
    Include:
      type: object
      required:
        - id
        - required
        - limit
        - productId
        - product
        - optionId
        - option
      properties:
        id:
          type: string
          format: uuid
          description: The ID of the include.
          example: ""
        required:
          type: boolean
          description: Whether the include is required.
          example: false
        limit:
          type: integer
          description: The limit of the include.
          example: 2
        validityDays:
          type: integer
          description: The validity days of the include.
          example: 3
        productId:
          type: string
          format: uuid
          description: The product ID of the include.
          example: ""
        product:
          type: object
          allOf:
            - $ref: "#/components/schemas/Product"
          nullable: true
          example: null
        optionId:
          allOf:
            - $ref: "#/components/schemas/DefaultableID"
          example: ""
        option:
          type: object
          allOf:
            - $ref: "#/components/schemas/Option"
          nullable: true
          example: null
      example:
        id: ""
        required: false
        limit: 2
        validityDays: 3
        productId: ""
        product: null
        optionId: ""
        option: null
    ItineraryItem:
      type: object
      required:
        - name
        - type
        - description
        - address
        - googlePlaceId
        - latitude
        - longitude
        - travelTime
        - travelTimeAmount
        - travelTimeUnit
        - duration
        - durationAmount
        - durationUnit
      properties:
        name:
          type: string
          description: The name of the itinerary.
          example: ""
        type:
          allOf:
            - $ref: "#/components/schemas/ItineraryItemType"
          description: |-
            The type of the itinerary.
            Possible values are `START`, `POI`, `END`, `EVENT`. The default is `START`.
          example: POI
        description:
          type: string
          nullable: true
          description: The description of the itinerary.
          example: ""
        address:
          type: string
          nullable: true
          description: The address of the itinerary.
          example: ""
        googlePlaceId:
          type: string
          nullable: true
          description: The Google Place ID of the itinerary.
          example: ""
        latitude:
          type: number
          nullable: true
          description: The latitude of the itinerary.
          example: 0
        longitude:
          type: number
          nullable: true
          description: The longitude of the itinerary.
          example: 0
        travelTime:
          type: string
          nullable: true
          description: The travel time of the itinerary.
          example: 3 hours
        travelTimeAmount:
          type: number
          nullable: true
          description: The travel time amount of the itinerary.
          example: 3
          x-go-type: float64
        travelTimeUnit:
          allOf:
            - $ref: "#/components/schemas/DurationUnit"
          nullable: true
          description: The travel time unit of the itinerary.
          example: hour
        duration:
          type: string
          nullable: true
          description: |-
            Human readable duration of the option. Duration starts to count on redemption.
            This field can be hidden by `hide_duration`.
          example: 3 hours
        durationAmount:
          type: number
          description: |-
            The duration amount of the option.
            This field can be hidden by `hide_duration`.
          example: 3
          x-go-type: float64
        durationUnit:
          allOf:
            - $ref: "#/components/schemas/DurationUnit"
          description: |-
            The duration unit. Possible values are `hour`, `minute`, `day`.
            This field can be hidden by `hide_duration`.
          example: hour
      example:
        name: ""
        type: POI
        description: ""
        address: ""
        googlePlaceId: ""
        latitude: 0
        longitude: 0
        travelTime: 3 hours
        travelTimeAmount: 3
        travelTimeUnit: hour
        duration: 3 hours
        durationAmount: 3
        durationUnit: hour
    ItineraryItemType:
      type: string
      enum:
        - START
        - POI
        - END
        - EVENT
      example: POI
    Label:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
          description: ""
          example: ""
        name:
          type: string
          description: ""
          example: ""
      example:
        id: ""
        name: ""
    ListCapabilitiesRequest:
      type: object
    ListCapabilitiesRequestHeaders:
      type: object
    ListOrdersRequest:
      type: object
      properties:
        contactEmailAddress:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required_without_all=SupplierReference UtcCreatedAtStart UtcUpdatedAtStart ContactPhoneNumber ContactLastName
            param: query=contactEmailAddress
        contactLastName:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required_without_all=SupplierReference UtcCreatedAtStart UtcUpdatedAtStart ContactEmailAddress ContactPhoneNumber
            param: query=contactLastName
        contactPhoneNumber:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required_without_all=SupplierReference UtcCreatedAtStart UtcUpdatedAtStart ContactEmailAddress ContactLastName
            param: query=contactPhoneNumber
        supplierReference:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required_without_all=UtcCreatedAtStart UtcUpdatedAtStart ContactEmailAddress ContactPhoneNumber ContactLastName
            param: query=supplierReference
        utcCreatedAtEnd:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required_with=UtcCreatedAtStart,required_without_all=SupplierReference UtcUpdatedAtStart ContactEmailAddress ContactPhoneNumber ContactLastName
            param: query=utcCreatedAtEnd
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
        utcCreatedAtStart:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required_with=UtcCreatedAtEnd,required_without_all=SupplierReference UtcUpdatedAtStart ContactEmailAddress ContactPhoneNumber ContactLastName
            param: query=utcCreatedAtStart
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
        utcUpdatedAtEnd:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required_with=UtcUpdatedAtStart,required_without_all=SupplierReference UtcCreatedAtStart ContactEmailAddress ContactPhoneNumber ContactLastName
            param: query=utcUpdatedAtEnd
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
        utcUpdatedAtStart:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required_with=UtcCreatedAtEnd,required_without_all=SupplierReference UtcUpdatedAtStart ContactEmailAddress ContactPhoneNumber ContactLastName
            param: query=utcCreatedAtStart
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
    ListWebhooksRequest:
      type: object
    Mapping:
      type: object
      required:
        - id
        - resellerReference
        - resellerStatus
        - title
        - url
        - webhookUrl
        - optionRequired
        - unitRequired
        - productId
        - optionId
        - unitId
        - connected
      properties:
        id:
          type: string
          description: Unique identifier for the mapping.
          example: map-001
        resellerReference:
          type: string
          description: Reference string provided by the reseller.
          example: res-789
        resellerStatus:
          allOf:
            - $ref: "#/components/schemas/ResellerStatus"
          description: Current status of the mapping from the reseller perspective.
          example: ACTIVE
        title:
          type: string
          description: Display title of the mapping.
          example: GetYourGuide - London Tour
        url:
          type: string
          description: Public-facing URL of the mapping.
          example: https://reseller.example.com/product/123
        webhookUrl:
          type: string
          nullable: true
          description: Optional webhook URL for updates.
          example: https://webhooks.example.com/gyg
        optionRequired:
          type: boolean
          description: Indicates whether the product option is required.
          example: true
        unitRequired:
          type: boolean
          description: Indicates whether a unit is required.
          example: false
        productId:
          type: string
          nullable: true
          description: Optional linked product ID.
          example: prod-001
        optionId:
          type: string
          nullable: true
          description: Optional linked option ID.
          example: opt-001
        unitId:
          type: string
          nullable: true
          description: Optional linked unit ID.
          example: unit-001
        connected:
          type: boolean
          description: Indicates whether the mapping is actively connected.
          example: true
      example:
        id: map-001
        resellerReference: res-789
        resellerStatus: ACTIVE
        title: GetYourGuide - London Tour
        url: https://reseller.example.com/product/123
        webhookUrl: https://webhooks.example.com/gyg
        optionRequired: true
        unitRequired: false
        productId: prod-001
        optionId: opt-001
        unitId: unit-001
        connected: true
    MappingToUpdate:
      type: object
      required:
        - resellerReference
        - resellerStatus
        - title
        - url
        - webhookUrl
        - optionRequired
        - unitRequired
      properties:
        resellerReference:
          type: string
          description: Reference string provided by the reseller.
          example: res-789
        resellerStatus:
          allOf:
            - $ref: "#/components/schemas/ResellerStatus"
          description: Current status of the mapping from the reseller perspective.
          example: ACTIVE
        title:
          type: string
          description: Display title of the mapping.
          example: GetYourGuide - London Tour
        url:
          type: string
          description: Public-facing URL of the mapping.
          example: https://reseller.example.com/product/123
        webhookUrl:
          type: string
          nullable: true
          description: Optional webhook URL for updates.
          example: https://webhooks.example.com/gyg
        optionRequired:
          type: boolean
          description: Indicates whether the product option is required.
          example: true
        unitRequired:
          type: boolean
          description: Indicates whether a unit is required.
          example: false
      example:
        resellerReference: res-789
        resellerStatus: ACTIVE
        title: GetYourGuide - London Tour
        url: https://reseller.example.com/product/123
        webhookUrl: https://webhooks.example.com/gyg
        optionRequired: true
        unitRequired: false
    MediaRel:
      type: string
      enum:
        - LOGO
        - COVER
        - GALLERY
      example: LOGO
    MediaType:
      type: string
      enum:
        - image/jpeg
        - image/png
        - video/mp4
        - video/avi
        - external/youtube
        - external/vimeo
      example: image/jpeg
    NetDiscount:
      type: string
      enum:
        - NONE
        - FULL
        - SPLIT
        - PRORATED
    Notice:
      type: object
      required:
        - id
        - title
        - shortDescription
        - coverImageUrl
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          nullable: true
        shortDescription:
          type: string
        coverImageUrl:
          type: string
          nullable: true
    Octo.AvailabilityCalendarErrorResponse:
      type: object
      required:
        - body
      properties:
        body:
          anyOf:
            - $ref: "#/components/schemas/Octo.ErrorInvalidProductID"
            - $ref: "#/components/schemas/Octo.ErrorInvalidOptionID"
            - $ref: "#/components/schemas/Octo.ErrorBadRequest"
            - $ref: "#/components/schemas/Octo.ErrorUnauthorized"
            - $ref: "#/components/schemas/Octo.ErrorInternalServerError"
            - $ref: "#/components/schemas/Octo.ErrorForbidden"
    Octo.AvailabilityCheckErrorResponse:
      type: object
      required:
        - body
      properties:
        body:
          anyOf:
            - $ref: "#/components/schemas/Octo.ErrorInvalidProductID"
            - $ref: "#/components/schemas/Octo.ErrorInvalidOptionID"
            - $ref: "#/components/schemas/Octo.ErrorBadRequest"
            - $ref: "#/components/schemas/Octo.ErrorUnauthorized"
            - $ref: "#/components/schemas/Octo.ErrorInternalServerError"
            - $ref: "#/components/schemas/Octo.ErrorForbidden"
    Octo.BaseError:
      type: object
      required:
        - error
        - errorMessage
      properties:
        error:
          type: string
          description: The error code. A table of possible error codes is shown below.
        errorMessage:
          type: string
          description: A human-readable error message will be translated depending on the language provided by the Accept-Language header.
    Octo.BookingCancellationBody:
      type: object
      properties:
        reason:
          type: string
          description: A text value describing why the cancellation happened.
          example: Whether you want OCTO Cloud to email the guest a copy of their receipt and tickets. (defaults to false)
        force:
          type: boolean
          description: Whether you want OCTO Cloud to email the guest a copy of their receipt and tickets. (defaults to false)
          example: false
      example:
        reason: this product sucks
    Octo.BookingCancellationErrorResponse:
      type: object
      required:
        - body
      properties:
        body:
          anyOf:
            - $ref: "#/components/schemas/Octo.ErrorInvalidBookingUUID"
            - $ref: "#/components/schemas/Octo.ErrorUnprocessableEntity"
            - $ref: "#/components/schemas/Octo.ErrorUnauthorized"
            - $ref: "#/components/schemas/Octo.ErrorInternalServerError"
            - $ref: "#/components/schemas/Octo.ErrorForbidden"
    Octo.BookingConfirmationErrorResponse:
      type: object
      required:
        - body
      properties:
        body:
          anyOf:
            - $ref: "#/components/schemas/Octo.ErrorInvalidProductID"
            - $ref: "#/components/schemas/Octo.ErrorInvalidOptionID"
            - $ref: "#/components/schemas/Octo.ErrorInvalidUnitID"
            - $ref: "#/components/schemas/Octo.ErrorInvalidAvailabilityID"
            - $ref: "#/components/schemas/Octo.ErrorInvalidBookingUUID"
            - $ref: "#/components/schemas/Octo.ErrorUnprocessableEntity"
            - $ref: "#/components/schemas/Octo.ErrorUnauthorized"
            - $ref: "#/components/schemas/Octo.ErrorInternalServerError"
            - $ref: "#/components/schemas/Octo.ErrorForbidden"
    Octo.BookingReservationErrorResponse:
      type: object
      required:
        - body
      properties:
        body:
          anyOf:
            - $ref: "#/components/schemas/Octo.ErrorInvalidProductID"
            - $ref: "#/components/schemas/Octo.ErrorInvalidOptionID"
            - $ref: "#/components/schemas/Octo.ErrorInvalidUnitID"
            - $ref: "#/components/schemas/Octo.ErrorInvalidAvailabilityID"
            - $ref: "#/components/schemas/Octo.ErrorUnprocessableEntity"
            - $ref: "#/components/schemas/Octo.ErrorUnauthorized"
            - $ref: "#/components/schemas/Octo.ErrorInternalServerError"
            - $ref: "#/components/schemas/Octo.ErrorForbidden"
    Octo.CapabilityId:
      type: string
      enum:
        - octo/adjustments
        - octo/cart
        - octo/content
        - octo/mappings
        - octo/packages
        - octo/pickups
        - octo/pricing
        - octo/questions
    Octo.ErrorBadRequest:
      type: object
      allOf:
        - $ref: "#/components/schemas/Octo.BaseError"
      example:
        error: BAD_REQUEST
        errorMessage: PAYMENT_DECLINED
    Octo.ErrorForbidden:
      type: object
      allOf:
        - $ref: "#/components/schemas/Octo.BaseError"
      example:
        error: BAD_REQUEST
        errorMessage: PAYMENT_DECLINED
    Octo.ErrorInternalServerError:
      type: object
      allOf:
        - $ref: "#/components/schemas/Octo.BaseError"
      example:
        error: INTERNAL_SERVER_ERROR
        errorMessage: There was an un-recoverable error, please try again
    Octo.ErrorInvalidAvailabilityID:
      type: object
      required:
        - availabilityId
      properties:
        availabilityId:
          type: string
          description: Missing or invalid `availabilityId` in the request
      allOf:
        - $ref: "#/components/schemas/Octo.BaseError"
      example:
        error: INVALID_AVAILABILITY_ID
        errorMessage: The availabilityId was missing or invalid
        availabilityId: "2022-03-12T00:00:00+00:00"
    Octo.ErrorInvalidBookingUUID:
      type: object
      required:
        - uuid
      properties:
        uuid:
          type: string
          description: Missing or invalid booking UUID, or if you're confirming the booking the booking may have expired already.
      allOf:
        - $ref: "#/components/schemas/Octo.BaseError"
      example:
        error: INVALID_BOOKING_UUID
        errorMessage: The uuid was already used, missing or invalid
        uuid: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
    Octo.ErrorInvalidOptionID:
      type: object
      required:
        - optionId
      properties:
        optionId:
          type: string
          description: Missing or invalid `optionId` in the request
      allOf:
        - $ref: "#/components/schemas/Octo.BaseError"
      example:
        error: INVALID_OPTION_ID
        errorMessage: The optionId was missing or invalid
        optionId: 681fea0f-196e-45da-bec7-467bfacb1d87
    Octo.ErrorInvalidProductID:
      type: object
      required:
        - productId
      properties:
        productId:
          type: string
          description: Missing or invalid `productId` in the request
      allOf:
        - $ref: "#/components/schemas/Octo.BaseError"
      example:
        error: INVALID_PRODUCT_ID
        errorMessage: The productId was missing or invalid
        productId: cc2a6d56-6efe-426f-99c9-6eb10e341565
    Octo.ErrorInvalidUnitID:
      type: object
      required:
        - unitId
      properties:
        unitId:
          type: string
          description: Missing or invalid `unitId` in the request
      allOf:
        - $ref: "#/components/schemas/Octo.BaseError"
      example:
        error: INVALID_UNIT_ID
        errorMessage: The unitId was missing or invalid
        unitId: senior
    Octo.ErrorUnauthorized:
      type: object
      allOf:
        - $ref: "#/components/schemas/Octo.BaseError"
      example:
        error: UNAUTHORIZED
        errorMessage: You didn't send the API Key in the Authorization header to an endpoint that requires authentication
    Octo.ErrorUnprocessableEntity:
      type: object
      allOf:
        - $ref: "#/components/schemas/Octo.BaseError"
      example:
        error: UNPROCESSABLE_ENTITY
        errorMessage: The request body is technically correct but cannot be processed for other reasons. e.g. you tried to cancel a booking after the cancellation cutoff had elapsed
    Octo.ExtendReservationBody:
      type: object
      properties:
        expirationMinutes:
          type: integer
      example:
        expirationMinutes: 15
    Octo.ExtendReservationErrorResponse:
      type: object
      required:
        - body
      properties:
        body:
          anyOf:
            - $ref: "#/components/schemas/Octo.ErrorInvalidBookingUUID"
            - $ref: "#/components/schemas/Octo.ErrorUnprocessableEntity"
            - $ref: "#/components/schemas/Octo.ErrorUnauthorized"
            - $ref: "#/components/schemas/Octo.ErrorInternalServerError"
            - $ref: "#/components/schemas/Octo.ErrorForbidden"
    Octo.GetBookingRequest:
      type: object
      required:
        - uuid
      properties:
        uuid:
          type: string
          description: The UUID of the booking
    Octo.GetBookingsRequest:
      type: object
      properties:
        resellerReference:
          type: string
          description: The reseller reference on the booking
        supplierReference:
          type: string
          description: The reference provided by the supplier
        localDate:
          type: string
          description: All bookings made for a specific date
        localDateStart:
          type: string
          description: First date of a date range search
        localDateEnd:
          type: string
          description: Last date of a date range search
        productId:
          type: string
          description: The product id to filter by
        optionId:
          type: string
          description: The option id to filter by
    Octo.GetProductRequest:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: The product id
    Octo.GetProductsRequest:
      type: object
    Octo.GetSupplierRequest:
      type: object
    Octo.Media:
      type: object
      required:
        - src
        - type
        - rel
        - title
        - caption
        - copyright
      properties:
        src:
          type: string
          format: uri
          description: The URL of the media file. The URL must be stable and publicly accessible.
          example: ""
        type:
          allOf:
            - $ref: "#/components/schemas/MediaType"
          description: |-
            Specifies the type of the media file, which indicates its format and intended usage. Recommended types include: image/jpeg: High-quality compressed images, ideal for general use. Suggested dimensions: 1920x1080 or higher.
            image/png: Images with transparency or higher visual fidelity, recommended for logos. Suggested dimensions: At least 1000x1000 pixels.
            video/mp4: Universal video format for high-quality playback. Suggested resolution: 1080p or higher.
            video/avi: A less common video format; MP4 is generally preferred for compatibility.
            external/youtube: URL links to YouTube videos for dynamic content. Use a shareable URL format.
            external/vimeo: URL links to Vimeo-hosted videos for high-quality or private video content.
          example: image/jpeg
        rel:
          allOf:
            - $ref: "#/components/schemas/MediaRel"
          description: |-
            Defines the relationship of the media file to the supplier's content. Common values include: LOGO: For branding assets like supplier logos.
            COVER: For primary visual elements representing the supplier.
            GALLERY: For additional images or videos.
          example: LOGO
        title:
          type: string
          nullable: true
          description: The title or name of the media, providing a brief description or identifier for the media file. This helps in organizing and identifying media files (e.g., "Main Attraction Image," "Promotional Video"). This field can be null if no title is provided.
          example: ""
        caption:
          type: string
          nullable: true
          description: A caption providing additional context or information about what is depicted in the media. Captions should be customer-facing and provide insights such as "Overview of the city skyline at sunset" or "Guests enjoying the guided tour." This field can be null if no caption is provided.
          example: ""
        copyright:
          type: string
          nullable: true
          description: Information about the copyright status or usage restrictions of the media. This may include details about ownership, licensing terms, or attribution requirements (e.g., "© 2024 Example Corp, All Rights Reserved"). If null, it is assumed there are no copyright restrictions or attribution requirements.
          example: ""
      example:
        src: ""
        type: image/jpeg
        rel: LOGO
        title: ""
        caption: ""
        copyright: ""
    Octo.Pricing:
      type: object
      required:
        - original
        - retail
        - net
        - currency
        - currencyPrecision
        - includedTaxes
      properties:
        original:
          type: integer
          description: Represents the advertised marketing price, which must be equal to or higher than pricingFrom.retail. Typically used for strike-through pricing, it highlights the original or component-based value of the product when the retail price reflects a discount or bundled offer. For example, a package product combining multiple components (e.g., hotel + tour + meals) may have a total component value of $500 (original), while the bundled retail price is $400. In such cases, the original price is displayed to show savings.This field should only be shown when it is higher than pricingFrom.retail and must accurately reflect a valid reference price, ensuring transparency and trust.
          example: 3995
        retail:
          type: integer
          description: The supplier’s recommended sale price, including all taxes and fees. This is the price charged to end customers and represents the total cost.
          example: 3995
        net:
          type: integer
          nullable: true
          description: The wholesale price charged to the reseller, including all taxes and fees. This price reflects the amount the reseller pays to the supplier.
          example: 2996
        currency:
          type: string
          description: Specifies the currency used for the prices provided in the pricingFrom object. The value must adhere to ISO 4217 currency codes (e.g., USD, EUR, JPY) to ensure consistency across systems.
          example: USD
        currencyPrecision:
          type: integer
          description: "All pricing is given in integers to avoid floating point rounding issues. e.g. USD = 2 and JPY = 0. To convert a price to decimal you should do: price / (10 ** currencyPrecision) where ** is to the power of e.g. Math.pow(10, currencyPrecision)."
          example: 2
        includedTaxes:
          type: array
          items:
            $ref: "#/components/schemas/Octo.Tax"
          description: This field defines the number of decimal places used for the currency in the pricingFrom object, ensuring precise representation and preventing rounding errors during calculations. For example, in currencies like USD, which have a precision of 2, prices are expressed in cents (e.g., $45.00 is represented as 4500). In currencies like JPY, which have a precision of 0, prices are expressed as whole yen amounts (e.g., ¥4500 is represented as 4500). By aligning with the specific decimal requirements of different currencies, this field guarantees accurate pricing calculations and consistent handling across various currency formats.
          example:
            - name: VAT 10
              retail: 700
              original: 700
              net: 400
      example:
        original: 3995
        retail: 3995
        net: 2996
        currency: USD
        currencyPrecision: 2
        includedTaxes:
          - name: VAT 10
            retail: 700
            original: 700
            net: 400
    Octo.PricingUnit:
      type: object
      required:
        - unitId
      properties:
        unitId:
          type: string
          description: ID of the unit this pricing is related to
          example: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
      allOf:
        - $ref: "#/components/schemas/Octo.Pricing"
      example:
        unitId: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
        original: 1000
        retail: 1000
        net: 8000
        currency: EUR
        currencyPrecision: 2
        includedTaxes: []
    Octo.RequestHeaders:
      type: object
    Octo.ResponseHeaders:
      type: object
    Octo.Tax:
      type: object
      required:
        - name
        - retail
        - original
        - net
      properties:
        name:
          type: string
          description: The name of the tax or fee, such as "VAT", "City Tax", or "Service Charge". This field provides clear labeling of the tax or fee being applied, making the pricing structure easier to interpret.
          example: VAT 10
        retail:
          type: integer
          description: The value of the tax or fee included in the retail price, expressed in the same currency as the pricingFrom.currency. This value indicates the portion of the end-customer price attributable to the specific tax or fee.
          example: 700
        original:
          type: integer
          description: ""
          example: 700
        net:
          type: integer
          nullable: true
          description: The value of the tax or fee included in the net price, expressed in the same currency as the pricingFrom.currency. This value indicates the portion of the reseller’s cost attributable to the specific tax or fee.
          example: 400
      example:
        name: VAT 10
        retail: 700
        original: 700
        net: 400
    Offer:
      type: object
      required:
        - title
        - code
        - description
        - netDiscount
        - restrictions
        - usable
      properties:
        title:
          type: string
          description: The title or name of the offer.
          example: Summer Promo
        code:
          type: string
          description: The unique code used to apply the offer.
          example: SUMMER25
        description:
          type: string
          nullable: true
          description: Optional description of the offer.
          example: Get 25% off selected tours!
        netDiscount:
          allOf:
            - $ref: "#/components/schemas/NetDiscount"
          nullable: true
          description: Net discount strategy applied to the offer.
          example: FULL
        restrictions:
          allOf:
            - $ref: "#/components/schemas/OfferRestrictions"
          description: Restrictions that determine when the offer is valid.
          example:
            minUnits: 1
            maxUnits: 10
            minTotal: 50
            maxTotal: 500
            unitIds:
              - unit-1
              - unit-2
              - unit-3
        usable:
          type: boolean
          description: Indicates whether the offer can currently be applied.
          example: true
      example:
        title: Summer Promo
        code: SUMMER25
        description: Get 25% off selected tours!
        netDiscount: FULL
        restrictions:
          minUnits: 1
          maxUnits: 10
          minTotal: 50
          maxTotal: 500
          unitIds:
            - unit-1
            - unit-2
            - unit-3
        usable: true
    OfferCombination:
      type: object
      required:
        - productId
        - optionId
        - offerCode
        - offerTitle
        - pricing
        - units
        - booking
      properties:
        productId:
          type: string
          description: ID of the product in the combination.
          example: prod_789
        optionId:
          type: string
          description: ID of the selected option.
          example: opt_888
        offerCode:
          type: string
          description: Code used to apply the offer.
          example: SUMMER2025
        offerTitle:
          type: string
          description: Title of the promotional offer.
          example: Summer Deal
        pricing:
          allOf:
            - $ref: "#/components/schemas/Pricing"
          description: Pricing details for this offer.
        shortDescription:
          type: string
          description: Optional short description.
          example: Includes free gift
        units:
          type: array
          items:
            $ref: "#/components/schemas/Unit"
          description: Units included in this offer.
        booking:
          type: object
          allOf:
            - $ref: "#/components/schemas/Booking"
          nullable: true
          description: Optional booking metadata.
      example:
        productId: prod_789
        optionId: opt_888
        offerCode: SUMMER2025
        offerTitle: Summer Deal
        pricing:
          original: 1000
          retail: 1000
          net: 8000
          currency: EUR
          currencyPrecision: 2
          includedTaxes: []
        shortDescription: Includes free gift
        units:
          - id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
            internalName: Adult(s)
            reference: LR1-01-new
            type: ADULT
            restrictions:
              minAge: 3
              maxAge: 17
              idRequired: true
              minQuantity: 2
              maxQuantity: 7
              paxCount: 1
              accompaniedBy:
                - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
              required: false
              accompaniedByRatio: null
            requiredContactFields:
              - firstName
            tags: []
            visibleContactFields: []
        booking: null
    OfferComparison:
      type: object
      required:
        - productId
        - optionId
        - pricing
        - product
        - units
      properties:
        productId:
          type: string
          description: ID of the product being compared.
          example: prod_123
        optionId:
          type: string
          description: ID of the product option.
          example: opt_456
        pricing:
          allOf:
            - $ref: "#/components/schemas/Pricing"
          description: Pricing details for this offer.
          example:
            original: 1000
            retail: 1000
            net: 8000
            currency: EUR
            currencyPrecision: 2
            includedTaxes: []
        product:
          allOf:
            - $ref: "#/components/schemas/Product"
          description: Full product metadata.
        shortDescription:
          type: string
          description: Optional short description for the offer.
          example: Special summer combo
        units:
          type: array
          items:
            $ref: "#/components/schemas/Unit"
          description: List of units applicable to this offer.
      example:
        productId: prod_123
        optionId: opt_456
        pricing:
          original: 1000
          retail: 1000
          net: 8000
          currency: EUR
          currencyPrecision: 2
          includedTaxes: []
        product:
          id: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
          internalName: London Eye General Admission
          reference: LEYE-GA
          locale: en-GB
          timeZone: Europe/London
          allowFreesale: true
          instantConfirmation: true
          instantDelivery: true
          availabilityRequired: true
          availabilityType: START_TIME
          deliveryFormats:
            - QRCODE
          deliveryMethods:
            - TICKET
          redemptionMethod: DIGITAL
          options:
            - id: DEFAULT
              default: true
              internalName: DEFAULT
              reference: null
              availabilityLocalStartTimes:
                - "00:00"
              cancellationCutoff: 1 hour
              cancellationCutoffAmount: 1
              cancellationCutoffUnit: hour
              requiredContactFields:
                - firstName
              restrictions:
                minUnits: 0
                maxUnits: 9
                minPaxCount: 0
                maxPaxCount: null
              units:
                - id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                  internalName: Adult(s)
                  reference: LR1-01-new
                  type: ADULT
                  restrictions:
                    minAge: 3
                    maxAge: 17
                    idRequired: true
                    minQuantity: 2
                    maxQuantity: 7
                    paxCount: 1
                    accompaniedBy:
                      - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                    required: false
                    accompaniedByRatio: null
                  requiredContactFields:
                    - firstName
                  tags: []
                  visibleContactFields: []
              availabilityLocalDateStart: "2025-09-01"
              availabilityLocalDateEnd: null
              tags: []
              availabilityCutoff: 1 hour
              availabilityCutoffAmount: 1
              availabilityCutoffUnit: hour
              visibleContactFields: []
          tags: []
          settlementMethods:
            - direct
          freesaleDurationAmount: 2
          freesaleDurationUnit: hour
        shortDescription: Special summer combo
        units:
          - id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
            internalName: Adult(s)
            reference: LR1-01-new
            type: ADULT
            restrictions:
              minAge: 3
              maxAge: 17
              idRequired: true
              minQuantity: 2
              maxQuantity: 7
              paxCount: 1
              accompaniedBy:
                - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
              required: false
              accompaniedByRatio: null
            requiredContactFields:
              - firstName
            tags: []
            visibleContactFields: []
    OfferDiscount:
      type: object
      required:
        - net
        - retail
        - includedTaxes
      properties:
        net:
          type: number
          format: float
          description: Net price before discount.
          example: 150
        retail:
          type: number
          format: float
          description: Retail price after discount.
          example: 120
        includedTaxes:
          type: array
          items:
            $ref: "#/components/schemas/Tax"
          description: List of taxes included in the discounted price.
          example: []
      example:
        net: 150
        retail: 120
        includedTaxes: []
    OfferRestrictions:
      type: object
      required:
        - minUnits
        - maxUnits
        - minTotal
        - maxTotal
        - unitIds
      properties:
        minUnits:
          type: integer
          format: int32
          nullable: true
          description: Minimum number of units allowed.
          example: 1
        maxUnits:
          type: integer
          format: int32
          nullable: true
          description: Maximum number of units allowed.
          example: 10
        minTotal:
          type: number
          format: float
          nullable: true
          description: Minimum total price or quantity allowed.
          example: 50
        maxTotal:
          type: number
          format: float
          nullable: true
          description: Maximum total price or quantity allowed.
          example: 500
        unitIds:
          type: array
          items:
            type: string
          description: List of unit IDs that the restriction applies to.
          example:
            - unit-1
            - unit-2
            - unit-3
      example:
        minUnits: 1
        maxUnits: 10
        minTotal: 50
        maxTotal: 500
        unitIds:
          - unit-1
          - unit-2
          - unit-3
    OpeningHours:
      type: object
      required:
        - from
        - to
      properties:
        from:
          type: string
          description: The opening time
          example: "08:00"
        to:
          type: string
          description: The closing time
          example: "16:00"
        frequency:
          type: string
          description: Optional label for how frequently the event occurs (e.g., daily, weekly).
          example: 1 hour
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        frequencyAmount:
          type: integer
          format: int32
          description: Optional numeric amount representing the interval frequency.
          example: 1
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        frequencyUnit:
          type: string
          description: Optional unit for frequency (e.g., day, week, month).
          example: hour
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
      description: Defines the opening hours for this availability, even for start time-based availability. Supports multiple periods for breaks in the day.
      example:
        from: "08:00"
        to: "16:00"
    OpeningHoursContent:
      type: object
      properties:
        frequency:
          type: string
          description: Optional label for how frequently the event occurs (e.g., daily, weekly).
          example: 1 hour
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        frequencyAmount:
          type: integer
          format: int32
          description: Optional numeric amount representing the interval frequency.
          example: 1
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        frequencyUnit:
          type: string
          description: Optional unit for frequency (e.g., day, week, month).
          example: hour
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
      example:
        frequency: 1 hour
        frequencyAmount: 1
        frequencyUnit: hour
    Option:
      type: object
      required:
        - id
        - default
        - internalName
        - reference
        - availabilityLocalStartTimes
        - availabilityLocalDateStart
        - availabilityLocalDateEnd
        - cancellationCutoff
        - cancellationCutoffAmount
        - cancellationCutoffUnit
        - requiredContactFields
        - availabilityCutoff
        - availabilityCutoffAmount
        - availabilityCutoffUnit
        - tags
        - visibleContactFields
        - restrictions
        - units
      properties:
        id:
          type: string
          description: A unique identifier for the option within the product. This ID is critical for identifying specific options during bookings or other API interactions.
          example: DEFAULT
          x-order: 2
        default:
          type: boolean
          description: |-
            Indicates whether the option is the default selection.
            true: This option should be rendered and selected first in customer-facing interfaces.
            false: The option is not default and requires manual selection.
          example: true
        internalName:
          type: string
          description: The internal name used by the supplier to refer to the option. This name is for internal or operational purposes and may differ from the public, customer-facing name. The customer-facing name is defined separately in the title field under the octo/content capability.
          example: DEFAULT
        reference:
          type: string
          nullable: true
          description: An optional internal code used by the supplier to refer to the product. This field is useful for supplier-specific workflows or cross-referencing. It can be null if no reference code exists for the product.
          example: null
        availabilityLocalStartTimes:
          type: array
          items:
            type: string
          minItems: 1
          description: An array containing all possible start times for the option that can be returned during availability. For example a tour with multiple departure times may have multiple:["09:00", "14:00", "17:00"].
          example:
            - "00:00"
        availabilityLocalDateStart:
          type: string
        availabilityLocalDateEnd:
          type: string
          nullable: true
        cancellationCutoff:
          type: string
          description: A text description of the option's cancellation policy, providing clear guidelines to customers.
          example: 1 hour
        cancellationCutoffAmount:
          type: integer
          description: The numeric value of the cutoff period for cancellations, relative to start time or closing hour (of opening hours product)
          example: 1
        cancellationCutoffUnit:
          allOf:
            - $ref: "#/components/schemas/DurationUnit"
          description: |-
            The time unit associated with the cutoff period. Possible values are:
            hour: Cutoff is measured in hours.
            minute: Cutoff is measured in minutes.
            day: Cutoff is measured in days.
          example: hour
        requiredContactFields:
          type: array
          items:
            $ref: "#/components/schemas/ContactField"
          description: |-
            An array specifying the contact fields required to confirm a booking. These apply to the lead traveler, not individual tickets. Possible values:
            firstName: The first name of the traveler.
            lastName: The last name of the traveler.
            fullName: The full name of the traveler.
            emailAddress: The email address of the traveler.
            phoneNumber: The phone number of the traveler.
            postalCode: The postal code of the traveler.
            country: The country of the traveler.
            notes: Optional notes from the traveler.
            locales: Preferred language/localization preferences.
          example:
            - firstName
        availabilityCutoff:
          type: string
        availabilityCutoffAmount:
          type: integer
        availabilityCutoffUnit:
          $ref: "#/components/schemas/DurationUnit"
        tags:
          type: array
          items:
            type: string
          description: An array of tags that can be used to filter products.
          example: []
        visibleContactFields:
          type: array
          items:
            $ref: "#/components/schemas/ContactField"
          description: An array of the contact fields that are visible to the user when booking. These just apply to the lead traveller on the booking and not for every ticket.
          example: []
        restrictions:
          allOf:
            - $ref: "#/components/schemas/OptionRestrictions"
          example:
            minUnits: 0
            maxUnits: 9
            minPaxCount: 0
            maxPaxCount: null
        units:
          type: array
          items:
            $ref: "#/components/schemas/Unit"
        title:
          type: string
          description: The title of the option. Only present when ventrata/content capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        subtitle:
          type: string
          nullable: true
          description: The subtitle of the option. Only present when ventrata/content capability is requested.
          example: null
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        language:
          type: string
          description: The language of the option. Only present when ventrata/content capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        shortDescription:
          type: string
          nullable: true
          description: The description of the option. Only present when ventrata/content capability is requested.
          example: null
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        duration:
          type: string
          description: |-
            Human readable duration of the option. Duration starts to count on redemption.
            This field can be hidden by `hide_duration`.
            Only present when ventrata/content capability is requested.
          example: 3 hours
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        durationAmount:
          type: number
          description: |-
            The duration amount of the option.
            This field can be hidden by `hide_duration`.
            Only present when ventrata/content capability is requested.
          example: 3
          x-go-type: float64
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        durationUnit:
          allOf:
            - $ref: "#/components/schemas/DurationUnit"
          description: |-
            The duration unit. Possible values are `hour`, `minute`, `day`.
            This field can be hidden by `hide_duration`.
            Only present when ventrata/content capability is requested.
          example: hour
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        coverImageUrl:
          type: string
          format: uri
          nullable: true
          description: The cover image URL of the option. Only present when ventrata/content capability is requested.
          example: null
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        itinerary:
          type: array
          items:
            $ref: "#/components/schemas/ItineraryItem"
          nullable: true
          description: The itinerary of the option. Only present when ventrata/content capability is requested.
          example: []
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        fromPoint:
          type: object
          allOf:
            - $ref: "#/components/schemas/Point"
          nullable: true
          description: The origin point of the option. Only present when ventrata/content capability is requested.
          example: null
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        toPoint:
          type: object
          allOf:
            - $ref: "#/components/schemas/Point"
          nullable: true
          description: The destination point of the option. Only present when ventrata/content capability is requested.
          example: null
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        pickupAvailable:
          type: boolean
          description: |-
            Whether this option has pickup available.
            This field is only present when the capability `octo/pickups` is requested.
          example: true
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupRequired:
          type: boolean
          description: |-
            Whether pickup is required for this option.
            This field is only present when the capability `octo/pickups` is requested.
          example: true
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupPoints:
          type: array
          items:
            $ref: "#/components/schemas/PickupPoint"
          description: |-
            Whether pickup is required for this option.
            This field is only present when the capability `octo/pickups` is requested.
          example: []
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pricingFrom:
          type: array
          items:
            $ref: "#/components/schemas/Octo.Pricing"
          description: "Is on the object when Pricing capability is requested. "
          example:
            - original: 2000
              retail: 2000
              net: 1600
              currency: EUR
              currencyPrecision: 2
              includedTaxes: []
          x-capability-data:
            capability: octo/pricing
            required: true
        pricing:
          type: array
          items:
            $ref: "#/components/schemas/Octo.Pricing"
          description: "Is on the object when Pricing capability is requested. "
          example:
            - original: 2000
              retail: 2000
              net: 1600
              currency: EUR
              currencyPrecision: 2
              includedTaxes: []
          x-capability-data:
            capability: octo/pricing
            required: true
        questions:
          type: array
          items:
            $ref: "#/components/schemas/Question"
          description: Questions for this option. Only present when octo/questions capability is requested.
          example:
            - id: ""
              label: ""
              hint: ""
              maxLength: 128
              inputType: select
              required: false
              selectOptions:
                - label: ""
                  value: ""
              coverImageUrl: ""
              description: ""
              shortDescription: ""
              internalName: ""
              title: ""
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/questions
            required: true
          x-capability-data:
            capability: octo/questions
            required: true
        extras:
          type: array
          items:
            $ref: "#/components/schemas/Extra"
          x-oapi-codegen-extra-tags:
            capability: octo/extras
            required: true
          x-capability-data:
            capability: octo/extras
            required: true
        packageIncludes:
          type: array
          items:
            $ref: "#/components/schemas/PackageInclude"
          example:
            - title: ""
              count: 1
              includes: []
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/packages
            required: true
          x-capability-data:
            capability: octo/packages
            required: true
      example:
        id: DEFAULT
        default: true
        internalName: DEFAULT
        reference: null
        availabilityLocalStartTimes:
          - "00:00"
        cancellationCutoff: 1 hour
        cancellationCutoffAmount: 1
        cancellationCutoffUnit: hour
        requiredContactFields:
          - firstName
        restrictions:
          minUnits: 0
          maxUnits: 9
          minPaxCount: 0
          maxPaxCount: null
        units:
          - id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
            internalName: Adult(s)
            reference: LR1-01-new
            type: ADULT
            restrictions:
              minAge: 3
              maxAge: 17
              idRequired: true
              minQuantity: 2
              maxQuantity: 7
              paxCount: 1
              accompaniedBy:
                - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
              required: false
              accompaniedByRatio: null
            requiredContactFields:
              - firstName
            tags: []
            visibleContactFields: []
        availabilityLocalDateStart: "2025-09-01"
        availabilityLocalDateEnd: null
        tags: []
        availabilityCutoff: 1 hour
        availabilityCutoffAmount: 1
        availabilityCutoffUnit: hour
        visibleContactFields: []
    OptionContent:
      type: object
      properties:
        title:
          type: string
          description: The title of the option. Only present when ventrata/content capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        subtitle:
          type: string
          nullable: true
          description: The subtitle of the option. Only present when ventrata/content capability is requested.
          example: null
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        language:
          type: string
          description: The language of the option. Only present when ventrata/content capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        shortDescription:
          type: string
          nullable: true
          description: The description of the option. Only present when ventrata/content capability is requested.
          example: null
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        duration:
          type: string
          description: |-
            Human readable duration of the option. Duration starts to count on redemption.
            This field can be hidden by `hide_duration`.
            Only present when ventrata/content capability is requested.
          example: 3 hours
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        durationAmount:
          type: number
          description: |-
            The duration amount of the option.
            This field can be hidden by `hide_duration`.
            Only present when ventrata/content capability is requested.
          example: 3
          x-go-type: float64
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        durationUnit:
          allOf:
            - $ref: "#/components/schemas/DurationUnit"
          description: |-
            The duration unit. Possible values are `hour`, `minute`, `day`.
            This field can be hidden by `hide_duration`.
            Only present when ventrata/content capability is requested.
          example: hour
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        coverImageUrl:
          type: string
          format: uri
          nullable: true
          description: The cover image URL of the option. Only present when ventrata/content capability is requested.
          example: null
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        itinerary:
          type: array
          items:
            $ref: "#/components/schemas/ItineraryItem"
          nullable: true
          description: The itinerary of the option. Only present when ventrata/content capability is requested.
          example: []
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        fromPoint:
          type: object
          allOf:
            - $ref: "#/components/schemas/Point"
          nullable: true
          description: The origin point of the option. Only present when ventrata/content capability is requested.
          example: null
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        toPoint:
          type: object
          allOf:
            - $ref: "#/components/schemas/Point"
          nullable: true
          description: The destination point of the option. Only present when ventrata/content capability is requested.
          example: null
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
      example:
        title: ""
        subtitle: null
        language: ""
        shortDescription: null
        duration: 3 hours
        durationAmount: 3
        durationUnit: hour
        coverImageUrl: null
        itinerary: []
        fromPoint: null
        toPoint: null
    OptionExtras:
      type: object
      properties:
        extras:
          type: array
          items:
            $ref: "#/components/schemas/Extra"
          x-oapi-codegen-extra-tags:
            capability: octo/extras
            required: true
          x-capability-data:
            capability: octo/extras
            required: true
    OptionPackages:
      type: object
      properties:
        packageIncludes:
          type: array
          items:
            $ref: "#/components/schemas/PackageInclude"
          example:
            - title: ""
              count: 1
              includes: []
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/packages
            required: true
          x-capability-data:
            capability: octo/packages
            required: true
      example:
        packageIncludes:
          - title: ""
            count: 1
            includes: []
    OptionPickups:
      type: object
      properties:
        pickupAvailable:
          type: boolean
          description: |-
            Whether this option has pickup available.
            This field is only present when the capability `octo/pickups` is requested.
          example: true
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupRequired:
          type: boolean
          description: |-
            Whether pickup is required for this option.
            This field is only present when the capability `octo/pickups` is requested.
          example: true
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
        pickupPoints:
          type: array
          items:
            $ref: "#/components/schemas/PickupPoint"
          description: |-
            Whether pickup is required for this option.
            This field is only present when the capability `octo/pickups` is requested.
          example: []
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/pickups
            required: true
          x-capability-data:
            capability: octo/pickups
            required: true
      example:
        pickupAvailable: true
        pickupRequired: true
        pickupPoints: []
    OptionQuestions:
      type: object
      properties:
        questions:
          type: array
          items:
            $ref: "#/components/schemas/Question"
          description: Questions for this option. Only present when octo/questions capability is requested.
          example:
            - id: ""
              label: ""
              hint: ""
              maxLength: 128
              inputType: select
              required: false
              selectOptions:
                - label: ""
                  value: ""
              coverImageUrl: ""
              description: ""
              shortDescription: ""
              internalName: ""
              title: ""
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/questions
            required: true
          x-capability-data:
            capability: octo/questions
            required: true
      example:
        questions:
          - id: ""
            label: ""
            hint: ""
            maxLength: 128
            inputType: select
            required: false
            selectOptions:
              - label: ""
                value: ""
            coverImageUrl: ""
            description: ""
            shortDescription: ""
            internalName: ""
            title: ""
    OptionRestrictions:
      type: object
      required:
        - minUnits
        - maxUnits
        - minPaxCount
        - maxPaxCount
      properties:
        minUnits:
          type: integer
          description: The minimum number of units (tickets) that can be purchased in a single booking. A null value indicates no minimum.
          example: 0
        maxUnits:
          type: integer
          nullable: true
          description: The maximum number of units (tickets) that can be purchased in a single booking. A null value indicates no maximum.
          example: 9
        minPaxCount:
          type: integer
          nullable: true
          description: The minimum number of pax units that can be purchased in a single booking (null = 0).
          example: 0
        maxPaxCount:
          type: integer
          nullable: true
          description: The maximum number of pax units that can be purchased in a single booking (null = unlimited).
          example: null
      example:
        minUnits: 0
        maxUnits: 9
        minPaxCount: 0
        maxPaxCount: null
    Order:
      type: object
      required:
        - id
        - testMode
        - settlementMethod
        - supplierReference
        - quote
        - status
        - utcExpiresAt
        - utcConfirmedAt
        - cancellable
        - confirmable
        - bookings
        - visibleContactFields
        - requiredContactFields
        - user
        - seller
      properties:
        id:
          type: string
          format: uuid
          x-order: 2
        testMode:
          type: boolean
        settlementMethod:
          $ref: "#/components/schemas/SettlementMethod"
        supplierReference:
          type: string
        quote:
          type: boolean
        status:
          type: string
        utcExpiresAt:
          type: string
          nullable: true
          x-fap:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
        utcConfirmedAt:
          type: string
          nullable: true
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
        cancellable:
          type: boolean
        confirmable:
          type: boolean
        reseller:
          $ref: "#/components/schemas/Reseller"
        agent:
          $ref: "#/components/schemas/Agent"
        contact:
          $ref: "#/components/schemas/CustomerContact"
        emailReceipt:
          type: boolean
        bookings:
          type: array
          items:
            $ref: "#/components/schemas/Booking"
        visibleContactFields:
          type: array
          items:
            $ref: "#/components/schemas/ContactField"
        requiredContactFields:
          type: array
          items:
            $ref: "#/components/schemas/ContactField"
        user:
          type: object
          allOf:
            - $ref: "#/components/schemas/User"
          nullable: true
        seller:
          type: object
          allOf:
            - $ref: "#/components/schemas/Seller"
          nullable: true
        identity:
          allOf:
            - $ref: "#/components/schemas/Identity"
          example:
            id: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
            key: xyz
          x-oapi-codegen-extra-tags:
            capability: octo/identities
        identityId:
          type: string
          format: uuid
          example: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
          x-oapi-codegen-extra-tags:
            capability: octo/identities
        offerCombinations:
          type: array
          items:
            $ref: "#/components/schemas/OfferCombination"
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        giftPayment:
          type: object
          allOf:
            - $ref: "#/components/schemas/GiftPayment"
          nullable: true
          x-oapi-codegen-extra-tags:
            capability: octo/gifts
            required: true
          x-capability-data:
            capability: octo/gifts
            required: true
    OrderGifts:
      type: object
      properties:
        giftPayment:
          type: object
          allOf:
            - $ref: "#/components/schemas/GiftPayment"
          nullable: true
          x-oapi-codegen-extra-tags:
            capability: octo/gifts
            required: true
          x-capability-data:
            capability: octo/gifts
            required: true
    OrderIdentities:
      type: object
      properties:
        identity:
          allOf:
            - $ref: "#/components/schemas/Identity"
          example:
            id: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
            key: xyz
          x-oapi-codegen-extra-tags:
            capability: octo/identities
        identityId:
          type: string
          format: uuid
          example: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
          x-oapi-codegen-extra-tags:
            capability: octo/identities
      example:
        identity:
          id: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
          key: xyz
        identityId: bbbb6227-54fc-4c32-9ed7-dc3eb99966ea
    OrderOffers:
      type: object
      properties:
        offerCombinations:
          type: array
          items:
            $ref: "#/components/schemas/OfferCombination"
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
    OrderPathParams:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: The order ID
          example: 0effd05e-d61e-47f2-8fc9-512f3144c69d
    PackageInclude:
      type: object
      required:
        - count
        - includes
      properties:
        title:
          type: string
          description: Include group name or product name.
          example: ""
        count:
          type: integer
          description: Include count.
          example: 1
        includes:
          type: array
          items:
            $ref: "#/components/schemas/Include"
          description: An array of includes.
          example: []
      example:
        title: ""
        count: 1
        includes: []
    Partner:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the partner.
          example: 1c1f8e6d-8685-4b17-9275-78ed40d71857
        name:
          allOf:
            - $ref: "#/components/schemas/PartnerEnum"
          description: The display name of the partner.
          example: GetYourGuide
      example:
        id: 1c1f8e6d-8685-4b17-9275-78ed40d71857
        name: GetYourGuide
    PartnerEnum:
      type: string
      enum:
        - GetYourGuide
      example: GetYourGuide
    PartnersConnection:
      type: object
      required:
        - id
        - name
        - type
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the GetYourGuide connection.
          example: f9d1bc87-ded3-4708-81d6-a82336f0db2e
        name:
          type: string
          description: Display name for the connection.
          example: My PARTNERS Connection
        type:
          type: string
          description: Type of the connection.
          example: PARTNERS
      example:
        id: f9d1bc87-ded3-4708-81d6-a82336f0db2e
        name: My PARTNERS Connection
        type: PARTNERS
    PartnersListConnection:
      type: object
      required:
        - supplier
        - connection
        - apiKey
      properties:
        supplier:
          allOf:
            - $ref: "#/components/schemas/Supplier"
          description: The supplier information associated with the connection.
          example:
            id: 697e3ce8-1860-4cbf-80ad-95857df1f640
            name: Merlin Entertainments
            endpoint: https://api.my-booking-platform.com/v1
            contact:
              website: null
              email: support@ventrata.com
              telephone: null
              address: Marble Arch, London, W1H 7EJ, United Kingdom
            destinations: []
        connection:
          anyOf:
            - $ref: "#/components/schemas/PartnersConnection"
            - $ref: "#/components/schemas/GetYourGuideConnection"
          description: The connection details, which could be a generic partner connection or a GetYourGuide connection.
          example:
            id: f9d1bc87-ded3-4708-81d6-a82336f0db2e
            name: My PARTNERS Connection
            type: PARTNERS
        apiKey:
          type: string
          description: The API key used to authenticate this partner connection.
          example: 5d25b9be-9c1e-4a44-b6c6-117aa419cf6c
      example:
        supplier:
          id: 697e3ce8-1860-4cbf-80ad-95857df1f640
          name: Merlin Entertainments
          endpoint: https://api.my-booking-platform.com/v1
          contact:
            website: null
            email: support@ventrata.com
            telephone: null
            address: Marble Arch, London, W1H 7EJ, United Kingdom
          destinations: []
        connection:
          id: f9d1bc87-ded3-4708-81d6-a82336f0db2e
          name: My PARTNERS Connection
          type: PARTNERS
        apiKey: 5d25b9be-9c1e-4a44-b6c6-117aa419cf6c
    PartnersListConnectionsRequest:
      type: object
    PartnersListConnectionsRequestHeaders:
      type: object
      allOf:
        - $ref: "#/components/schemas/RequestHeaders"
    PickupPoint:
      type: object
      required:
        - id
        - name
        - directions
        - address
        - latitude
        - longitude
        - localDateTime
        - localDateTimeTo
        - googlePlaceId
        - street
        - postalCode
        - locality
        - region
        - state
        - country
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the pickup point.
          example: ""
        name:
          type: string
          description: Name of the pickup point.
          example: ""
        directions:
          type: string
          nullable: true
          description: Optional directions to reach the pickup point.
          example: ""
        address:
          type: string
          nullable: true
          description: Optional address of the pickup point.
          example: ""
        latitude:
          type: number
          format: float
          nullable: true
          description: Latitude coordinate of the pickup point.
          example: 0
        longitude:
          type: number
          format: float
          nullable: true
          description: Longitude coordinate of the pickup point.
          example: 0
        localDateTime:
          type: string
          nullable: true
          description: Local date and time of the pickup point.
          example: ""
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
        localDateTimeTo:
          type: string
          nullable: true
          description: Local date and time of the pickup point.
          example: ""
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
        googlePlaceId:
          type: string
          nullable: true
          description: Google Place ID associated with the pickup point.
          example: ""
        street:
          type: string
          nullable: true
          description: Street address of the pickup point.
          example: ""
        postalCode:
          type: string
          nullable: true
          description: Postal code of the pickup point location.
          example: ""
        locality:
          type: string
          nullable: true
          description: Locality (city or town) of the pickup point.
          example: ""
        region:
          type: string
          nullable: true
          description: Region (e.g., state or province) of the pickup point.
          example: ""
        state:
          type: string
          nullable: true
          description: State of the pickup point.
          example: ""
        country:
          type: string
          nullable: true
          description: Country of the pickup point.
          example: ""
      example:
        id: ""
        name: ""
        directions: ""
        address: ""
        latitude: 0
        longitude: 0
        localDateTime: ""
        localDateTimeTo: ""
        googlePlaceId: ""
        street: ""
        postalCode: ""
        locality: ""
        region: ""
        state: ""
        country: ""
    Point:
      type: object
      required:
        - id
        - internalName
        - title
        - shortDescription
        - pointGroup
      properties:
        id:
          type: string
          description: The ID of the point.
          example: ""
        internalName:
          type: string
          nullable: true
          description: The internal name of the point.
          example: ""
        title:
          type: string
          nullable: true
          description: The title of the point.
          example: ""
        shortDescription:
          type: string
          nullable: true
          description: |-
            The short description of the point. This is preserved for historical compatibility, but will
            always be `nil`.
          example: ""
        pointGroup:
          allOf:
            - $ref: "#/components/schemas/PointGroup"
          example:
            id: ""
            internalName: ""
            title: ""
            shortDescription: ""
      example:
        id: ""
        internalName: ""
        title: ""
        shortDescription: ""
        pointGroup:
          id: ""
          internalName: ""
          title: ""
          shortDescription: ""
    PointGroup:
      type: object
      required:
        - id
        - internalName
        - title
        - shortDescription
      properties:
        id:
          type: string
          description: The ID of the point group.
          example: ""
        internalName:
          type: string
          description: The internal name of the point group.
          example: ""
        title:
          type: string
          description: The title of the point group.
          example: ""
        shortDescription:
          type: string
          description: The short description of the point group.
          example: ""
      example:
        id: ""
        internalName: ""
        title: ""
        shortDescription: ""
    Pricing:
      type: object
      required:
        - original
        - retail
        - net
        - currency
        - currencyPrecision
        - includedTaxes
      properties:
        original:
          type: integer
          description: Represents the advertised marketing price, which must be equal to or higher than pricingFrom.retail. Typically used for strike-through pricing, it highlights the original or component-based value of the product when the retail price reflects a discount or bundled offer. For example, a package product combining multiple components (e.g., hotel + tour + meals) may have a total component value of $500 (original), while the bundled retail price is $400. In such cases, the original price is displayed to show savings.This field should only be shown when it is higher than pricingFrom.retail and must accurately reflect a valid reference price, ensuring transparency and trust.
          example: 3995
          x-go-type: int64
        retail:
          type: integer
          description: The supplier’s recommended sale price, including all taxes and fees. This is the price charged to end customers and represents the total cost.
          example: 3995
          x-go-type: int64
        net:
          type: integer
          nullable: true
          description: The wholesale price charged to the reseller, including all taxes and fees. This price reflects the amount the reseller pays to the supplier.
          example: 2996
          x-go-type: int64
        currency:
          type: string
          description: Specifies the currency used for the prices provided in the pricingFrom object. The value must adhere to ISO 4217 currency codes (e.g., USD, EUR, JPY) to ensure consistency across systems.
          example: USD
        currencyPrecision:
          type: integer
          description: "All pricing is given in integers to avoid floating point rounding issues. e.g. USD = 2 and JPY = 0. To convert a price to decimal you should do: price / (10 ** currencyPrecision) where ** is to the power of e.g. Math.pow(10, currencyPrecision)."
          example: 2
        includedTaxes:
          type: array
          items:
            $ref: "#/components/schemas/Tax"
          description: This field defines the number of decimal places used for the currency in the pricingFrom object, ensuring precise representation and preventing rounding errors during calculations. For example, in currencies like USD, which have a precision of 2, prices are expressed in cents (e.g., $45.00 is represented as 4500). In currencies like JPY, which have a precision of 0, prices are expressed as whole yen amounts (e.g., ¥4500 is represented as 4500). By aligning with the specific decimal requirements of different currencies, this field guarantees accurate pricing calculations and consistent handling across various currency formats.
          example:
            - name: VAT 10
              retail: 700
              original: 700
              net: 400
              shortDescription: null
        offerDiscount:
          type: object
          allOf:
            - $ref: "#/components/schemas/OfferDiscount"
          nullable: true
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
        extraId:
          type: array
          items:
            type: string
          x-oapi-codegen-extra-tags:
            capability: octo/extras
            required: true
          x-capability-data:
            capability: octo/extras
            required: true
      example:
        original: 1000
        retail: 1000
        net: 8000
        currency: EUR
        currencyPrecision: 2
        includedTaxes: []
    PricingExtras:
      type: object
      properties:
        extraId:
          type: array
          items:
            type: string
          x-oapi-codegen-extra-tags:
            capability: octo/extras
            required: true
          x-capability-data:
            capability: octo/extras
            required: true
    PricingOffers:
      type: object
      properties:
        offerDiscount:
          type: object
          allOf:
            - $ref: "#/components/schemas/OfferDiscount"
          nullable: true
          x-oapi-codegen-extra-tags:
            capability: octo/offers
            required: true
          x-capability-data:
            capability: octo/offers
            required: true
    PricingPer:
      type: string
      enum:
        - BOOKING
        - UNIT
      example: BOOKING
    PricingUnit:
      type: object
      required:
        - original
        - retail
        - net
        - currency
        - currencyPrecision
        - includedTaxes
        - unitId
        - unitType
      properties:
        original:
          type: integer
          description: Represents the advertised marketing price, which must be equal to or higher than pricingFrom.retail. Typically used for strike-through pricing, it highlights the original or component-based value of the product when the retail price reflects a discount or bundled offer. For example, a package product combining multiple components (e.g., hotel + tour + meals) may have a total component value of $500 (original), while the bundled retail price is $400. In such cases, the original price is displayed to show savings.This field should only be shown when it is higher than pricingFrom.retail and must accurately reflect a valid reference price, ensuring transparency and trust.
          example: 3995
          x-go-type: int64
        retail:
          type: integer
          description: The supplier’s recommended sale price, including all taxes and fees. This is the price charged to end customers and represents the total cost.
          example: 3995
          x-go-type: int64
        net:
          type: integer
          nullable: true
          description: The wholesale price charged to the reseller, including all taxes and fees. This price reflects the amount the reseller pays to the supplier.
          example: 2996
          x-go-type: int64
        currency:
          type: string
          description: Specifies the currency used for the prices provided in the pricingFrom object. The value must adhere to ISO 4217 currency codes (e.g., USD, EUR, JPY) to ensure consistency across systems.
          example: USD
        currencyPrecision:
          type: integer
          description: "All pricing is given in integers to avoid floating point rounding issues. e.g. USD = 2 and JPY = 0. To convert a price to decimal you should do: price / (10 ** currencyPrecision) where ** is to the power of e.g. Math.pow(10, currencyPrecision)."
          example: 2
        includedTaxes:
          type: array
          items:
            $ref: "#/components/schemas/Tax"
          description: This field defines the number of decimal places used for the currency in the pricingFrom object, ensuring precise representation and preventing rounding errors during calculations. For example, in currencies like USD, which have a precision of 2, prices are expressed in cents (e.g., $45.00 is represented as 4500). In currencies like JPY, which have a precision of 0, prices are expressed as whole yen amounts (e.g., ¥4500 is represented as 4500). By aligning with the specific decimal requirements of different currencies, this field guarantees accurate pricing calculations and consistent handling across various currency formats.
          example:
            - name: VAT 10
              retail: 700
              original: 700
              net: 400
              shortDescription: null
        unitId:
          type: string
          description: ID of the unit this pricing is related to
          example: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
        unitType:
          $ref: "#/components/schemas/UnitType"
        extraPricing:
          type: array
          items:
            $ref: "#/components/schemas/Pricing"
          x-oapi-codegen-extra-tags:
            capability: octo/extras
            required: true
          x-capability-data:
            capability: octo/extras
            required: true
    PricingUnitExtras:
      type: object
      properties:
        extraPricing:
          type: array
          items:
            $ref: "#/components/schemas/Pricing"
          x-oapi-codegen-extra-tags:
            capability: octo/extras
            required: true
          x-capability-data:
            capability: octo/extras
            required: true
    Product:
      type: object
      required:
        - id
        - internalName
        - reference
        - locale
        - timeZone
        - allowFreesale
        - instantConfirmation
        - instantDelivery
        - availabilityRequired
        - availabilityType
        - deliveryFormats
        - deliveryMethods
        - redemptionMethod
        - tags
        - settlementMethods
        - freesaleDurationAmount
        - freesaleDurationUnit
        - options
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for the product, used across the platform to check availability, create bookings, etc. This identifier must be unique within the scope of the supplier’s system to ensure accurate referencing and operations.
          example: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
          x-order: 2
        internalName:
          type: string
          description: The internal name used by the supplier to refer to the product. This name is for internal or operational purposes and may differ from the public, customer-facing name. The customer-facing name is defined separately in the title field under the octo/content capability.
          example: London Eye General Admission
        reference:
          type: string
          nullable: true
          description: An optional internal code used by the supplier to refer to the product. This field is useful for supplier-specific workflows or cross-referencing. It can be null if no reference code exists for the product.
          example: LEYE-GA
        locale:
          type: string
          description: The language code specifying the primary language in which the product operates. It must conform to the IETF BCP 47 standard, which defines language tags for localization (e.g., en-US for American English, fr-FR for French (France), es-ES for Spanish (Spain)).
          example: en-GB
        timeZone:
          type: string
          description: The IANA Time Zone identifier indicating the product's location (e.g., America/New_York, Europe/London).
          example: Europe/London
        allowFreesale:
          type: boolean
          description: Indicates whether an availabilityId is required when creating a booking. If set to false, bookings can be made without specifying a travel date, creating open-dated bookings.
          example: true
        instantConfirmation:
          type: boolean
          description: Indicates whether the customer’s tickets or vouchers are delivered immediately after the booking is confirmed. If false, resellers must manage delayed ticket delivery processes.
          example: true
        instantDelivery:
          type: boolean
          description: This indicates whether the Reseller can expect immediate delivery of the customer's tickets. If `false` then the Reseller MUST be able to delay delivery of the tickets to the customer.
          example: true
        availabilityRequired:
          type: boolean
          description: Indicates whether an availabilityId is required when creating a booking. If set to false, bookings can be made without specifying a travel date, creating open-dated bookings.
          example: true
        availabilityType:
          allOf:
            - $ref: "#/components/schemas/AvailabilityType"
          description: |-
            Specifies the type of availability for the product:
            START_TIME: For products with fixed departure times (e.g., walking tour at set times during the day).
            OPENING_HOURS: For products where customers select a date and can visit anytime during operating hours (e.g., museums general admission ticket valid at any time when museum is open).
          example: START_TIME
        deliveryFormats:
          type: array
          items:
            $ref: "#/components/schemas/DeliveryFormat"
          description: |-
            Lists the formats in which tickets or vouchers for this product are delivered. Each format specifies how the tickets or vouchers will be represented:
            QRCODE: A code presented as a QR Code, commonly used for scanning at entry points.
            CODE128: A linear barcode format widely used for retail and ticketing purposes.
            AZTECCODE: A two-dimensional barcode format similar to QR codes but more compact. It is optimized for small spaces and often used in transportation and event ticketing.
            PDF_URL: A URL linking to a downloadable PDF containing the complete ticket details for this product.
            PKPASS_URL: A URL for adding the ticket to Apple Wallet (Passbook) for easy access on iOS devices.
            This field ensures resellers can understand and integrate the appropriate ticket delivery formats specifically associated with this product.
          example:
            - QRCODE
        deliveryMethods:
          type: array
          items:
            $ref: "#/components/schemas/DeliveryMethod"
          description: |-
            Specifies all supported methods of how tickets or vouchers for this product are delivered in the booking response:
            TICKET: Delivered individually per unit in the booking, where each person or unit receives a separate ticket.
            VOUCHER: Delivered as a single voucher for the entire booking, consolidating all units under one document.
            This field ensures clarity on the format of ticket or voucher delivery to resellers and customers.
          example:
            - TICKET
        redemptionMethod:
          allOf:
            - $ref: "#/components/schemas/RedemptionMethod"
          description: |-
            Specifies how the product can be redeemed by the customer:
            DIGITAL: The ticket or voucher must be presented, either scanned from a digital device (e.g., smartphone) or as a printed copy. Redemption requires a valid voucher or ticket, even in digital form.
            MANIFEST: The customer’s name, reference, or other information is checked against a manifest by the supplier. Redemption does not require a ticket or voucher.
            PRINT: A physical printed ticket or voucher is strictly required for redemption and must be presented at the time of use.
            This field ensures resellers and customers understand the specific requirements for redeeming this product.
          example: DIGITAL
        tags:
          type: array
          items:
            type: string
          description: ""
          example: []
        settlementMethods:
          type: array
          items:
            $ref: "#/components/schemas/SettlementMethod"
          description: ""
          example:
            - direct
        freesaleDurationAmount:
          type: integer
          description: ""
          example: 2
        freesaleDurationUnit:
          allOf:
            - $ref: "#/components/schemas/DurationUnit"
          description: ""
          example: hour
        options:
          type: array
          items:
            $ref: "#/components/schemas/Option"
        country:
          type: string
          description: Country code for this product. Only present when ventrata/content capability is requested.
          example: ""
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        location:
          type: string
          description: Location for this product. Only present when ventrata/content capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        destination:
          allOf:
            - $ref: "#/components/schemas/Destination"
          description: Destination for this product. Only present when ventrata/content capability is requested.
          example:
            id: 697e3ce8-1860-4cbf-80ad-95857df1f640
            default: true
            name: Edinburgh
            title: Edinburgh
            shortDescription: Edinburgh
            featured: true
            country: ""
            contact:
              name: null
              email: support@ventrata.com
              telephone: null
              address: Marble Arch, London, W1H 7EJ, United Kingdom
              website: null
            brand:
              id: ""
              name: ""
              contact:
                name: null
                email: null
                telephone: null
                address: null
                website: null
              color: ""
              secondaryColor: ""
              backgroundColor: ""
              accentFont:
                id: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
                name: ""
                normalTtfUrl: ""
                italicTtfUrl: ""
                boldItalicTtfUrl: ""
                boldTtfUrl: ""
              bodyFont: null
              headerFont: null
              checkoutLogoUrl: ""
              logoUrl: ""
              logoWhiteUrl: ""
              faviconUrl: ""
            latitude: 55.9533
            longitude: -3.1883
            googlePlaceId: ChIJZ2j5yZcEdkgRqVqkuXQkj7c
            bannerImageUrl: The URL of the image that represents the destination.
            coverImageUrl: The URL of the image that represents the destination.
            videoUrl: ""
            facebookUrl: ""
            googleUrl: ""
            tripadvisorUrl: ""
            twitterUrl: ""
            youtubeUrl: ""
            instagramUrl: ""
            categories:
              - id: 697e3ce8-1860-4cbf-80ad-95857df1f640
                default: true
                name: ""
                title: ""
                tags: []
                shortDescription: ""
                coverImageUrl: The URL of the image that represents the category.
                bannerImageUrl: The URL of the image that represents the category.
                productIds:
                  - 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
            tags: []
            address: null
            notices: []
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        alert:
          type: string
          nullable: true
          description: Alert message for this product. Only present when ventrata/content capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        title:
          type: string
          description: Title for this product. Only present when ventrata/content capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        subtitle:
          type: string
          nullable: true
          description: Subtitle for this product. Only present when ventrata/content capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        description:
          type: string
          nullable: true
          description: Description for this product. Only present when ventrata/content capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        shortDescription:
          type: string
          description: Short description for this product. Only present when ventrata/content capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        categories:
          type: array
          items:
            $ref: "#/components/schemas/Category"
          description: Categories for this product. Only present when ventrata/content capability is requested.
          example: []
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        inclusions:
          type: array
          items:
            type: string
          description: Inclusions for this product. Only present when ventrata/content capability is requested.
          example: []
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        exclusions:
          type: array
          items:
            type: string
          description: Exclusions for this product. Only present when ventrata/content capability is requested.
          example: []
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        highlights:
          type: array
          items:
            type: string
          description: Highlights for this product. Only present when ventrata/content capability is requested.
          example: []
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        pointToPoint:
          type: boolean
          description: Whether this product is point to point or not. Only present when ventrata/content capability is requested.
          example: false
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        bookingTerms:
          type: string
          nullable: true
          description: Booking terms for this product. Only present when ventrata/content capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        privacyTerms:
          type: string
          nullable: true
          description: Privacy terms for this product. Only present when ventrata/content capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        redemptionInstructions:
          type: string
          nullable: true
          description: Redemption instructions for this product. Only present when ventrata/content capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        cancellationPolicy:
          type: string
          nullable: true
          description: Cancellation policy for this product. Only present when ventrata/content capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        faqs:
          type: array
          items:
            $ref: "#/components/schemas/FAQ"
          description: FAQs for this product. Only present when ventrata/content capability is requested.
          example: []
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        coverImageUrl:
          type: string
          format: uri
          description: ""
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        bannerImageUrl:
          type: string
          format: uri
          description: ""
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        videoUrl:
          type: string
          format: uri
          nullable: true
          description: ""
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        galleryImages:
          type: array
          items:
            $ref: "#/components/schemas/Image"
          description: Gallery image URLs for this product. Only present when ventrata/content capability is requested.
          example: []
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        bannerImages:
          type: array
          items:
            $ref: "#/components/schemas/Image"
          description: Banner image URLs for this product. Only present when ventrata/content capability is requested.
          example: []
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        googlePlaceId:
          type: string
          nullable: true
          description: ""
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        latitude:
          type: number
        longitude:
          type: number
        address:
          type: string
          description: ""
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        keywords:
          type: array
          items:
            type: string
          description: ""
          example: []
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        tagline:
          type: string
          description: ""
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        brand:
          allOf:
            - $ref: "#/components/schemas/Brand"
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        defaultCurrency:
          type: string
          description: Is on the object when Pricing capability is requested. Default currency for this product, if you omit the currency parameter on future endpoints this is the value the reservation system will fallback to.
          example: USD
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
        availableCurrencies:
          type: array
          items:
            type: string
          description: Is on the object when Pricing capability is requested. All the possible currencies that we accept for this product.
          example:
            - USD
            - EUR
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
        pricingPer:
          allOf:
            - $ref: "#/components/schemas/PricingPer"
          description: Is on the object when Pricing capability is requested. Indicates whether the pricing is per unit (most common), or per booking. Pricing which is per booking is common for private charters or group booking products where the price is the same regardless of how many tickets are purchased.
          example: UNIT
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
        includeTax:
          type: boolean
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        isPackage:
          type: boolean
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/packages
            required: true
          x-capability-data:
            capability: octo/packages
            required: true
        packageBookingAvailabilityRequired:
          type: boolean
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/packages
            required: true
          x-capability-data:
            capability: octo/packages
            required: true
        googleOptions:
          type: array
          items:
            $ref: "#/components/schemas/GoogleOptions"
          x-oapi-codegen-extra-tags:
            capability: octo/google
            required: true
          x-capability-data:
            capability: octo/google
            required: true
      example:
        id: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
        internalName: London Eye General Admission
        reference: LEYE-GA
        locale: en-GB
        timeZone: Europe/London
        allowFreesale: true
        instantConfirmation: true
        instantDelivery: true
        availabilityRequired: true
        availabilityType: START_TIME
        deliveryFormats:
          - QRCODE
        deliveryMethods:
          - TICKET
        redemptionMethod: DIGITAL
        options:
          - id: DEFAULT
            default: true
            internalName: DEFAULT
            reference: null
            availabilityLocalStartTimes:
              - "00:00"
            cancellationCutoff: 1 hour
            cancellationCutoffAmount: 1
            cancellationCutoffUnit: hour
            requiredContactFields:
              - firstName
            restrictions:
              minUnits: 0
              maxUnits: 9
              minPaxCount: 0
              maxPaxCount: null
            units:
              - id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                internalName: Adult(s)
                reference: LR1-01-new
                type: ADULT
                restrictions:
                  minAge: 3
                  maxAge: 17
                  idRequired: true
                  minQuantity: 2
                  maxQuantity: 7
                  paxCount: 1
                  accompaniedBy:
                    - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
                  required: false
                  accompaniedByRatio: null
                requiredContactFields:
                  - firstName
                tags: []
                visibleContactFields: []
            availabilityLocalDateStart: "2025-09-01"
            availabilityLocalDateEnd: null
            tags: []
            availabilityCutoff: 1 hour
            availabilityCutoffAmount: 1
            availabilityCutoffUnit: hour
            visibleContactFields: []
        tags: []
        settlementMethods:
          - direct
        freesaleDurationAmount: 2
        freesaleDurationUnit: hour
    ProductContent:
      type: object
      properties:
        country:
          type: string
          description: Country code for this product. Only present when ventrata/content capability is requested.
          example: ""
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        location:
          type: string
          description: Location for this product. Only present when ventrata/content capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        destination:
          allOf:
            - $ref: "#/components/schemas/Destination"
          description: Destination for this product. Only present when ventrata/content capability is requested.
          example:
            id: 697e3ce8-1860-4cbf-80ad-95857df1f640
            default: true
            name: Edinburgh
            title: Edinburgh
            shortDescription: Edinburgh
            featured: true
            country: ""
            contact:
              name: null
              email: support@ventrata.com
              telephone: null
              address: Marble Arch, London, W1H 7EJ, United Kingdom
              website: null
            brand:
              id: ""
              name: ""
              contact:
                name: null
                email: null
                telephone: null
                address: null
                website: null
              color: ""
              secondaryColor: ""
              backgroundColor: ""
              accentFont:
                id: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
                name: ""
                normalTtfUrl: ""
                italicTtfUrl: ""
                boldItalicTtfUrl: ""
                boldTtfUrl: ""
              bodyFont: null
              headerFont: null
              checkoutLogoUrl: ""
              logoUrl: ""
              logoWhiteUrl: ""
              faviconUrl: ""
            latitude: 55.9533
            longitude: -3.1883
            googlePlaceId: ChIJZ2j5yZcEdkgRqVqkuXQkj7c
            bannerImageUrl: The URL of the image that represents the destination.
            coverImageUrl: The URL of the image that represents the destination.
            videoUrl: ""
            facebookUrl: ""
            googleUrl: ""
            tripadvisorUrl: ""
            twitterUrl: ""
            youtubeUrl: ""
            instagramUrl: ""
            categories:
              - id: 697e3ce8-1860-4cbf-80ad-95857df1f640
                default: true
                name: ""
                title: ""
                tags: []
                shortDescription: ""
                coverImageUrl: The URL of the image that represents the category.
                bannerImageUrl: The URL of the image that represents the category.
                productIds:
                  - 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
            tags: []
            address: null
            notices: []
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        alert:
          type: string
          nullable: true
          description: Alert message for this product. Only present when ventrata/content capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        title:
          type: string
          description: Title for this product. Only present when ventrata/content capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        subtitle:
          type: string
          nullable: true
          description: Subtitle for this product. Only present when ventrata/content capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        description:
          type: string
          nullable: true
          description: Description for this product. Only present when ventrata/content capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        shortDescription:
          type: string
          description: Short description for this product. Only present when ventrata/content capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        categories:
          type: array
          items:
            $ref: "#/components/schemas/Category"
          description: Categories for this product. Only present when ventrata/content capability is requested.
          example: []
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        inclusions:
          type: array
          items:
            type: string
          description: Inclusions for this product. Only present when ventrata/content capability is requested.
          example: []
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        exclusions:
          type: array
          items:
            type: string
          description: Exclusions for this product. Only present when ventrata/content capability is requested.
          example: []
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        highlights:
          type: array
          items:
            type: string
          description: Highlights for this product. Only present when ventrata/content capability is requested.
          example: []
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        pointToPoint:
          type: boolean
          description: Whether this product is point to point or not. Only present when ventrata/content capability is requested.
          example: false
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        bookingTerms:
          type: string
          nullable: true
          description: Booking terms for this product. Only present when ventrata/content capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        privacyTerms:
          type: string
          nullable: true
          description: Privacy terms for this product. Only present when ventrata/content capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        redemptionInstructions:
          type: string
          nullable: true
          description: Redemption instructions for this product. Only present when ventrata/content capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        cancellationPolicy:
          type: string
          nullable: true
          description: Cancellation policy for this product. Only present when ventrata/content capability is requested.
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        faqs:
          type: array
          items:
            $ref: "#/components/schemas/FAQ"
          description: FAQs for this product. Only present when ventrata/content capability is requested.
          example: []
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        coverImageUrl:
          type: string
          format: uri
          description: ""
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        bannerImageUrl:
          type: string
          format: uri
          description: ""
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        videoUrl:
          type: string
          format: uri
          nullable: true
          description: ""
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        galleryImages:
          type: array
          items:
            $ref: "#/components/schemas/Image"
          description: Gallery image URLs for this product. Only present when ventrata/content capability is requested.
          example: []
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        bannerImages:
          type: array
          items:
            $ref: "#/components/schemas/Image"
          description: Banner image URLs for this product. Only present when ventrata/content capability is requested.
          example: []
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        googlePlaceId:
          type: string
          nullable: true
          description: ""
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        latitude:
          type: number
        longitude:
          type: number
        address:
          type: string
          description: ""
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        keywords:
          type: array
          items:
            type: string
          description: ""
          example: []
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        tagline:
          type: string
          description: ""
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        brand:
          allOf:
            - $ref: "#/components/schemas/Brand"
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
      example:
        country: ""
        location: ""
        destination:
          id: 697e3ce8-1860-4cbf-80ad-95857df1f640
          default: true
          name: Edinburgh
          title: Edinburgh
          shortDescription: Edinburgh
          featured: true
          country: ""
          contact:
            name: null
            email: support@ventrata.com
            telephone: null
            address: Marble Arch, London, W1H 7EJ, United Kingdom
            website: null
          brand:
            id: ""
            name: ""
            contact:
              name: null
              email: null
              telephone: null
              address: null
              website: null
            color: ""
            secondaryColor: ""
            backgroundColor: ""
            accentFont:
              id: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
              name: ""
              normalTtfUrl: ""
              italicTtfUrl: ""
              boldItalicTtfUrl: ""
              boldTtfUrl: ""
            bodyFont: null
            headerFont: null
            checkoutLogoUrl: ""
            logoUrl: ""
            logoWhiteUrl: ""
            faviconUrl: ""
          latitude: 55.9533
          longitude: -3.1883
          googlePlaceId: ChIJZ2j5yZcEdkgRqVqkuXQkj7c
          bannerImageUrl: The URL of the image that represents the destination.
          coverImageUrl: The URL of the image that represents the destination.
          videoUrl: ""
          facebookUrl: ""
          googleUrl: ""
          tripadvisorUrl: ""
          twitterUrl: ""
          youtubeUrl: ""
          instagramUrl: ""
          categories:
            - id: 697e3ce8-1860-4cbf-80ad-95857df1f640
              default: true
              name: ""
              title: ""
              tags: []
              shortDescription: ""
              coverImageUrl: The URL of the image that represents the category.
              bannerImageUrl: The URL of the image that represents the category.
              productIds:
                - 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
          tags: []
          address: null
          notices: []
        alert: ""
        title: ""
        subtitle: ""
        description: ""
        shortDescription: ""
        categories: []
        inclusions: []
        exclusions: []
        highlights: []
        pointToPoint: false
        bookingTerms: ""
        privacyTerms: ""
        redemptionInstructions: ""
        cancellationPolicy: ""
        faqs: []
        coverImageUrl: ""
        bannerImageUrl: ""
        videoUrl: ""
        galleryImages: []
        bannerImages: []
        keywords: []
        tagline: ""
        brand:
          id: ""
          name: ""
          contact:
            name: null
            email: null
            telephone: null
            address: null
            website: null
          color: ""
          secondaryColor: ""
          backgroundColor: ""
          accentFont:
            id: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
            name: ""
            normalTtfUrl: ""
            italicTtfUrl: ""
            boldItalicTtfUrl: ""
            boldTtfUrl: ""
          bodyFont: null
          headerFont: null
          checkoutLogoUrl: ""
          logoUrl: ""
          logoWhiteUrl: ""
          faviconUrl: ""
    ProductGoogle:
      type: object
      properties:
        googleOptions:
          type: array
          items:
            $ref: "#/components/schemas/GoogleOptions"
          x-oapi-codegen-extra-tags:
            capability: octo/google
            required: true
          x-capability-data:
            capability: octo/google
            required: true
    ProductPackages:
      type: object
      properties:
        isPackage:
          type: boolean
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/packages
            required: true
          x-capability-data:
            capability: octo/packages
            required: true
        packageBookingAvailabilityRequired:
          type: boolean
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/packages
            required: true
          x-capability-data:
            capability: octo/packages
            required: true
      example:
        isPackage: true
        packageBookingAvailabilityRequired: true
    ProductPricing:
      type: object
      properties:
        defaultCurrency:
          type: string
          description: Is on the object when Pricing capability is requested. Default currency for this product, if you omit the currency parameter on future endpoints this is the value the reservation system will fallback to.
          example: USD
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
        availableCurrencies:
          type: array
          items:
            type: string
          description: Is on the object when Pricing capability is requested. All the possible currencies that we accept for this product.
          example:
            - USD
            - EUR
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
        pricingPer:
          allOf:
            - $ref: "#/components/schemas/PricingPer"
          description: Is on the object when Pricing capability is requested. Indicates whether the pricing is per unit (most common), or per booking. Pricing which is per booking is common for private charters or group booking products where the price is the same regardless of how many tickets are purchased.
          example: UNIT
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
        includeTax:
          type: boolean
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
      example:
        defaultCurrency: USD
        availableCurrencies:
          - USD
          - EUR
        pricingPer: BOOKING
        includeTax: true
    Question:
      type: object
      required:
        - id
        - label
        - hint
        - maxLength
        - inputType
        - required
        - selectOptions
        - coverImageUrl
        - description
        - shortDescription
        - internalName
        - title
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier used in the platform to represent the question.
          example: ""
          x-order: 1
        label:
          type: string
          nullable: true
          description: The question that should be asked to the customer.
          example: ""
        hint:
          type: string
          nullable: true
          description: A hint to help the customer answer the question.
          example: ""
        maxLength:
          type: integer
          nullable: true
          description: The maximum length of the answer to the question.
          example: 128
        inputType:
          allOf:
            - $ref: "#/components/schemas/QuestionInputType"
          description: The type of input that should be used to answer the question. Possible values are `radio`, `select`, `textarea`.
          example: select
        required:
          type: boolean
          description: "`TRUE` identifies the question as required, and should therefore be answered by the customer"
          example: false
        selectOptions:
          type: array
          items:
            $ref: "#/components/schemas/SelectOption"
          description: The options that the customer can select from. Only present when `inputType` is `radio` or `select`.
          example:
            - label: ""
              value: ""
        coverImageUrl:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
          description: Description A hint to help the customer answer the question.
        shortDescription:
          type: string
          nullable: true
        internalName:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
          description: Title The question that should be asked to the customer.
    QuestionAnswer:
      type: object
      required:
        - id
        - label
        - hint
        - maxLength
        - inputType
        - required
        - selectOptions
        - coverImageUrl
        - description
        - shortDescription
        - internalName
        - title
        - questionId
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier used in the platform to represent the question.
          example: ""
          x-order: 1
        label:
          type: string
          nullable: true
          description: The question that should be asked to the customer.
          example: ""
        hint:
          type: string
          nullable: true
          description: A hint to help the customer answer the question.
          example: ""
        maxLength:
          type: integer
          nullable: true
          description: The maximum length of the answer to the question.
          example: 128
        inputType:
          allOf:
            - $ref: "#/components/schemas/QuestionInputType"
          description: The type of input that should be used to answer the question. Possible values are `radio`, `select`, `textarea`.
          example: select
        required:
          type: boolean
          description: "`TRUE` identifies the question as required, and should therefore be answered by the customer"
          example: false
        selectOptions:
          type: array
          items:
            $ref: "#/components/schemas/SelectOption"
          description: The options that the customer can select from. Only present when `inputType` is `radio` or `select`.
          example:
            - label: ""
              value: ""
        coverImageUrl:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
          description: Description A hint to help the customer answer the question.
        shortDescription:
          type: string
          nullable: true
        internalName:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
          description: Title The question that should be asked to the customer.
        questionId:
          type: string
          format: uuid
          description: Unique identifier used in the platform to represent the question.
          example: ""
        value:
          type: string
          description: The answer to the question.
          example: ""
      example:
        id: ""
        label: ""
        hint: ""
        maxLength: 128
        inputType: select
        required: false
        selectOptions:
          - label: ""
            value: ""
        coverImageUrl: ""
        description: ""
        shortDescription: ""
        internalName: ""
        title: ""
        questionId: ""
        value: ""
    QuestionInputType:
      type: string
      enum:
        - radio
        - select
        - textArea
      example: radio
    RedemptionMethod:
      type: string
      enum:
        - DIGITAL
        - PRINT
        - MANIFEST
      example: DIGITAL
    Refund:
      type: string
      enum:
        - FULL
        - PARTIAL
        - NONE
      example: PARTIAL
    RequestHeaders:
      type: object
      allOf:
        - $ref: "#/components/schemas/Octo.RequestHeaders"
    Reseller:
      type: object
      required:
        - id
        - name
        - reference
        - tags
      properties:
        id:
          type: string
          format: uuid
          description: A unique ID / UUID generated to identify the reseller.
          example: "1223"
        name:
          type: string
          description: Reseller name.
          example: ""
        reference:
          type: string
          nullable: true
          description: Reseller reference.
          example: ""
        tags:
          type: array
          items:
            type: string
          description: An array of tags that can be used to filter.
          example: []
      example:
        id: "1223"
        name: ""
        reference: ""
        tags: []
    ResellerStatus:
      type: string
      enum:
        - ACTIVE
        - DISABLED
        - DRAFT
      example: ACTIVE
    Resource:
      type: object
      required:
        - id
        - title
        - seating
        - seats
      properties:
        id:
          type: string
          description: Unique identifier for the resource.
          example: resource-001
        title:
          type: string
          description: Display name of the resource.
          example: Tour Bus
        seating:
          type: boolean
          description: Indicates whether the resource has seating.
          example: true
        seats:
          type: array
          items:
            $ref: "#/components/schemas/Seat"
          description: List of seats available in this resource.
          example:
            - id: seat-001
              title: A1
              column: 1
              row: 1
      example:
        id: resource-001
        title: Tour Bus
        seating: true
        seats:
          - id: seat-001
            title: A1
            column: 1
            row: 1
    ResourceAllocation:
      type: object
      required:
        - id
        - resourceGroupId
        - resourceGroup
        - resourceId
        - resource
        - paxCount
        - seatIds
        - seats
      properties:
        id:
          type: string
          description: Unique identifier for the resource allocation.
          example: alloc-001
        resourceGroupId:
          type: string
          description: ID of the associated resource group.
          example: group-001
        resourceGroup:
          allOf:
            - $ref: "#/components/schemas/ResourceGroup"
          description: Full resource group object.
          example:
            id: group-001
            title: Tour Buses
            split: true
        resourceId:
          type: string
          description: ID of the assigned resource.
          example: resource-001
        resource:
          allOf:
            - $ref: "#/components/schemas/Resource"
          description: Full resource object.
          example:
            id: resource-001
            title: Tour Bus
            seating: true
            seats:
              - id: seat-001
                title: A1
                column: 1
                row: 1
        paxCount:
          type: integer
          format: int32
          description: Number of passengers allocated to the resource.
          example: 3
        seatIds:
          type: array
          items:
            type: string
          description: IDs of the allocated seats.
          example:
            - seat-001
        seats:
          type: array
          items:
            $ref: "#/components/schemas/Seat"
          description: Full seat objects allocated to the resource.
          example:
            - id: seat-001
              title: A1
              column: 1
              row: 1
      example:
        id: alloc-001
        resourceGroupId: group-001
        resourceGroup:
          id: group-001
          title: Tour Buses
          split: true
        resourceId: resource-001
        resource:
          id: resource-001
          title: Tour Bus
          seating: true
          seats:
            - id: seat-001
              title: A1
              column: 1
              row: 1
        paxCount: 3
        seatIds:
          - seat-001
        seats:
          - id: seat-001
            title: A1
            column: 1
            row: 1
    ResourceGroup:
      type: object
      required:
        - id
        - title
        - split
      properties:
        id:
          type: string
          description: Unique identifier for the resource group.
          example: group-001
        title:
          type: string
          description: Display title of the resource group.
          example: Tour Buses
        split:
          type: boolean
          description: Indicates whether the group allows resource splitting.
          example: true
      example:
        id: group-001
        title: Tour Buses
        split: true
    ResponseHeaders:
      type: object
      allOf:
        - $ref: "#/components/schemas/Octo.ResponseHeaders"
    Seat:
      type: object
      required:
        - id
        - title
        - column
        - row
      properties:
        id:
          type: string
          description: Unique identifier for the seat.
          example: seat-001
        title:
          type: string
          description: Human-readable label or name of the seat.
          example: A1
        column:
          type: integer
          format: int32
          description: Column position of the seat.
          example: 1
        row:
          type: integer
          format: int32
          description: Row position of the seat.
          example: 1
      example:
        id: seat-001
        title: A1
        column: 1
        row: 1
    SelectOption:
      type: object
      required:
        - label
        - value
      properties:
        label:
          type: string
          description: The label that will be shown to the customer.
          example: ""
        value:
          type: string
          description: The value that will be sent to the supplier.
          example: ""
      example:
        label: ""
        value: ""
    Seller:
      type: object
      required:
        - id
        - name
        - reference
        - tags
        - emailAddress
        - phoneNumber
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        reference:
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
        emailAddress:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
    SettlementMethod:
      type: string
      enum:
        - deferred
        - deposit
        - direct
        - voucher
        - wholesale
      example: direct
    Supplier:
      type: object
      required:
        - id
        - name
        - endpoint
        - contact
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the supplier, used across the platform to represent this supplier entity. This identifier must be unique within the supplier system.
          example: 697e3ce8-1860-4cbf-80ad-95857df1f640
        name:
          type: string
          description: Name used to identify the supplier within the platform. This name is typically recognized by end customers as the official name of the supplier's business entity. It should clearly represent the supplier's brand or identity to ensure consistency across platforms. For larger multi-venue suppliers, this represents the parent entity's name. Other associated entities or sub-divisions can be specified using the octo/content capability through the venues field.
          example: Merlin Entertainments
        endpoint:
          type: string
          format: uri
          description: The base URL that is prepended to all other API paths. The value should not contain a trailing slash and must follow URI format.
          example: https://api.my-booking-platform.com/v1
        contact:
          allOf:
            - $ref: "#/components/schemas/SupplierContact"
          description: A structured object containing defined contact fields related to the supplier. This includes various communication methods (e.g., website, email, phone) and address information. It ensures standardized contact details that facilitate seamless communication with the supplier for both customers and partners.
          example:
            website: null
            email: support@ventrata.com
            telephone: null
            address: Marble Arch, London, W1H 7EJ, United Kingdom
        shortDescription:
          type: string
          nullable: true
          description: A brief, customer-facing description of the supplier. This field provides a concise overview of the supplier's business and may be null if no description is available.
          example: ""
          x-capability-data:
            capability: octo/content
            required: true
        media:
          type: array
          items:
            $ref: "#/components/schemas/Octo.Media"
          description: "A list of supplier media files hosted at stable URLs. Media enhances the visual and informational representation of the supplier, such as logos and supporting images. This array can be null if no media is available. Note: Media details are intentionally repeated at various levels. "
          example:
            - src: ""
              type: image/jpeg
              rel: LOGO
              title: ""
              caption: ""
              copyright: ""
          x-capability-data:
            capability: octo/content
            required: true
        country:
          type: string
          nullable: true
          description: ""
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        destinations:
          type: array
          items:
            $ref: "#/components/schemas/Destination"
          description: ""
          example:
            - id: 697e3ce8-1860-4cbf-80ad-95857df1f640
              default: true
              name: Edinburgh
              title: Edinburgh
              shortDescription: Edinburgh
              featured: true
              country: ""
              contact:
                name: null
                email: support@ventrata.com
                telephone: null
                address: Marble Arch, London, W1H 7EJ, United Kingdom
                website: null
              brand:
                id: ""
                name: ""
                contact:
                  name: null
                  email: null
                  telephone: null
                  address: null
                  website: null
                color: ""
                secondaryColor: ""
                backgroundColor: ""
                accentFont:
                  id: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
                  name: ""
                  normalTtfUrl: ""
                  italicTtfUrl: ""
                  boldItalicTtfUrl: ""
                  boldTtfUrl: ""
                bodyFont: null
                headerFont: null
                checkoutLogoUrl: ""
                logoUrl: ""
                logoWhiteUrl: ""
                faviconUrl: ""
              latitude: 55.9533
              longitude: -3.1883
              googlePlaceId: ChIJZ2j5yZcEdkgRqVqkuXQkj7c
              bannerImageUrl: The URL of the image that represents the destination.
              coverImageUrl: The URL of the image that represents the destination.
              videoUrl: ""
              facebookUrl: ""
              googleUrl: ""
              tripadvisorUrl: ""
              twitterUrl: ""
              youtubeUrl: ""
              instagramUrl: ""
              categories:
                - id: 697e3ce8-1860-4cbf-80ad-95857df1f640
                  default: true
                  name: ""
                  title: ""
                  tags: []
                  shortDescription: ""
                  coverImageUrl: The URL of the image that represents the category.
                  bannerImageUrl: The URL of the image that represents the category.
                  productIds:
                    - 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
              tags: []
              address: null
              notices: []
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
      example:
        id: 697e3ce8-1860-4cbf-80ad-95857df1f640
        name: Merlin Entertainments
        endpoint: https://api.my-booking-platform.com/v1
        contact:
          website: null
          email: support@ventrata.com
          telephone: null
          address: Marble Arch, London, W1H 7EJ, United Kingdom
        destinations: []
    SupplierContact:
      type: object
      required:
        - website
        - email
        - telephone
        - address
      properties:
        website:
          type: string
          nullable: true
          description: The supplier's official website URL. This should link directly to the supplier's primary website or a dedicated page about the supplier within a supplier system. The URL should not reference a general supplier system but a specific, identifiable supplier presence. This field can be null if no website is available.
          example: null
        email:
          type: string
          nullable: true
          format: email
          description: The email address for customer service inquiries, primarily for end customers. This should be a direct and monitored email address for resolving queries and providing support. The field may be null if email support is not offered or the email address is unavailable or not provided in supplier system.
          example: support@ventrata.com
        telephone:
          type: string
          nullable: true
          description: The customer service telephone number for end customers, formatted according to the E.164 standard. This format includes the country code followed by the national number, with no spaces, dashes, or special characters. This field can be null if telephone support is unavailable or not provided in supplier system.
          example: null
        address:
          type: string
          nullable: true
          description: The full mailing address of the location as a single string. It includes street address, city, state, postal code, and country. If no address is provided, this field can be null. For structured details, use the additional address-related fields
          example: Marble Arch, London, W1H 7EJ, United Kingdom
      example:
        website: null
        email: support@ventrata.com
        telephone: null
        address: Marble Arch, London, W1H 7EJ, United Kingdom
    SupplierContent:
      type: object
      properties:
        country:
          type: string
          nullable: true
          description: ""
          example: ""
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        destinations:
          type: array
          items:
            $ref: "#/components/schemas/Destination"
          description: ""
          example:
            - id: 697e3ce8-1860-4cbf-80ad-95857df1f640
              default: true
              name: Edinburgh
              title: Edinburgh
              shortDescription: Edinburgh
              featured: true
              country: ""
              contact:
                name: null
                email: support@ventrata.com
                telephone: null
                address: Marble Arch, London, W1H 7EJ, United Kingdom
                website: null
              brand:
                id: ""
                name: ""
                contact:
                  name: null
                  email: null
                  telephone: null
                  address: null
                  website: null
                color: ""
                secondaryColor: ""
                backgroundColor: ""
                accentFont:
                  id: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
                  name: ""
                  normalTtfUrl: ""
                  italicTtfUrl: ""
                  boldItalicTtfUrl: ""
                  boldTtfUrl: ""
                bodyFont: null
                headerFont: null
                checkoutLogoUrl: ""
                logoUrl: ""
                logoWhiteUrl: ""
                faviconUrl: ""
              latitude: 55.9533
              longitude: -3.1883
              googlePlaceId: ChIJZ2j5yZcEdkgRqVqkuXQkj7c
              bannerImageUrl: The URL of the image that represents the destination.
              coverImageUrl: The URL of the image that represents the destination.
              videoUrl: ""
              facebookUrl: ""
              googleUrl: ""
              tripadvisorUrl: ""
              twitterUrl: ""
              youtubeUrl: ""
              instagramUrl: ""
              categories:
                - id: 697e3ce8-1860-4cbf-80ad-95857df1f640
                  default: true
                  name: ""
                  title: ""
                  tags: []
                  shortDescription: ""
                  coverImageUrl: The URL of the image that represents the category.
                  bannerImageUrl: The URL of the image that represents the category.
                  productIds:
                    - 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
              tags: []
              address: null
              notices: []
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
      example:
        country: ""
        destinations:
          - id: 697e3ce8-1860-4cbf-80ad-95857df1f640
            default: true
            name: Edinburgh
            title: Edinburgh
            shortDescription: Edinburgh
            featured: true
            country: ""
            contact:
              name: null
              email: support@ventrata.com
              telephone: null
              address: Marble Arch, London, W1H 7EJ, United Kingdom
              website: null
            brand:
              id: ""
              name: ""
              contact:
                name: null
                email: null
                telephone: null
                address: null
                website: null
              color: ""
              secondaryColor: ""
              backgroundColor: ""
              accentFont:
                id: 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
                name: ""
                normalTtfUrl: ""
                italicTtfUrl: ""
                boldItalicTtfUrl: ""
                boldTtfUrl: ""
              bodyFont: null
              headerFont: null
              checkoutLogoUrl: ""
              logoUrl: ""
              logoWhiteUrl: ""
              faviconUrl: ""
            latitude: 55.9533
            longitude: -3.1883
            googlePlaceId: ChIJZ2j5yZcEdkgRqVqkuXQkj7c
            bannerImageUrl: The URL of the image that represents the destination.
            coverImageUrl: The URL of the image that represents the destination.
            videoUrl: ""
            facebookUrl: ""
            googleUrl: ""
            tripadvisorUrl: ""
            twitterUrl: ""
            youtubeUrl: ""
            instagramUrl: ""
            categories:
              - id: 697e3ce8-1860-4cbf-80ad-95857df1f640
                default: true
                name: ""
                title: ""
                tags: []
                shortDescription: ""
                coverImageUrl: The URL of the image that represents the category.
                bannerImageUrl: The URL of the image that represents the category.
                productIds:
                  - 6b903d44-dc24-4ca4-ae71-6bde6c4f4854
            tags: []
            address: null
            notices: []
    Tax:
      type: object
      required:
        - name
        - retail
        - original
        - net
        - shortDescription
      properties:
        name:
          type: string
          description: The name of the tax or fee, such as "VAT", "City Tax", or "Service Charge". This field provides clear labeling of the tax or fee being applied, making the pricing structure easier to interpret.
          example: VAT 10
        retail:
          type: integer
          description: The value of the tax or fee included in the retail price, expressed in the same currency as the pricingFrom.currency. This value indicates the portion of the end-customer price attributable to the specific tax or fee.
          example: 700
          x-go-type: int64
        original:
          type: integer
          description: ""
          example: 700
          x-go-type: int64
        net:
          type: integer
          nullable: true
          description: The value of the tax or fee included in the net price, expressed in the same currency as the pricingFrom.currency. This value indicates the portion of the reseller’s cost attributable to the specific tax or fee.
          example: 400
          x-go-type: int64
        shortDescription:
          type: string
          nullable: true
          description: ""
          example: null
      example:
        name: VAT 10
        retail: 700
        original: 700
        net: 400
        shortDescription: null
    Ticket:
      type: object
      required:
        - redemptionMethod
        - utcRedeemedAt
        - deliveryOptions
        - utcNoshowedAt
      properties:
        redemptionMethod:
          allOf:
            - $ref: "#/components/schemas/RedemptionMethod"
          description: |-
            Specifies how the voucher can be redeemed by the customer:
            DIGITAL: The voucher must be presented, either scanned from a digital device (e.g., smartphone) or as a printed copy. Redemption requires a valid voucher or ticket, even in digital form.
            MANIFEST: The customer’s name, reference, or other information is checked against a manifest by the supplier. Redemption does not require a ticket or voucher.
            PRINT: A physical printed voucher is strictly required for redemption and must be presented at the time of use.
            This field ensures resellers and customers understand the specific requirements for redeeming this booking.
          example: DIGITAL
        utcRedeemedAt:
          type: string
          nullable: true
          description: An ISO8601 date time in UTC at when the voucher was redeemed, if applicable.
          example: "2021-10-27T23:28:43Z"
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
        deliveryOptions:
          type: array
          items:
            $ref: "#/components/schemas/DeliveryOption"
          description: All possible delivery options supplier accepts, in the order of supplier preference
          example:
            - deliveryFormat: QRCODE
              deliveryValue: ""
        utcNoshowedAt:
          type: string
          nullable: true
          description: An ISO8601 date time in UTC at when the voucher was redeemed, if applicable.
          example: "2021-10-27T23:28:43Z"
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
      example:
        redemptionMethod: DIGITAL
        utcRedeemedAt: "2021-10-27T23:28:43Z"
        deliveryOptions:
          - deliveryFormat: QRCODE
            deliveryValue: ""
        utcNoshowedAt: "2021-10-27T23:28:43Z"
    TourGroup:
      type: object
      required:
        - id
        - internalName
        - title
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the tour group.
          example: c5a8d7a9-9279-4b2e-bd5d-21933cfd1234
        internalName:
          type: string
          description: Internal name used for internal reference or system logic.
          example: urban_adventures_bangkok
        title:
          type: string
          description: Public-facing title of the tour group.
          example: Bangkok City Highlights
      example:
        id: c5a8d7a9-9279-4b2e-bd5d-21933cfd1234
        internalName: urban_adventures_bangkok
        title: Bangkok City Highlights
    UUID:
      type: string
      format: uuid
      x-go-type: openapi_types.UUID
    Unit:
      type: object
      required:
        - id
        - internalName
        - reference
        - type
        - requiredContactFields
        - tags
        - visibleContactFields
        - restrictions
      properties:
        id:
          type: string
          description: The unique identifier for this unit within the scope of the option. This ID ensures that each unit can be uniquely referenced and managed.
          example: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
          x-order: 2
        internalName:
          type: string
          description: An internal name for the unit, used for backend purposes and not visible to customers. This field helps with identifying and managing the unit in the supplier’s system.
          example: Adult(s)
        reference:
          type: string
          nullable: true
          description: An optional internal reference code used by the supplier for identification purposes. This field may not be unique and is meant for operational use.
          example: LR1-01-new
        type:
          allOf:
            - $ref: "#/components/schemas/UnitType"
          description: "This is the base unit type for this unit definition. A value of TRAVELLER must only be used in replacement of ADULT, CHILD, INFANT, YOUTH, STUDENT, MILITARY or SENIOR. "
          example: ADULT
        requiredContactFields:
          type: array
          items:
            $ref: "#/components/schemas/ContactField"
          description: |-
            Lists the contact information required per ticket for the unit. Possible values include:
            firstName: First name of the ticket holder.
            lastName: Last name of the ticket holder.
            fullName: Full name, as a combination of first and last name.
            emailAddress: Email address of the ticket holder.
            phoneNumber: Phone number of the ticket holder.
            postalCode: Postal code for identification purposes.
            country: Country code (ISO 3166-1 alpha-2).
            notes: Additional notes or special instructions.
            locales: Locale preferences (IETF BCP 47 tags).
          example:
            - firstName
        tags:
          type: array
          items:
            type: string
          description: This is an array of tags that can be used to filter the units.
          example: []
        visibleContactFields:
          type: array
          items:
            $ref: "#/components/schemas/ContactField"
          description: This is the array of the contact information PER ticket that the supplier expects.
          example: []
        restrictions:
          allOf:
            - $ref: "#/components/schemas/UnitRestrictions"
          description: Specifies booking or usage restrictions for the unit.
          example:
            minAge: 3
            maxAge: 17
            idRequired: true
            minQuantity: 2
            maxQuantity: 7
            paxCount: 1
            accompaniedBy:
              - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
            required: false
            accompaniedByRatio: null
        title:
          type: string
          description: Title for this unit. Only present when octo/content capability is requested.
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        titlePlural:
          type: string
          description: Plural title for this unit. Only present when octo/content capability is requested.
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        subtitle:
          type: string
          nullable: true
          description: Subtitle for this unit. Only present when octo/content capability is requested.
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        pricingFrom:
          type: array
          items:
            $ref: "#/components/schemas/Pricing"
          description: "Is on the object when Pricing capability is requested. "
          example:
            - original: 1000
              retail: 1000
              net: 8000
              currency: EUR
              currencyPrecision: 2
              includedTaxes: []
            - original: 1000
              retail: 1000
              net: 8000
              currency: USD
              currencyPrecision: 2
              includedTaxes: []
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
        pricing:
          type: array
          items:
            $ref: "#/components/schemas/Pricing"
          description: "Is on the object when Pricing capability is requested. "
          example:
            - original: 1000
              retail: 1000
              net: 8000
              currency: EUR
              currencyPrecision: 2
              includedTaxes: []
            - original: 1000
              retail: 1000
              net: 8000
              currency: USD
              currencyPrecision: 2
              includedTaxes: []
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
        questions:
          type: array
          items:
            $ref: "#/components/schemas/Question"
          description: Questions for this unit. Only present when octo/questions capability is requested.
          example:
            - id: ""
              label: ""
              hint: ""
              maxLength: 128
              inputType: select
              required: false
              selectOptions:
                - label: ""
                  value: ""
              coverImageUrl: ""
              description: ""
              shortDescription: ""
              internalName: ""
              title: ""
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/questions
            required: true
          x-capability-data:
            capability: octo/questions
            required: true
        extras:
          type: array
          items:
            $ref: "#/components/schemas/Extra"
          x-oapi-codegen-extra-tags:
            capability: octo/extras
            required: true
          x-capability-data:
            capability: octo/extras
            required: true
      example:
        id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
        internalName: Adult(s)
        reference: LR1-01-new
        type: ADULT
        restrictions:
          minAge: 3
          maxAge: 17
          idRequired: true
          minQuantity: 2
          maxQuantity: 7
          paxCount: 1
          accompaniedBy:
            - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
          required: false
          accompaniedByRatio: null
        requiredContactFields:
          - firstName
        tags: []
        visibleContactFields: []
    UnitContent:
      type: object
      properties:
        title:
          type: string
          description: Title for this unit. Only present when octo/content capability is requested.
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        titlePlural:
          type: string
          description: Plural title for this unit. Only present when octo/content capability is requested.
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
        subtitle:
          type: string
          nullable: true
          description: Subtitle for this unit. Only present when octo/content capability is requested.
          x-oapi-codegen-extra-tags:
            capability: ventrata/content
            required: true
          x-capability-data:
            capability: ventrata/content
            required: true
      example:
        title: ""
        titlePlural: ""
        subtitle: null
    UnitExtras:
      type: object
      properties:
        extras:
          type: array
          items:
            $ref: "#/components/schemas/Extra"
          x-oapi-codegen-extra-tags:
            capability: octo/extras
            required: true
          x-capability-data:
            capability: octo/extras
            required: true
    UnitItem:
      type: object
      required:
        - resellerReference
        - supplierReference
        - unitId
        - status
        - utcRedeemedAt
        - ticket
        - alias
        - rebookingUuid
        - rebookingUnitItemUuid
        - originalRebookingUuid
        - originalRebookingUnitItemUuid
        - utcRebookedAt
        - utcNoshowedAt
      properties:
        uuid:
          type: string
          format: uuid
          description: The id of the unit, this will be unique to the option.
          example: 3b1bc2ee-3155-4738-9471-f49842a07327
        resellerReference:
          type: string
          nullable: true
          description: A reference the reseller uses to identify the unit within all bookings.
          example: 4ec08a62-892c-48c1-a608-dc946531a33a
        supplierReference:
          type: string
          nullable: true
          description: A reference the supplier uses to identify the unit within all bookings.
          example: K9T7R4
        unitId:
          type: string
          description: This MUST be a unique identifier within the scope of the option.
          example: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
        unit:
          allOf:
            - $ref: "#/components/schemas/Unit"
          description: ""
          example:
            id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
            internalName: Adult(s)
            reference: LR1-01-new
            type: ADULT
            restrictions:
              minAge: 3
              maxAge: 17
              idRequired: true
              minQuantity: 2
              maxQuantity: 7
              paxCount: 1
              accompaniedBy:
                - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
              required: false
              accompaniedByRatio: null
            requiredContactFields:
              - firstName
            tags: []
            visibleContactFields: []
        status:
          allOf:
            - $ref: "#/components/schemas/BookingStatus"
          description: |-
            The status of the booking, possible values are:
            `ON_HOLD` The booking is pending confirmation, this is the default value when you first create the booking.
            `EXPIRED` If the booking is not confirmed before the expiration hold expires, it goes into an expired state.
            `CONFIRMED` Once the confirmation call is made the booking is ready to be used.
            `CANCELLED` If the booking is cancelled.
            `PENDING` If the booking is pending outside availability confirmation.
            `REDEEMED` If the booking is already redeemed.
          example: CONFIRMED
        utcRedeemedAt:
          type: string
          format: date-time
          nullable: true
          description: The ISO8601 date in UTC indicating when the ticket was used at the attraction.
          example: null
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
        contact:
          allOf:
            - $ref: "#/components/schemas/CustomerContact"
          description: Contact details for the guests that will attend the tour/attraction. Contact Body can be applied to both the booking object (the main reservation) or the unit object (individual ticket holders - if the supplier requires this information)
          example:
            fullName: John Doe
            firstName: John
            lastName: Doe
            emailAddress: johndoe@email.com
            phoneNumber: ""
            locales:
              - en
            postalCode: ""
            country: ""
            notes: ""
            taxId: ""
            title: ""
            streetAddress: ""
            city: ""
            state: ""
            allowMarketing: true
        ticket:
          type: object
          allOf:
            - $ref: "#/components/schemas/Ticket"
          nullable: true
          description: ""
          example:
            redemptionMethod: DIGITAL
            utcRedeemedAt: "2021-10-27T23:28:43Z"
            deliveryOptions:
              - deliveryFormat: QRCODE
                deliveryValue: ""
            utcNoshowedAt: "2021-10-27T23:28:43Z"
        id:
          type: string
          format: uuid
          description: The id of the unit, this will be unique to the option.
          example: ""
          x-order: 2
        alias:
          type: string
          nullable: true
          description: An alias for the unit.
          example: ""
        rebookingUuid:
          type: string
          nullable: true
          format: uuid
          description: The id of the unit, this will be unique to the option.
          example: ""
        rebookingUnitItemUuid:
          type: string
          nullable: true
          format: uuid
          description: The id of the unit, this will be unique to the option.
          example: ""
        originalRebookingUuid:
          type: string
          nullable: true
          format: uuid
          description: The id of the unit, this will be unique to the option.
          example: ""
        originalRebookingUnitItemUuid:
          type: string
          nullable: true
          format: uuid
          description: The id of the unit, this will be unique to the option.
          example: ""
        utcRebookedAt:
          type: string
          format: date-time
          nullable: true
          description: The RFC 3339 date in UTC indicating when the ticket was rebooked.
          example: "2021-10-27 23:28:43Z"
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
          x-go-type: types.TimeRFC3339
        utcNoshowedAt:
          type: string
          format: date-time
          nullable: true
          example: "2021-10-27 23:28:43Z"
          x-go-type-import:
            path: ventrata-octo-api/pkg/types
            type: string
            format: date-time
            example: "2021-10-27 23:28:43Z"
            description: The time the ticket was noshowed.
          x-go-type: types.TimeRFC3339
        requiredContactFields:
          type: array
          items:
            type: string
        visibleContactFields:
          type: array
          items:
            type: string
        unitType:
          $ref: "#/components/schemas/UnitType"
        pricing:
          allOf:
            - $ref: "#/components/schemas/Pricing"
          description: "Is on the object when Pricing capability is requested. "
          example:
            original: 1000
            retail: 1000
            net: 8000
            currency: EUR
            currencyPrecision: 2
            includedTaxes: []
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
        questionAnswers:
          type: array
          items:
            $ref: "#/components/schemas/QuestionAnswer"
          description: Questions for this unit item. Only present when octo/questions capability is requested.
          example:
            - id: ""
              label: ""
              hint: ""
              maxLength: 128
              inputType: select
              required: false
              selectOptions:
                - label: ""
                  value: ""
              coverImageUrl: ""
              description: ""
              shortDescription: ""
              internalName: ""
              title: ""
              questionId: ""
              value: ""
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/questions
            required: true
          x-capability-data:
            capability: octo/questions
            required: true
      example:
        uuid: 3b1bc2ee-3155-4738-9471-f49842a07327
        resellerReference: A reference the reseller uses to identify the unit within all bookings.
        supplierReference: A reference the supplier uses to identify the unit within all bookings.
        unitId: This MUST be a unique identifier within the scope of the option.
        unit:
          id: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
          internalName: Adult(s)
          reference: LR1-01-new
          type: ADULT
          restrictions:
            minAge: 3
            maxAge: 17
            idRequired: true
            minQuantity: 2
            maxQuantity: 7
            paxCount: 1
            accompaniedBy:
              - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
            required: false
            accompaniedByRatio: null
          requiredContactFields:
            - firstName
          tags: []
          visibleContactFields: []
        status: CONFIRMED
        utcRedeemedAt: "2021-10-27 23:28:43Z"
        contact:
          fullName: John Doe
          firstName: John
          lastName: Doe
          emailAddress: johndoe@email.com
          phoneNumber: ""
          locales:
            - en
          postalCode: ""
          country: ""
          notes: ""
          taxId: ""
          title: ""
          streetAddress: ""
          city: ""
          state: ""
          allowMarketing: true
        ticket: null
        id: ""
        alias: ""
        rebookingUuid: ""
        rebookingUnitItemUuid: ""
        originalRebookingUuid: ""
        originalRebookingUnitItemUuid: ""
        utcRebookedAt: "2021-10-27 23:28:43Z"
        utcNoshowedAt: "2021-10-27 23:28:43Z"
        unitType: ADULT
    UnitItemIdentifier:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          description: The unit item unit ID.
          example: 3b1bc2ee-3155-4738-9471-f49842a07327
        unitId:
          type: string
          description: A unique UUID to identify the unit, same as the booking uuid except per unit.
          example: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
        unitType:
          type: string
        resellerReference:
          type: string
          description: Your reference for this booking. Also known as a Voucher Number.
          example: "123321"
        alias:
          type: string
          description: The alias of the unit item.
          example: alias
      example:
        uuid: 3b1bc2ee-3155-4738-9471-f49842a07327
        unitId: adult_697e3ce8-1860-4cbf-80ad-95857df1f640
        resellerReference: "123321"
        alias: alias
    UnitItemPricing:
      type: object
      properties:
        pricing:
          allOf:
            - $ref: "#/components/schemas/Pricing"
          description: "Is on the object when Pricing capability is requested. "
          example:
            original: 1000
            retail: 1000
            net: 8000
            currency: EUR
            currencyPrecision: 2
            includedTaxes: []
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
      example:
        pricing:
          original: 1000
          retail: 1000
          net: 8000
          currency: EUR
          currencyPrecision: 2
          includedTaxes: []
    UnitItemQuestions:
      type: object
      properties:
        questionAnswers:
          type: array
          items:
            $ref: "#/components/schemas/QuestionAnswer"
          description: Questions for this unit item. Only present when octo/questions capability is requested.
          example:
            - id: ""
              label: ""
              hint: ""
              maxLength: 128
              inputType: select
              required: false
              selectOptions:
                - label: ""
                  value: ""
              coverImageUrl: ""
              description: ""
              shortDescription: ""
              internalName: ""
              title: ""
              questionId: ""
              value: ""
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/questions
            required: true
          x-capability-data:
            capability: octo/questions
            required: true
      example:
        questionAnswers:
          - id: ""
            label: ""
            hint: ""
            maxLength: 128
            inputType: select
            required: false
            selectOptions:
              - label: ""
                value: ""
            coverImageUrl: ""
            description: ""
            shortDescription: ""
            internalName: ""
            title: ""
            questionId: ""
            value: ""
    UnitPricing:
      type: object
      properties:
        pricingFrom:
          type: array
          items:
            $ref: "#/components/schemas/Pricing"
          description: "Is on the object when Pricing capability is requested. "
          example:
            - original: 1000
              retail: 1000
              net: 8000
              currency: EUR
              currencyPrecision: 2
              includedTaxes: []
            - original: 1000
              retail: 1000
              net: 8000
              currency: USD
              currencyPrecision: 2
              includedTaxes: []
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
        pricing:
          type: array
          items:
            $ref: "#/components/schemas/Pricing"
          description: "Is on the object when Pricing capability is requested. "
          example:
            - original: 1000
              retail: 1000
              net: 8000
              currency: EUR
              currencyPrecision: 2
              includedTaxes: []
            - original: 1000
              retail: 1000
              net: 8000
              currency: USD
              currencyPrecision: 2
              includedTaxes: []
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
      example:
        pricingFrom:
          - original: 1000
            retail: 1000
            net: 8000
            currency: EUR
            currencyPrecision: 2
            includedTaxes: []
          - original: 1000
            retail: 1000
            net: 8000
            currency: USD
            currencyPrecision: 2
            includedTaxes: []
    UnitQuestions:
      type: object
      properties:
        questions:
          type: array
          items:
            $ref: "#/components/schemas/Question"
          description: Questions for this unit. Only present when octo/questions capability is requested.
          example:
            - id: ""
              label: ""
              hint: ""
              maxLength: 128
              inputType: select
              required: false
              selectOptions:
                - label: ""
                  value: ""
              coverImageUrl: ""
              description: ""
              shortDescription: ""
              internalName: ""
              title: ""
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            capability: octo/questions
            required: true
          x-capability-data:
            capability: octo/questions
            required: true
      example:
        questions:
          - id: ""
            label: ""
            hint: ""
            maxLength: 128
            inputType: select
            required: false
            selectOptions:
              - label: ""
                value: ""
            coverImageUrl: ""
            description: ""
            shortDescription: ""
            internalName: ""
            title: ""
    UnitRestrictions:
      type: object
      required:
        - minAge
        - maxAge
        - idRequired
        - minQuantity
        - maxQuantity
        - paxCount
        - accompaniedBy
        - required
        - accompaniedByRatio
      properties:
        minAge:
          type: integer
          description: Minimum age to purchase the unit.
          example: 3
        maxAge:
          type: integer
          description: Maximum age to purchase the unit.
          example: 17
        idRequired:
          type: boolean
          description: Indicates if identification (e.g., student ID) is required for redemption.
          example: true
        minQuantity:
          type: integer
          nullable: true
          description: Minimum number of units that must be purchased (e.g., 2 tickets). Null means no minimum.
          example: 2
        maxQuantity:
          type: integer
          nullable: true
          description: Maximum number of units allowed in a single booking. Null means unlimited.
          example: 7
        paxCount:
          type: integer
          description: The number of people each unit represents (e.g., 1 family ticket = 4 pax).
          example: 1
        accompaniedBy:
          type: array
          items:
            type: string
          description: "Specifies if this unit must be accompanied by another unit (e.g., an infant ticket must be purchased with an adult ticket). Array of unit IDs which must be booked together. "
          example:
            - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
        minHeight:
          type: integer
          description: Minimum height required for this unit (e.g., for amusement park rides).
          example: 220
          x-capability-data:
            capability: octo/content
            required: false
        maxHeight:
          type: integer
          description: Maximum height allowed.
          example: 120
          x-capability-data:
            capability: octo/content
            required: false
        heightUnit:
          type: string
          description: Unit of height measurement (e.g., "cm" or "in") used for values of minHeight, maxHeight.
          example: ""
          x-capability-data:
            capability: octo/content
            required: false
        minWeight:
          type: integer
          description: Minimum weight required.
          example: 50
          x-capability-data:
            capability: octo/content
            required: false
        maxWeight:
          type: integer
          description: Maximum weight allowed.
          example: 120
          x-capability-data:
            capability: octo/content
            required: false
        weightUnit:
          type: string
          description: Unit of weight measurement (e.g., "kg" or "lb") used for values of minWeight, maxWeight.
          example: ""
          x-capability-data:
            capability: octo/content
            required: false
        required:
          type: boolean
          description: This is whether this unit is required to be chosen for purchase
          example: false
        accompaniedByRatio:
          type: integer
          nullable: true
      example:
        minAge: 3
        maxAge: 17
        idRequired: true
        minQuantity: 2
        maxQuantity: 7
        paxCount: 1
        accompaniedBy:
          - adult_697e3ce8-1860-4cbf-80ad-95857df1f640
        required: false
        accompaniedByRatio: null
    UnitType:
      type: string
      enum:
        - ADULT
        - YOUTH
        - CHILD
        - INFANT
        - FAMILY
        - SENIOR
        - STUDENT
        - MILITARY
        - OTHER
      example: ADULT
    UpdateMappingsRequest:
      type: object
      required:
        - body
      properties:
        body:
          type: array
          items:
            $ref: "#/components/schemas/MappingToUpdate"
    UpdateOrderBody:
      type: object
      properties:
        expirationMinutes:
          type: integer
          format: int32
          description: Optional expiration duration for the order, in minutes.
          example: 30
        emailReceipt:
          type: boolean
          description: Whether to send a receipt to the customer's email.
          example: true
        contact:
          allOf:
            - $ref: "#/components/schemas/BookingContact"
          description: Contact information for the order.
          example:
            fullName: John Doe
            firstName: John
            lastName: Doe
            emailAddress: johndoe@email.com
            phoneNumber: "+447840739436"
            locales:
              - en
              - en-GB
              - en-US
            country: GB
            taxId: ""
            streetAddress: ""
            city: ""
            state: ""
            allowMarketing: true
        currency:
          type: string
          description: Optional ISO 4217 currency code for the order.
          example: USD
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
      example:
        expirationMinutes: 30
        emailReceipt: true
        contact:
          fullName: John Doe
          firstName: John
          lastName: Doe
          emailAddress: johndoe@email.com
          phoneNumber: "+447840739436"
          locales:
            - en
            - en-GB
            - en-US
          country: GB
          taxId: ""
          streetAddress: ""
          city: ""
          state: ""
          allowMarketing: true
        currency: USD
    UpdateOrderPricingBody:
      type: object
      properties:
        currency:
          type: string
          description: Optional ISO 4217 currency code for the order.
          example: USD
          x-oapi-codegen-extra-tags:
            capability: octo/pricing
            required: true
          x-capability-data:
            capability: octo/pricing
            required: true
      example:
        currency: USD
    User:
      type: object
      required:
        - id
        - name
        - reference
        - tags
        - emailAddress
        - phoneNumber
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        reference:
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
        emailAddress:
          type: string
        phoneNumber:
          type: string
          nullable: true
    Waitlist:
      type: object
      required:
        - id
        - productId
        - optionId
        - localDate
        - units
        - contact
      properties:
        id:
          type: string
          format: uuid
        productId:
          type: string
          format: uuid
        optionId:
          $ref: "#/components/schemas/DefaultableID"
        localDate:
          type: string
          format: date
        units:
          type: array
          items:
            $ref: "#/components/schemas/WaitlistUnitIdentifier"
        contact:
          type: object
          allOf:
            - $ref: "#/components/schemas/CustomerContact"
          nullable: true
    WaitlistUnitIdentifier:
      type: object
      required:
        - quantity
        - unitId
      properties:
        quantity:
          type: integer
        unitId:
          type: string
    WaitlistUnitItemIdentifier:
      type: object
      required:
        - id
      properties:
        id:
          type: string
        quantity:
          type: integer
    Webhook:
      type: object
      required:
        - id
        - event
        - url
        - retryOnError
        - useContactLanguage
        - headers
        - capabilities
      properties:
        id:
          type: string
          description: Unique identifier of the webhook.
          example: webhook-001
        event:
          allOf:
            - $ref: "#/components/schemas/WebhookEvent"
          description: Event that triggers the webhook.
          example: booking_update
        url:
          type: string
          nullable: true
          description: Target URL where the webhook payload is sent.
          example: https://api.example.com/webhooks
        retryOnError:
          type: boolean
          description: Whether to retry delivery if an error occurs.
          example: true
        useContactLanguage:
          type: boolean
          description: Whether to format the payload using the contact's preferred language.
          example: false
        headers:
          type: object
          additionalProperties:
            type: string
          description: Custom headers to include in the webhook request.
          example: {}
        capabilities:
          type: array
          items:
            $ref: "#/components/schemas/CapabilityId"
          description: List of capability identifiers associated with this webhook.
          example:
            - octo/pricing
            - octo/offers
      example:
        id: webhook-001
        event: booking_update
        url: https://api.example.com/webhooks
        retryOnError: true
        useContactLanguage: false
        headers: {}
        capabilities:
          - octo/pricing
          - octo/offers
    WebhookEvent:
      type: string
      enum:
        - booking_update
        - availability_update
    WhoIAm:
      type: object
      required:
        - supplier
        - connection
        - partner
        - reseller
        - checkout
        - operator
        - terminal
      properties:
        supplier:
          $ref: "#/components/schemas/Supplier"
        connection:
          anyOf:
            - $ref: "#/components/schemas/GetYourGuideConnection"
            - $ref: "#/components/schemas/PartnersConnection"
        partner:
          $ref: "#/components/schemas/Partner"
        reseller:
          $ref: "#/components/schemas/Reseller"
        checkout:
          nullable: true
        operator:
          nullable: true
        terminal:
          nullable: true
      example:
        supplier:
          id: 697e3ce8-1860-4cbf-80ad-95857df1f640
          name: Merlin Entertainments
          endpoint: https://api.my-booking-platform.com/v1
          contact:
            website: null
            email: support@ventrata.com
            telephone: null
            address: Marble Arch, London, W1H 7EJ, United Kingdom
          destinations: []
        connection:
          id: f9d1bc87-ded3-4708-81d6-a82336f0db2e
          name: My PARTNERS Connection
          type: PARTNERS
        partner:
          id: 1c1f8e6d-8685-4b17-9275-78ed40d71857
          name: GetYourGuide
        reseller:
          id: "1223"
          name: ""
          reference: ""
          tags: []
        checkout: null
        operator: null
        terminal: null
    WhoIAmRequest:
      type: object
  securitySchemes:
    BearerAuth:
      type: http
      scheme: Bearer
servers:
  - url: https://api.ventrata.com/octo
    variables: {}
