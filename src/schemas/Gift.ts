// Generated by ts-to-zod
import { z } from 'zod';
import { agentSchema } from './Agent';
import { bookingCancellationSchema } from './BookingCancellation';
import { customerContactSchema } from './CustomerContact';
import { deliveryMethodSchema } from './DeliveryMethod';
import { giftPaymentSchema } from './GiftPayment';
import { pricingSchema } from './Pricing';
import { contactFieldSchema } from './ContactField';
import { resellerSchema } from './Reseller';
import { sellerSchema } from './Seller';
import { settlementMethodSchema } from './SettlementMethod';
import { bookingStatusSchema } from './BookingStatus';
import { userSchema } from './User';
import { ticketSchema } from './Ticket';
import { identitySchema } from './Identity';

export const giftSchema = z.object({
	agent: agentSchema.nullable(),
	alias: z.string().nullable(),
	amount: z.number(),
	cancellable: z.boolean(),
	cancellation: bookingCancellationSchema.nullable(),
	confirmable: z.boolean(),
	contact: customerContactSchema.nullable(),
	currency: z.string(),
	deliveryMethods: z.array(deliveryMethodSchema),
	giftPayment: giftPaymentSchema.nullable(),
	id: z.string(),
	message: z.string().nullable(),
	notes: z.string().nullable(),
	pricing: pricingSchema.optional(),
	recipient: customerContactSchema.nullable(),
	requiredContactFields: z.array(contactFieldSchema),
	reseller: resellerSchema.nullable(),
	resellerReference: z.string().nullable(),
	seller: sellerSchema.nullable(),
	settlementMethod: settlementMethodSchema,
	status: bookingStatusSchema,
	supplierReference: z.string(),
	testMode: z.boolean().nullable(),
	user: userSchema.nullable(),
	utcCreatedAt: z.string(),
	utcUpdatedAt: z.string(),
	utcExpiresAt: z.string().nullable(),
	utcRedeemedAt: z.string().nullable(),
	utcConfirmedAt: z.string().nullable(),
	uuid: z.string(),
	VisibleContactFields: z.array(contactFieldSchema),
	voucher: ticketSchema,
	identity: identitySchema.optional(),
	identityId: z.string().optional(),
});
