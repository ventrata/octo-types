// Generated by ts-to-zod
import { z } from 'zod';
import { settlementMethodSchema } from './SettlementMethod';
import { resellerSchema } from './Reseller';
import { agentSchema } from './Agent';
import { customerContactSchema } from './CustomerContact';
import { bookingSchema } from './Booking';
import { contactFieldSchema } from './ContactField';
import { userSchema } from './User';
import { sellerSchema } from './Seller';
import { identitySchema } from './Identity';
import { offerCombinationSchema } from './OfferCombination';
import { giftPaymentSchema } from './GiftPayment';

export const orderSchema = z.object({
	id: z.string(),
	testMode: z.boolean(),
	settlementMethod: settlementMethodSchema,
	supplierReference: z.string(),
	quote: z.boolean(),
	status: z.string(),
	utcExpiresAt: z.string().nullable(),
	utcConfirmedAt: z.string().nullable(),
	cancellable: z.boolean(),
	confirmable: z.boolean(),
	reseller: resellerSchema.optional(),
	agent: agentSchema.optional(),
	contact: customerContactSchema.optional(),
	emailReceipt: z.boolean().optional(),
	bookings: z.array(bookingSchema),
	visibleContactFields: z.array(contactFieldSchema),
	requiredContactFields: z.array(contactFieldSchema),
	user: userSchema.nullable(),
	seller: sellerSchema.nullable(),
	identity: identitySchema.optional(),
	identityId: z.string().optional(),
	offerCombinations: z.array(offerCombinationSchema).optional(),
	giftPayment: giftPaymentSchema.optional().nullable(),
});
