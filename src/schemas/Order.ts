// Generated by ts-to-zod
import { z } from 'zod';
import { settlementMethodSchema } from './SettlementMethod';
import { customerContactSchema } from './CustomerContact';
import { bookingSchema } from './Booking';
import { contactFieldSchema } from './ContactField';
import { ticketSchema } from './Ticket';
import { destinationSchema } from './Destination';
import { brandSchema } from './Brand';
import { pricingSchema } from './Pricing';
import { questionAnswerSchema } from './QuestionAnswer';
import { identitySchema } from './Identity';
import { offerCombinationSchema } from './OfferCombination';
import { giftPaymentSchema } from './GiftPayment';
import { giftSchema } from './Gift';
import { membershipSchema } from './Membership';
import { cardPaymentSchema } from './CardPayment';

export const orderSchema = z.object({
	id: z.string(),
	testMode: z.boolean(),
	settlementMethod: settlementMethodSchema,
	settlementMethods: z.array(settlementMethodSchema),
	supplierReference: z.string(),
	quote: z.boolean(),
	status: z.string(),
	utcCreatedAt: z.string(),
	utcExpiresAt: z.string().nullable(),
	utcConfirmedAt: z.string().nullable(),
	utcUpdatedAt: z.string().nullable(),
	cancellable: z.boolean(),
	confirmable: z.boolean(),
	updatable: z.boolean(),
	contact: customerContactSchema.optional(),
	emailReceipt: z.boolean().optional(),
	bookings: z.array(bookingSchema),
	visibleContactFields: z.array(contactFieldSchema),
	requiredContactFields: z.array(contactFieldSchema),
	voucher: ticketSchema.nullable(),
	termsAccepted: z.boolean().optional(),
	destination: destinationSchema.optional(),
	brand: brandSchema.optional(),
	pricing: pricingSchema.optional(),
	questionAnswers: z.array(questionAnswerSchema).optional(),
	identity: identitySchema.optional(),
	identityId: z.string().optional(),
	offerCombinations: z.array(offerCombinationSchema).optional(),
	giftPayment: giftPaymentSchema.optional().nullable(),
	gifts: z.array(giftSchema).optional(),
	checkinAvailable: z.boolean().optional(),
	checkinUrl: z.string().optional().nullable(),
	membership: membershipSchema.optional().nullable(),
	cardPayment: cardPaymentSchema.optional().nullable(),
	returnUrl: z.string().optional().nullable(),
});
