// Generated by ts-to-zod
import { z } from 'zod';
import { durationUnitSchema } from './DurationUnit';
import { type Option } from '../models/Option';
import { contactFieldSchema } from './ContactField';
import { optionRestrictionsSchema } from './OptionRestrictions';
import { unitSchema } from './Unit';
import { itineraryItemSchema } from './ItineraryItem';
import { pointSchema } from './Point';
import { pickupPointSchema } from './PickupPoint';
import { octo_PricingSchema } from './Octo_Pricing';
import { questionSchema } from './Question';
import { extraSchema } from './Extra';
import { packageIncludeSchema } from './PackageInclude';

export const optionSchema: z.ZodSchema<Option> = z.lazy(() =>
	z.object({
		id: z.string(),
		default: z.boolean(),
		internalName: z.string(),
		reference: z.string().nullable(),
		availabilityLocalStartTimes: z.array(z.string()),
		cancellationCutoff: z.string(),
		cancellationCutoffAmount: z.number(),
		cancellationCutoffUnit: durationUnitSchema,
		requiredContactFields: z.array(contactFieldSchema),
		availabilityCutoff: z.string(),
		availabilityCutoffAmount: z.number(),
		availabilityCutoffUnit: durationUnitSchema,
		tags: z.array(z.string()),
		visibleContactFields: z.array(contactFieldSchema),
		restrictions: optionRestrictionsSchema,
		units: z.array(unitSchema),
		title: z.string().optional(),
		subtitle: z.string().optional().nullable(),
		language: z.string().optional(),
		shortDescription: z.string().optional().nullable(),
		duration: z.string().optional(),
		durationAmount: z.number().optional(),
		durationUnit: durationUnitSchema.optional(),
		coverImageUrl: z.string().optional().nullable(),
		itinerary: z.array(itineraryItemSchema).optional().nullable(),
		fromPoint: pointSchema.optional().nullable(),
		toPoint: pointSchema.optional().nullable(),
		pickupAvailable: z.boolean().optional(),
		pickupRequired: z.boolean().optional(),
		pickupPoints: z.array(pickupPointSchema).optional(),
		pricingFrom: z.array(octo_PricingSchema).optional(),
		pricing: z.array(octo_PricingSchema).optional(),
		questions: z.array(questionSchema).optional(),
		extras: z.array(extraSchema).optional(),
		packageIncludes: z.array(packageIncludeSchema).optional(),
	}),
);
